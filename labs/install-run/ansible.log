2019-03-20 13:04:58,682 p=9913 u=student |  PLAY [Initialization Checkpoint Start] *************************************************************************
2019-03-20 13:04:58,695 p=9913 u=student |  TASK [Set install initialization 'In Progress'] ****************************************************************
2019-03-20 13:04:58,729 p=9913 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:04:58,735 p=9913 u=student |  PLAY [Populate config host groups] *****************************************************************************
2019-03-20 13:04:58,741 p=9913 u=student |  TASK [Load group name mapping variables] ***********************************************************************
2019-03-20 13:04:58,759 p=9913 u=student |  ok: [localhost]
2019-03-20 13:04:58,764 p=9913 u=student |  TASK [Evaluate groups - g_etcd_hosts or g_new_etcd_hosts required] *********************************************
2019-03-20 13:04:58,782 p=9913 u=student |  skipping: [localhost]
2019-03-20 13:04:58,786 p=9913 u=student |  TASK [Evaluate groups - g_master_hosts or g_new_master_hosts required] *****************************************
2019-03-20 13:04:58,802 p=9913 u=student |  skipping: [localhost]
2019-03-20 13:04:58,806 p=9913 u=student |  TASK [Evaluate groups - g_node_hosts or g_new_node_hosts required] *********************************************
2019-03-20 13:04:58,822 p=9913 u=student |  skipping: [localhost]
2019-03-20 13:04:58,825 p=9913 u=student |  TASK [Evaluate groups - g_lb_hosts required] *******************************************************************
2019-03-20 13:04:58,838 p=9913 u=student |  skipping: [localhost]
2019-03-20 13:04:58,842 p=9913 u=student |  TASK [Evaluate groups - g_nfs_hosts required] ******************************************************************
2019-03-20 13:04:58,857 p=9913 u=student |  skipping: [localhost]
2019-03-20 13:04:58,861 p=9913 u=student |  TASK [Evaluate groups - g_nfs_hosts is single host] ************************************************************
2019-03-20 13:04:58,876 p=9913 u=student |  skipping: [localhost]
2019-03-20 13:04:58,880 p=9913 u=student |  TASK [Evaluate groups - g_glusterfs_hosts required] ************************************************************
2019-03-20 13:04:58,893 p=9913 u=student |  skipping: [localhost]
2019-03-20 13:04:58,896 p=9913 u=student |  TASK [Evaluate groups - Fail if no etcd hosts group is defined] ************************************************
2019-03-20 13:04:58,912 p=9913 u=student |  skipping: [localhost]
2019-03-20 13:04:58,916 p=9913 u=student |  TASK [Evaluate oo_all_hosts] ***********************************************************************************
2019-03-20 13:04:58,954 p=9913 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:04:58,961 p=9913 u=student |  ok: [localhost] => (item=node1.lab.example.com)
2019-03-20 13:04:58,965 p=9913 u=student |  ok: [localhost] => (item=node2.lab.example.com)
2019-03-20 13:04:58,971 p=9913 u=student |  ok: [localhost] => (item=services.lab.example.com)
2019-03-20 13:04:58,976 p=9913 u=student |  TASK [Evaluate oo_masters] *************************************************************************************
2019-03-20 13:04:58,999 p=9913 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:04:59,004 p=9913 u=student |  TASK [Evaluate oo_first_master] ********************************************************************************
2019-03-20 13:04:59,026 p=9913 u=student |  ok: [localhost]
2019-03-20 13:04:59,030 p=9913 u=student |  TASK [Evaluate oo_new_etcd_to_config] **************************************************************************
2019-03-20 13:04:59,046 p=9913 u=student |  TASK [Evaluate oo_masters_to_config] ***************************************************************************
2019-03-20 13:04:59,070 p=9913 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:04:59,075 p=9913 u=student |  TASK [Evaluate oo_etcd_to_config] ******************************************************************************
2019-03-20 13:04:59,097 p=9913 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:04:59,103 p=9913 u=student |  TASK [Evaluate oo_first_etcd] **********************************************************************************
2019-03-20 13:04:59,125 p=9913 u=student |  ok: [localhost]
2019-03-20 13:04:59,129 p=9913 u=student |  TASK [Evaluate oo_etcd_hosts_to_upgrade] ***********************************************************************
2019-03-20 13:04:59,149 p=9913 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:04:59,154 p=9913 u=student |  TASK [Evaluate oo_etcd_hosts_to_backup] ************************************************************************
2019-03-20 13:04:59,175 p=9913 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:04:59,179 p=9913 u=student |  TASK [Evaluate oo_nodes_to_config] *****************************************************************************
2019-03-20 13:04:59,205 p=9913 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:04:59,210 p=9913 u=student |  ok: [localhost] => (item=node1.lab.example.com)
2019-03-20 13:04:59,215 p=9913 u=student |  ok: [localhost] => (item=node2.lab.example.com)
2019-03-20 13:04:59,221 p=9913 u=student |  TASK [Add master to oo_nodes_to_config] ************************************************************************
2019-03-20 13:04:59,240 p=9913 u=student |  skipping: [localhost] => (item=master.lab.example.com) 
2019-03-20 13:04:59,245 p=9913 u=student |  TASK [Evaluate oo_lb_to_config] ********************************************************************************
2019-03-20 13:04:59,260 p=9913 u=student |  TASK [Evaluate oo_nfs_to_config] *******************************************************************************
2019-03-20 13:04:59,285 p=9913 u=student |  ok: [localhost] => (item=services.lab.example.com)
2019-03-20 13:04:59,291 p=9913 u=student |  TASK [Evaluate oo_glusterfs_to_config] *************************************************************************
2019-03-20 13:04:59,309 p=9913 u=student |  TASK [Evaluate oo_etcd_to_migrate] *****************************************************************************
2019-03-20 13:04:59,333 p=9913 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:04:59,337 p=9913 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_lb_to_config

2019-03-20 13:04:59,339 p=9913 u=student |  PLAY [Ensure that all non-node hosts are accessible] ***********************************************************
2019-03-20 13:04:59,345 p=9913 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:05:00,389 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:00,425 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:00,442 p=9913 u=student |  PLAY [Initialize basic host facts] *****************************************************************************
2019-03-20 13:05:00,451 p=9913 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:05:01,071 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:01,090 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:01,436 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:01,467 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:01,484 p=9913 u=student |  TASK [openshift_sanitize_inventory : include_tasks] ************************************************************
2019-03-20 13:05:01,565 p=9913 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_sanitize_inventory/tasks/deprecations.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com, services.lab.example.com
2019-03-20 13:05:01,622 p=9913 u=student |  TASK [openshift_sanitize_inventory : Check for usage of deprecated variables] **********************************
2019-03-20 13:05:01,737 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:01,738 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:01,738 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:01,747 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:01,756 p=9913 u=student |  TASK [openshift_sanitize_inventory : debug] ********************************************************************
2019-03-20 13:05:01,799 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:01,799 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:01,800 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:01,802 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:01,811 p=9913 u=student |  TASK [openshift_sanitize_inventory : set_stats] ****************************************************************
2019-03-20 13:05:01,855 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:01,855 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:01,855 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:01,858 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:01,866 p=9913 u=student |  TASK [openshift_sanitize_inventory : Assign deprecated variables to correct counterparts] **********************
2019-03-20 13:05:01,969 p=9913 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_sanitize_inventory/tasks/__deprecations_logging.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com, services.lab.example.com
2019-03-20 13:05:01,983 p=9913 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_sanitize_inventory/tasks/__deprecations_metrics.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com, services.lab.example.com
2019-03-20 13:05:01,992 p=9913 u=student |  TASK [openshift_sanitize_inventory : conditional_set_fact] *****************************************************
2019-03-20 13:05:02,075 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:02,075 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:02,087 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:02,094 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:02,102 p=9913 u=student |  TASK [openshift_sanitize_inventory : set_fact] *****************************************************************
2019-03-20 13:05:02,159 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:02,177 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:02,178 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:02,193 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:02,202 p=9913 u=student |  TASK [openshift_sanitize_inventory : conditional_set_fact] *****************************************************
2019-03-20 13:05:02,289 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:02,291 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:02,297 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:02,309 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:02,318 p=9913 u=student |  TASK [openshift_sanitize_inventory : Standardize on latest variable names] *************************************
2019-03-20 13:05:02,395 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:02,401 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:02,411 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:02,428 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:02,436 p=9913 u=student |  TASK [openshift_sanitize_inventory : Normalize openshift_release] **********************************************
2019-03-20 13:05:02,508 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:02,528 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:02,536 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:02,553 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:02,563 p=9913 u=student |  TASK [openshift_sanitize_inventory : Abort when openshift_release is invalid] **********************************
2019-03-20 13:05:02,603 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:02,604 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:02,614 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:02,624 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:02,634 p=9913 u=student |  TASK [openshift_sanitize_inventory : include_tasks] ************************************************************
2019-03-20 13:05:02,672 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:02,673 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:02,680 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:02,687 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:02,696 p=9913 u=student |  TASK [openshift_sanitize_inventory : Ensure clusterid is set along with the cloudprovider] *********************
2019-03-20 13:05:02,742 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:02,742 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:02,743 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:02,748 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:02,757 p=9913 u=student |  TASK [openshift_sanitize_inventory : Ensure ansible_service_broker_remove and ansible_service_broker_install are mutually exclusive] ***
2019-03-20 13:05:02,791 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:02,795 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:02,797 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:02,807 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:02,816 p=9913 u=student |  TASK [openshift_sanitize_inventory : Ensure template_service_broker_remove and template_service_broker_install are mutually exclusive] ***
2019-03-20 13:05:02,847 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:02,848 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:02,853 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:02,859 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:02,867 p=9913 u=student |  TASK [openshift_sanitize_inventory : Ensure that all requires vsphere configuration variables are set] *********
2019-03-20 13:05:02,898 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:02,899 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:02,903 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:02,910 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:02,918 p=9913 u=student |  TASK [openshift_sanitize_inventory : Ensure removed web console extension variables are not set] ***************
2019-03-20 13:05:02,939 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:02,960 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:02,961 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:02,965 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:02,973 p=9913 u=student |  TASK [openshift_sanitize_inventory : Ensure that web console port matches API server port] *********************
2019-03-20 13:05:03,012 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:03,012 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:03,015 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:03,026 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:03,034 p=9913 u=student |  TASK [Detecting Operating System from ostree_booted] ***********************************************************
2019-03-20 13:05:03,477 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:03,486 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:03,508 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:03,527 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:03,535 p=9913 u=student |  TASK [set openshift_deployment_type if unset] ******************************************************************
2019-03-20 13:05:03,574 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:03,574 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:03,575 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:03,581 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:03,589 p=9913 u=student |  TASK [initialize_facts set fact openshift_is_atomic and openshift_is_containerized] ****************************
2019-03-20 13:05:03,656 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:03,661 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:03,664 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:03,678 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:03,687 p=9913 u=student |  TASK [Set use_crio to True if cri-o rpm is requested] **********************************************************
2019-03-20 13:05:03,728 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:03,728 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:03,729 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:03,736 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:03,744 p=9913 u=student |  TASK [Determine Atomic Host Docker Version] ********************************************************************
2019-03-20 13:05:03,781 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:03,782 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:03,786 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:03,795 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:03,803 p=9913 u=student |  TASK [assert atomic host docker version is 1.12 or later] ******************************************************
2019-03-20 13:05:03,838 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:03,839 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:03,841 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:03,845 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:03,850 p=9913 u=student |  PLAY [Initialize special first-master variables] ***************************************************************
2019-03-20 13:05:03,857 p=9913 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:05:04,310 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:04,327 p=9913 u=student |  TASK [stat] ****************************************************************************************************
2019-03-20 13:05:04,607 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:04,616 p=9913 u=student |  TASK [slurp] ***************************************************************************************************
2019-03-20 13:05:04,636 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:04,645 p=9913 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-20 13:05:04,664 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:04,675 p=9913 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-20 13:05:04,711 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:04,716 p=9913 u=student |  PLAY [Disable web console if required] *************************************************************************
2019-03-20 13:05:04,724 p=9913 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-20 13:05:04,740 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:04,750 p=9913 u=student |  PLAY [Install packages necessary for installer] ****************************************************************
2019-03-20 13:05:04,759 p=9913 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:05:05,416 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:05,441 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:05,462 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:05,501 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:05,518 p=9913 u=student |  TASK [Ensure openshift-ansible installer package deps are installed] *******************************************
2019-03-20 13:05:06,305 p=9913 u=student |  ok: [master.lab.example.com] => (item=iproute)
2019-03-20 13:05:06,366 p=9913 u=student |  ok: [node2.lab.example.com] => (item=iproute)
2019-03-20 13:05:06,435 p=9913 u=student |  ok: [node1.lab.example.com] => (item=iproute)
2019-03-20 13:05:06,488 p=9913 u=student |  ok: [services.lab.example.com] => (item=iproute)
2019-03-20 13:05:07,012 p=9913 u=student |  ok: [services.lab.example.com] => (item=dbus-python)
2019-03-20 13:05:07,072 p=9913 u=student |  ok: [node2.lab.example.com] => (item=dbus-python)
2019-03-20 13:05:07,110 p=9913 u=student |  ok: [master.lab.example.com] => (item=dbus-python)
2019-03-20 13:05:07,120 p=9913 u=student |  ok: [node1.lab.example.com] => (item=dbus-python)
2019-03-20 13:05:07,624 p=9913 u=student |  ok: [node2.lab.example.com] => (item=PyYAML)
2019-03-20 13:05:07,674 p=9913 u=student |  ok: [node1.lab.example.com] => (item=PyYAML)
2019-03-20 13:05:07,731 p=9913 u=student |  ok: [services.lab.example.com] => (item=PyYAML)
2019-03-20 13:05:07,794 p=9913 u=student |  ok: [master.lab.example.com] => (item=PyYAML)
2019-03-20 13:05:08,270 p=9913 u=student |  ok: [node1.lab.example.com] => (item=python-ipaddress)
2019-03-20 13:05:08,320 p=9913 u=student |  ok: [services.lab.example.com] => (item=python-ipaddress)
2019-03-20 13:05:08,324 p=9913 u=student |  ok: [node2.lab.example.com] => (item=python-ipaddress)
2019-03-20 13:05:08,501 p=9913 u=student |  ok: [master.lab.example.com] => (item=python-ipaddress)
2019-03-20 13:05:08,862 p=9913 u=student |  ok: [services.lab.example.com] => (item=yum-utils)
2019-03-20 13:05:08,910 p=9913 u=student |  ok: [node1.lab.example.com] => (item=yum-utils)
2019-03-20 13:05:08,969 p=9913 u=student |  ok: [node2.lab.example.com] => (item=yum-utils)
2019-03-20 13:05:09,020 p=9913 u=student |  ok: [master.lab.example.com] => (item=yum-utils)
2019-03-20 13:05:09,030 p=9913 u=student |  TASK [Ensure various deps for running system containers are installed] *****************************************
2019-03-20 13:05:09,089 p=9913 u=student |  skipping: [master.lab.example.com] => (item=atomic) 
2019-03-20 13:05:09,089 p=9913 u=student |  skipping: [master.lab.example.com] => (item=ostree) 
2019-03-20 13:05:09,090 p=9913 u=student |  skipping: [master.lab.example.com] => (item=runc) 
2019-03-20 13:05:09,114 p=9913 u=student |  skipping: [services.lab.example.com] => (item=atomic) 
2019-03-20 13:05:09,126 p=9913 u=student |  skipping: [node1.lab.example.com] => (item=atomic) 
2019-03-20 13:05:09,127 p=9913 u=student |  skipping: [services.lab.example.com] => (item=ostree) 
2019-03-20 13:05:09,127 p=9913 u=student |  skipping: [services.lab.example.com] => (item=runc) 
2019-03-20 13:05:09,142 p=9913 u=student |  skipping: [node2.lab.example.com] => (item=atomic) 
2019-03-20 13:05:09,144 p=9913 u=student |  skipping: [node1.lab.example.com] => (item=ostree) 
2019-03-20 13:05:09,145 p=9913 u=student |  skipping: [node2.lab.example.com] => (item=ostree) 
2019-03-20 13:05:09,145 p=9913 u=student |  skipping: [node2.lab.example.com] => (item=runc) 
2019-03-20 13:05:09,148 p=9913 u=student |  skipping: [node1.lab.example.com] => (item=runc) 
2019-03-20 13:05:09,156 p=9913 u=student |  PLAY [Initialize cluster facts] ********************************************************************************
2019-03-20 13:05:09,164 p=9913 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:05:09,823 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:09,863 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:09,896 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:09,910 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:09,927 p=9913 u=student |  TASK [Gather Cluster facts] ************************************************************************************
2019-03-20 13:05:11,051 p=9913 u=student |  changed: [services.lab.example.com]
2019-03-20 13:05:11,256 p=9913 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:05:11,268 p=9913 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:05:11,275 p=9913 u=student |  changed: [master.lab.example.com]
2019-03-20 13:05:11,283 p=9913 u=student |  TASK [Set fact of no_proxy_internal_hostnames] *****************************************************************
2019-03-20 13:05:11,320 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:11,320 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:11,323 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:11,332 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:11,340 p=9913 u=student |  TASK [Initialize openshift.node.sdn_mtu] ***********************************************************************
2019-03-20 13:05:12,088 p=9913 u=student |  changed: [services.lab.example.com]
2019-03-20 13:05:12,248 p=9913 u=student |  changed: [master.lab.example.com]
2019-03-20 13:05:12,297 p=9913 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:05:12,355 p=9913 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:05:12,363 p=9913 u=student |  PLAY [Determine openshift_version to configure on first master] ************************************************
2019-03-20 13:05:12,371 p=9913 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:05:12,385 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:12,394 p=9913 u=student |  TASK [include_role] ********************************************************************************************
2019-03-20 13:05:12,410 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:12,418 p=9913 u=student |  TASK [debug] ***************************************************************************************************
2019-03-20 13:05:12,434 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:12,440 p=9913 u=student |  PLAY [Set openshift_version for etcd, node, and master hosts] **************************************************
2019-03-20 13:05:12,440 p=9913 u=student |  skipping: no hosts matched
2019-03-20 13:05:12,443 p=9913 u=student |  PLAY [Ensure the requested version packages are available.] ****************************************************
2019-03-20 13:05:12,443 p=9913 u=student |  skipping: no hosts matched
2019-03-20 13:05:12,445 p=9913 u=student |  PLAY [Verify Requirements] *************************************************************************************
2019-03-20 13:05:12,453 p=9913 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:05:12,935 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:12,952 p=9913 u=student |  TASK [Run variable sanity checks] ******************************************************************************
2019-03-20 13:05:13,156 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:13,161 p=9913 u=student |  PLAY [Initialization Checkpoint End] ***************************************************************************
2019-03-20 13:05:13,167 p=9913 u=student |  TASK [Set install initialization 'Complete'] *******************************************************************
2019-03-20 13:05:13,204 p=9913 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:05:13,210 p=9913 u=student |  PLAY [Validate node hostnames] *********************************************************************************
2019-03-20 13:05:13,218 p=9913 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:05:13,836 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:13,857 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:13,877 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:13,895 p=9913 u=student |  TASK [Query DNS for IP address of master.lab.example.com] ******************************************************
2019-03-20 13:05:14,371 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:14,379 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:14,387 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:14,395 p=9913 u=student |  TASK [Validate openshift_hostname when defined] ****************************************************************
2019-03-20 13:05:14,425 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:14,431 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:14,436 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:14,444 p=9913 u=student |  TASK [Validate openshift_ip exists on node when defined] *******************************************************
2019-03-20 13:05:14,472 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:14,475 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:14,481 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:14,489 p=9913 u=student |  PLAY [Setup yum repositories for all hosts] ********************************************************************
2019-03-20 13:05:14,498 p=9913 u=student |  TASK [rhel_subscribe : fail] ***********************************************************************************
2019-03-20 13:05:14,548 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:14,549 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:14,549 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:14,550 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:14,559 p=9913 u=student |  TASK [rhel_subscribe : Install Red Hat Subscription manager] ***************************************************
2019-03-20 13:05:14,601 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:14,605 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:14,618 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:14,624 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:14,634 p=9913 u=student |  TASK [rhel_subscribe : Is host already registered?] ************************************************************
2019-03-20 13:05:14,680 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:14,680 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:14,687 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:14,693 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:14,701 p=9913 u=student |  TASK [rhel_subscribe : Register host] **************************************************************************
2019-03-20 13:05:14,750 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:14,751 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:14,753 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:14,758 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:14,767 p=9913 u=student |  TASK [rhel_subscribe : fail] ***********************************************************************************
2019-03-20 13:05:14,794 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:14,815 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:14,823 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:14,823 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:14,831 p=9913 u=student |  TASK [rhel_subscribe : Determine if OpenShift Pool Already Attached] *******************************************
2019-03-20 13:05:14,877 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:14,878 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:14,878 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:14,883 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:14,891 p=9913 u=student |  TASK [rhel_subscribe : Attach to OpenShift Pool] ***************************************************************
2019-03-20 13:05:14,933 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:14,939 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:14,942 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:14,946 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:14,954 p=9913 u=student |  TASK [rhel_subscribe : include_tasks] **************************************************************************
2019-03-20 13:05:14,997 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:15,001 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:15,003 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:15,005 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:15,013 p=9913 u=student |  TASK [openshift_repos : openshift_repos detect ostree] *********************************************************
2019-03-20 13:05:15,455 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:15,456 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:15,461 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:15,467 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:15,476 p=9913 u=student |  TASK [openshift_repos : Ensure libselinux-python is installed] *************************************************
2019-03-20 13:05:16,093 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:16,104 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:16,169 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:16,170 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:16,178 p=9913 u=student |  TASK [openshift_repos : Remove openshift_additional.repo file] *************************************************
2019-03-20 13:05:16,769 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:16,787 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:16,806 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:16,823 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:16,832 p=9913 u=student |  TASK [openshift_repos : Create any additional repos that are defined] ******************************************
2019-03-20 13:05:16,882 p=9913 u=student |  TASK [openshift_repos : include_tasks] *************************************************************************
2019-03-20 13:05:16,937 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:16,937 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:16,941 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:16,949 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:16,957 p=9913 u=student |  TASK [openshift_repos : include_tasks] *************************************************************************
2019-03-20 13:05:17,012 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:17,016 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:17,017 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:17,027 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:17,035 p=9913 u=student |  TASK [openshift_repos : Ensure clean repo cache in the event repos have been changed manually] *****************
2019-03-20 13:05:17,100 p=9913 u=student |  changed: [master.lab.example.com] => {
    "msg": "First run of openshift_repos"
}
2019-03-20 13:05:17,107 p=9913 u=student |  changed: [node2.lab.example.com] => {
    "msg": "First run of openshift_repos"
}
2019-03-20 13:05:17,115 p=9913 u=student |  changed: [node1.lab.example.com] => {
    "msg": "First run of openshift_repos"
}
2019-03-20 13:05:17,135 p=9913 u=student |  changed: [services.lab.example.com] => {
    "msg": "First run of openshift_repos"
}
2019-03-20 13:05:17,142 p=9913 u=student |  TASK [openshift_repos : Record that openshift_repos already ran] ***********************************************
2019-03-20 13:05:17,199 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:17,212 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:17,221 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:17,238 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:17,239 p=9913 u=student |  RUNNING HANDLER [openshift_repos : refresh cache] **************************************************************
2019-03-20 13:05:17,890 p=9913 u=student |  changed: [master.lab.example.com]
2019-03-20 13:05:17,911 p=9913 u=student |  changed: [services.lab.example.com]
2019-03-20 13:05:17,926 p=9913 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:05:17,950 p=9913 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:05:17,959 p=9913 u=student |  PLAY [Configure os_firewall] ***********************************************************************************
2019-03-20 13:05:17,968 p=9913 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:05:18,782 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:18,800 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:18,823 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:18,836 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:18,854 p=9913 u=student |  TASK [os_firewall : Detecting Atomic Host Operating System] ****************************************************
2019-03-20 13:05:19,339 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:19,384 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:19,396 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:19,396 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:19,403 p=9913 u=student |  TASK [os_firewall : Set fact r_os_firewall_is_atomic] **********************************************************
2019-03-20 13:05:19,459 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:19,465 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:19,472 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:19,488 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:19,497 p=9913 u=student |  TASK [os_firewall : include_tasks] *****************************************************************************
2019-03-20 13:05:19,581 p=9913 u=student |  included: /usr/share/ansible/openshift-ansible/roles/os_firewall/tasks/firewalld.yml for master.lab.example.com, services.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:05:19,592 p=9913 u=student |  TASK [os_firewall : Fail - Firewalld is not supported on Atomic Host] ******************************************
2019-03-20 13:05:19,644 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:19,646 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:19,650 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:19,659 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:19,668 p=9913 u=student |  TASK [os_firewall : Install firewalld packages] ****************************************************************
2019-03-20 13:05:20,344 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:20,366 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:20,405 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:20,423 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:20,431 p=9913 u=student |  TASK [os_firewall : Ensure iptables services are not enabled] **************************************************
2019-03-20 13:05:21,101 p=9913 u=student |  changed: [node2.lab.example.com] => (item=iptables)
2019-03-20 13:05:21,142 p=9913 u=student |  changed: [node1.lab.example.com] => (item=iptables)
2019-03-20 13:05:21,164 p=9913 u=student |  ok: [services.lab.example.com] => (item=iptables)
2019-03-20 13:05:21,186 p=9913 u=student |  changed: [master.lab.example.com] => (item=iptables)
2019-03-20 13:05:21,634 p=9913 u=student |  changed: [node1.lab.example.com] => (item=ip6tables)
2019-03-20 13:05:21,666 p=9913 u=student |  ok: [services.lab.example.com] => (item=ip6tables)
2019-03-20 13:05:21,669 p=9913 u=student |  changed: [node2.lab.example.com] => (item=ip6tables)
2019-03-20 13:05:21,684 p=9913 u=student |  changed: [master.lab.example.com] => (item=ip6tables)
2019-03-20 13:05:21,707 p=9913 u=student |  TASK [os_firewall : Wait 10 seconds after disabling iptables] **************************************************
2019-03-20 13:05:21,741 p=9913 u=student |  Pausing for 10 seconds
2019-03-20 13:05:21,741 p=9913 u=student |  (ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
2019-03-20 13:05:31,747 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:31,756 p=9913 u=student |  TASK [os_firewall : Start and enable firewalld service] ********************************************************
2019-03-20 13:05:32,236 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:32,242 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:32,258 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:32,280 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:32,291 p=9913 u=student |  TASK [os_firewall : need to pause here, otherwise the firewalld service starting can sometimes cause ssh to fail] ***
2019-03-20 13:05:32,305 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:32,314 p=9913 u=student |  TASK [os_firewall : Restart polkitd] ***************************************************************************
2019-03-20 13:05:32,355 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:32,355 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:32,356 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:32,358 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:32,366 p=9913 u=student |  TASK [os_firewall : Wait for polkit action to have been created] ***********************************************
2019-03-20 13:05:32,829 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:32,839 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:32,858 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:32,874 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:32,882 p=9913 u=student |  TASK [os_firewall : include_tasks] *****************************************************************************
2019-03-20 13:05:32,924 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:32,924 p=9913 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:05:32,926 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:32,928 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:32,935 p=9913 u=student |  PLAY [create oo_hosts_containerized_managed_true host group] ***************************************************
2019-03-20 13:05:32,942 p=9913 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:05:33,371 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:33,385 p=9913 u=student |  TASK [group_by] ************************************************************************************************
2019-03-20 13:05:33,416 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:33,423 p=9913 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_hosts_containerized_managed_true

2019-03-20 13:05:33,427 p=9913 u=student |  PLAY [oo_nodes_to_config:oo_hosts_containerized_managed_true] **************************************************
2019-03-20 13:05:33,436 p=9913 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:05:34,075 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:34,099 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:34,114 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:34,132 p=9913 u=student |  TASK [container_runtime : Setup the docker-storage for overlay] ************************************************
2019-03-20 13:05:34,162 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:34,162 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:34,170 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:34,178 p=9913 u=student |  PLAY [create oo_hosts_containerized_managed_true host group] ***************************************************
2019-03-20 13:05:34,184 p=9913 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:05:34,609 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:34,626 p=9913 u=student |  TASK [group_by] ************************************************************************************************
2019-03-20 13:05:34,663 p=9913 u=student |  ok: [services.lab.example.com]
2019-03-20 13:05:34,675 p=9913 u=student |  PLAY [oo_nodes_to_config:oo_hosts_containerized_managed_true] **************************************************
2019-03-20 13:05:34,688 p=9913 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:05:35,312 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:35,337 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:35,351 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:35,369 p=9913 u=student |  TASK [openshift_excluder : Install excluders] ******************************************************************
2019-03-20 13:05:35,443 p=9913 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/install.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:05:35,453 p=9913 u=student |  TASK [openshift_excluder : Install docker excluder - yum] ******************************************************
2019-03-20 13:05:40,820 p=9913 u=student |  changed: [master.lab.example.com]
2019-03-20 13:05:41,946 p=9913 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:05:42,089 p=9913 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:05:42,097 p=9913 u=student |  TASK [openshift_excluder : Install docker excluder - dnf] ******************************************************
2019-03-20 13:05:42,134 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:42,142 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:42,151 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:42,160 p=9913 u=student |  TASK [openshift_excluder : Install openshift excluder - yum] ***************************************************
2019-03-20 13:05:42,198 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:42,198 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:42,205 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:42,214 p=9913 u=student |  TASK [openshift_excluder : Install openshift excluder - dnf] ***************************************************
2019-03-20 13:05:42,241 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:42,249 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:42,260 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:42,269 p=9913 u=student |  TASK [openshift_excluder : set_fact] ***************************************************************************
2019-03-20 13:05:42,322 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:42,327 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:42,344 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:42,353 p=9913 u=student |  TASK [openshift_excluder : Enable excluders] *******************************************************************
2019-03-20 13:05:42,428 p=9913 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/exclude.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:05:42,442 p=9913 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-20 13:05:42,832 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:42,835 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:42,861 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:42,871 p=9913 u=student |  TASK [openshift_excluder : Enable docker excluder] *************************************************************
2019-03-20 13:05:43,256 p=9913 u=student |  changed: [master.lab.example.com]
2019-03-20 13:05:43,278 p=9913 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:05:43,279 p=9913 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:05:43,288 p=9913 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-20 13:05:43,652 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:43,674 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:43,690 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:43,699 p=9913 u=student |  TASK [openshift_excluder : Enable openshift excluder] **********************************************************
2019-03-20 13:05:43,732 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:43,732 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:43,738 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:43,749 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:43,838 p=9913 u=student |  included: /usr/share/ansible/openshift-ansible/roles/container_runtime/tasks/common/pre.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:05:43,848 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:43,877 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:43,878 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:43,884 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:43,893 p=9913 u=student |  TASK [container_runtime : Add enterprise registry, if necessary] ***********************************************
2019-03-20 13:05:43,941 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:43,968 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:43,978 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:43,986 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:44,020 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:44,022 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:44,031 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:44,040 p=9913 u=student |  TASK [container_runtime : Get current installed Docker version] ************************************************
2019-03-20 13:05:44,590 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:44,672 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:44,703 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:44,712 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:44,803 p=9913 u=student |  included: /usr/share/ansible/openshift-ansible/roles/container_runtime/tasks/docker_sanity.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:05:44,820 p=9913 u=student |  TASK [container_runtime : Error out if Docker pre-installed but too old] ***************************************
2019-03-20 13:05:44,857 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:44,858 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:44,859 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:44,868 p=9913 u=student |  TASK [container_runtime : Error out if requested Docker is too old] ********************************************
2019-03-20 13:05:44,898 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:44,899 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:44,905 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:44,914 p=9913 u=student |  TASK [container_runtime : Fail if Docker version requested but downgrade is required] **************************
2019-03-20 13:05:44,950 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:44,950 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:44,955 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:44,964 p=9913 u=student |  TASK [container_runtime : Error out if attempting to upgrade Docker across the 1.10 boundary] ******************
2019-03-20 13:05:44,998 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:45,003 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:45,006 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:45,015 p=9913 u=student |  TASK [container_runtime : Install Docker] **********************************************************************
2019-03-20 13:05:45,057 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:45,062 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:45,062 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:45,071 p=9913 u=student |  TASK [container_runtime : Ensure docker.service.d directory exists] ********************************************
2019-03-20 13:05:45,097 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:45,106 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:45,114 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:45,123 p=9913 u=student |  TASK [container_runtime : Configure Docker service unit file] **************************************************
2019-03-20 13:05:45,157 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:45,163 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:45,164 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:45,174 p=9913 u=student |  TASK [container_runtime : stat] ********************************************************************************
2019-03-20 13:05:45,536 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:45,561 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:45,564 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:45,575 p=9913 u=student |  TASK [container_runtime : Set registry params] *****************************************************************
2019-03-20 13:05:46,102 p=9913 u=student |  changed: [master.lab.example.com] => (item={u'reg_conf_var': u'ADD_REGISTRY', u'reg_flag': u'--add-registry', u'reg_fact_val': [u'registry.lab.example.com', u'registry.access.redhat.com']})
2019-03-20 13:05:46,172 p=9913 u=student |  changed: [node2.lab.example.com] => (item={u'reg_conf_var': u'ADD_REGISTRY', u'reg_flag': u'--add-registry', u'reg_fact_val': [u'registry.lab.example.com', u'registry.access.redhat.com']})
2019-03-20 13:05:46,234 p=9913 u=student |  changed: [node1.lab.example.com] => (item={u'reg_conf_var': u'ADD_REGISTRY', u'reg_flag': u'--add-registry', u'reg_fact_val': [u'registry.lab.example.com', u'registry.access.redhat.com']})
2019-03-20 13:05:46,475 p=9913 u=student |  changed: [master.lab.example.com] => (item={u'reg_conf_var': u'BLOCK_REGISTRY', u'reg_flag': u'--block-registry', u'reg_fact_val': [u'registry.access.redhat.com', u'docker.io']})
2019-03-20 13:05:46,498 p=9913 u=student |  skipping: [master.lab.example.com] => (item={u'reg_conf_var': u'INSECURE_REGISTRY', u'reg_flag': u'--insecure-registry', u'reg_fact_val': []}) 
2019-03-20 13:05:46,511 p=9913 u=student |  changed: [node2.lab.example.com] => (item={u'reg_conf_var': u'BLOCK_REGISTRY', u'reg_flag': u'--block-registry', u'reg_fact_val': [u'registry.access.redhat.com', u'docker.io']})
2019-03-20 13:05:46,512 p=9913 u=student |  skipping: [node2.lab.example.com] => (item={u'reg_conf_var': u'INSECURE_REGISTRY', u'reg_flag': u'--insecure-registry', u'reg_fact_val': []}) 
2019-03-20 13:05:46,537 p=9913 u=student |  changed: [node1.lab.example.com] => (item={u'reg_conf_var': u'BLOCK_REGISTRY', u'reg_flag': u'--block-registry', u'reg_fact_val': [u'registry.access.redhat.com', u'docker.io']})
2019-03-20 13:05:46,552 p=9913 u=student |  skipping: [node1.lab.example.com] => (item={u'reg_conf_var': u'INSECURE_REGISTRY', u'reg_flag': u'--insecure-registry', u'reg_fact_val': []}) 
2019-03-20 13:05:46,568 p=9913 u=student |  TASK [container_runtime : Place additional/blocked/insecure registries in /etc/containers/registries.conf] *****
2019-03-20 13:05:46,607 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:46,607 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:46,615 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:46,625 p=9913 u=student |  TASK [container_runtime : Set Proxy Settings] ******************************************************************
2019-03-20 13:05:46,709 p=9913 u=student |  skipping: [master.lab.example.com] => (item={u'reg_conf_var': u'HTTP_PROXY', u'reg_fact_val': u''}) 
2019-03-20 13:05:46,722 p=9913 u=student |  skipping: [node1.lab.example.com] => (item={u'reg_conf_var': u'HTTP_PROXY', u'reg_fact_val': u''}) 
2019-03-20 13:05:46,735 p=9913 u=student |  skipping: [node1.lab.example.com] => (item={u'reg_conf_var': u'HTTPS_PROXY', u'reg_fact_val': u''}) 
2019-03-20 13:05:46,736 p=9913 u=student |  skipping: [node1.lab.example.com] => (item={u'reg_conf_var': u'NO_PROXY', u'reg_fact_val': u''}) 
2019-03-20 13:05:46,752 p=9913 u=student |  skipping: [node2.lab.example.com] => (item={u'reg_conf_var': u'HTTP_PROXY', u'reg_fact_val': u''}) 
2019-03-20 13:05:46,757 p=9913 u=student |  skipping: [master.lab.example.com] => (item={u'reg_conf_var': u'HTTPS_PROXY', u'reg_fact_val': u''}) 
2019-03-20 13:05:46,758 p=9913 u=student |  skipping: [master.lab.example.com] => (item={u'reg_conf_var': u'NO_PROXY', u'reg_fact_val': u''}) 
2019-03-20 13:05:46,763 p=9913 u=student |  skipping: [node2.lab.example.com] => (item={u'reg_conf_var': u'HTTPS_PROXY', u'reg_fact_val': u''}) 
2019-03-20 13:05:46,765 p=9913 u=student |  skipping: [node2.lab.example.com] => (item={u'reg_conf_var': u'NO_PROXY', u'reg_fact_val': u''}) 
2019-03-20 13:05:46,776 p=9913 u=student |  TASK [container_runtime : Set various Docker options] **********************************************************
2019-03-20 13:05:47,155 p=9913 u=student |  changed: [master.lab.example.com]
2019-03-20 13:05:47,177 p=9913 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:05:47,182 p=9913 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:05:47,190 p=9913 u=student |  TASK [container_runtime : stat] ********************************************************************************
2019-03-20 13:05:47,549 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:47,583 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:47,594 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:47,604 p=9913 u=student |  TASK [container_runtime : Configure Docker Network OPTIONS] ****************************************************
2019-03-20 13:05:48,022 p=9913 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:05:48,027 p=9913 u=student |  changed: [master.lab.example.com]
2019-03-20 13:05:48,033 p=9913 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:05:48,041 p=9913 u=student |  TASK [container_runtime : Detect if docker is already started] *************************************************
2019-03-20 13:05:48,418 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:48,419 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:48,440 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:48,450 p=9913 u=student |  TASK [container_runtime : Start the Docker service] ************************************************************
2019-03-20 13:05:48,937 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:48,961 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:48,979 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:48,991 p=9913 u=student |  TASK [container_runtime : set_fact] ****************************************************************************
2019-03-20 13:05:49,042 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:49,075 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:49,085 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:49,094 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:49,193 p=9913 u=student |  included: /usr/share/ansible/openshift-ansible/roles/container_runtime/tasks/common/post.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:05:49,209 p=9913 u=student |  TASK [container_runtime : Ensure /var/lib/containers exists] ***************************************************
2019-03-20 13:05:49,632 p=9913 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:05:49,638 p=9913 u=student |  changed: [master.lab.example.com]
2019-03-20 13:05:49,661 p=9913 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:05:49,672 p=9913 u=student |  TASK [container_runtime : Fix SELinux Permissions on /var/lib/containers] **************************************
2019-03-20 13:05:50,106 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:50,107 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:50,130 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:50,132 p=9913 u=student |  RUNNING HANDLER [container_runtime : restart container runtime] ************************************************
2019-03-20 13:05:53,409 p=9913 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:05:53,427 p=9913 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:05:53,476 p=9913 u=student |  changed: [master.lab.example.com]
2019-03-20 13:05:53,487 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:53,651 p=9913 u=student |  included: /usr/share/ansible/openshift-ansible/roles/container_runtime/tasks/registry_auth.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:05:53,666 p=9913 u=student |  TASK [container_runtime : Check for credentials file for registry auth] ****************************************
2019-03-20 13:05:53,696 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:53,700 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:53,708 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:53,719 p=9913 u=student |  TASK [container_runtime : Create credentials for docker cli registry auth] *************************************
2019-03-20 13:05:53,755 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:53,756 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:53,764 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:53,774 p=9913 u=student |  TASK [container_runtime : Create credentials for docker cli registry auth (alternative)] ***********************
2019-03-20 13:05:53,807 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:53,809 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:53,815 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:53,824 p=9913 u=student |  TASK [container_runtime : stat the docker data dir] ************************************************************
2019-03-20 13:05:54,203 p=9913 u=student |  ok: [master.lab.example.com]
2019-03-20 13:05:54,221 p=9913 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:05:54,246 p=9913 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:05:54,256 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:54,285 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,289 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,294 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:54,303 p=9913 u=student |  TASK [container_runtime : Fail quickly if openshift_docker_options are set] ************************************
2019-03-20 13:05:54,338 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,339 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,347 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:54,356 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:54,386 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,391 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,397 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:54,408 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:54,442 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,442 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,447 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:54,457 p=9913 u=student |  TASK [container_runtime : Install Docker so we can use the client] *********************************************
2019-03-20 13:05:54,485 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,491 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,500 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:54,509 p=9913 u=student |  TASK [container_runtime : Disable Docker] **********************************************************************
2019-03-20 13:05:54,545 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,549 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,554 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:54,563 p=9913 u=student |  TASK [container_runtime : Ensure proxies are in the atomic.conf] ***********************************************
2019-03-20 13:05:54,599 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,601 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,612 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:54,624 p=9913 u=student |  TASK [container_runtime : debug] *******************************************************************************
2019-03-20 13:05:54,662 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,663 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,673 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:54,685 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:54,721 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,721 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,731 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:54,740 p=9913 u=student |  TASK [container_runtime : Pre-pull Container Engine System Container image] ************************************
2019-03-20 13:05:54,771 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,776 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,784 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:54,794 p=9913 u=student |  TASK [container_runtime : Ensure container-engine.service.d directory exists] **********************************
2019-03-20 13:05:54,826 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,826 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,836 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:54,844 p=9913 u=student |  TASK [container_runtime : Ensure /etc/docker directory exists] *************************************************
2019-03-20 13:05:54,875 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,878 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,889 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:54,898 p=9913 u=student |  TASK [container_runtime : Install Container Engine System Container] *******************************************
2019-03-20 13:05:54,932 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,933 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,941 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:54,951 p=9913 u=student |  TASK [container_runtime : Configure Container Engine Service File] *********************************************
2019-03-20 13:05:54,981 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:54,982 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:54,992 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,002 p=9913 u=student |  TASK [container_runtime : Configure Container Engine] **********************************************************
2019-03-20 13:05:55,032 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,033 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,042 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,051 p=9913 u=student |  TASK [container_runtime : Start the Container Engine service] **************************************************
2019-03-20 13:05:55,080 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,081 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,090 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,100 p=9913 u=student |  TASK [container_runtime : set_fact] ****************************************************************************
2019-03-20 13:05:55,125 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,132 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,139 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,148 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:55,178 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,178 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,186 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,195 p=9913 u=student |  TASK [container_runtime : Check we are not using node as a Docker container with CRI-O] ************************
2019-03-20 13:05:55,225 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,225 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,236 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,244 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:55,276 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,276 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,287 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,296 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:55,327 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,328 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,334 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,343 p=9913 u=student |  TASK [container_runtime : Check that overlay is in the kernel] *************************************************
2019-03-20 13:05:55,377 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,378 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,381 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,390 p=9913 u=student |  TASK [container_runtime : Add overlay to modprobe.d] ***********************************************************
2019-03-20 13:05:55,418 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,422 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,432 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,441 p=9913 u=student |  TASK [container_runtime : Manually modprobe overlay into the kernel] *******************************************
2019-03-20 13:05:55,473 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,474 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,478 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,489 p=9913 u=student |  TASK [container_runtime : Enable and start systemd-modules-load] ***********************************************
2019-03-20 13:05:55,520 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,523 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,532 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,542 p=9913 u=student |  TASK [container_runtime : Ensure proxies are in the atomic.conf] ***********************************************
2019-03-20 13:05:55,576 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,577 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,587 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,597 p=9913 u=student |  TASK [container_runtime : debug] *******************************************************************************
2019-03-20 13:05:55,628 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,634 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,643 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,652 p=9913 u=student |  TASK [container_runtime : Pre-pull CRI-O System Container image] ***********************************************
2019-03-20 13:05:55,681 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,688 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,695 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,706 p=9913 u=student |  TASK [container_runtime : Install CRI-O System Container] ******************************************************
2019-03-20 13:05:55,744 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,745 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,750 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,760 p=9913 u=student |  TASK [container_runtime : Remove CRI-O default configuration files] ********************************************
2019-03-20 13:05:55,798 p=9913 u=student |  skipping: [master.lab.example.com] => (item=/etc/cni/net.d/200-loopback.conf) 
2019-03-20 13:05:55,799 p=9913 u=student |  skipping: [master.lab.example.com] => (item=/etc/cni/net.d/100-crio-bridge.conf) 
2019-03-20 13:05:55,805 p=9913 u=student |  skipping: [node1.lab.example.com] => (item=/etc/cni/net.d/200-loopback.conf) 
2019-03-20 13:05:55,806 p=9913 u=student |  skipping: [node1.lab.example.com] => (item=/etc/cni/net.d/100-crio-bridge.conf) 
2019-03-20 13:05:55,811 p=9913 u=student |  skipping: [node2.lab.example.com] => (item=/etc/cni/net.d/200-loopback.conf) 
2019-03-20 13:05:55,815 p=9913 u=student |  skipping: [node2.lab.example.com] => (item=/etc/cni/net.d/100-crio-bridge.conf) 
2019-03-20 13:05:55,824 p=9913 u=student |  TASK [container_runtime : Create the CRI-O configuration] ******************************************************
2019-03-20 13:05:55,858 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,858 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,862 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,873 p=9913 u=student |  TASK [container_runtime : Ensure CNI configuration directory exists] *******************************************
2019-03-20 13:05:55,900 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:55,905 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:55,912 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:55,922 p=9913 u=student |  TASK [container_runtime : Add iptables allow rules] ************************************************************
2019-03-20 13:05:55,958 p=9913 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-20 13:05:55,964 p=9913 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-20 13:05:55,974 p=9913 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-20 13:05:55,985 p=9913 u=student |  TASK [container_runtime : Remove iptables rules] ***************************************************************
2019-03-20 13:05:56,032 p=9913 u=student |  TASK [container_runtime : Add firewalld allow rules] ***********************************************************
2019-03-20 13:05:56,067 p=9913 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-20 13:05:56,074 p=9913 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-20 13:05:56,078 p=9913 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-20 13:05:56,087 p=9913 u=student |  TASK [container_runtime : Remove firewalld allow rules] ********************************************************
2019-03-20 13:05:56,133 p=9913 u=student |  TASK [container_runtime : Configure the CNI network] ***********************************************************
2019-03-20 13:05:56,166 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,167 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,171 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,181 p=9913 u=student |  TASK [container_runtime : Create /etc/sysconfig/crio-storage] **************************************************
2019-03-20 13:05:56,209 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,209 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,219 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,228 p=9913 u=student |  TASK [container_runtime : Create /etc/sysconfig/crio-network] **************************************************
2019-03-20 13:05:56,260 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,261 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,265 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,274 p=9913 u=student |  TASK [container_runtime : Start the CRI-O service] *************************************************************
2019-03-20 13:05:56,303 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,304 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,313 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,322 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:56,348 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,352 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,359 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,368 p=9913 u=student |  TASK [container_runtime : Fail if Atomic Host since this is an rpm request] ************************************
2019-03-20 13:05:56,403 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,404 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,406 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,414 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:56,442 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,442 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,453 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,461 p=9913 u=student |  TASK [container_runtime : Check that overlay is in the kernel] *************************************************
2019-03-20 13:05:56,491 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,492 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,500 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,509 p=9913 u=student |  TASK [container_runtime : Add overlay to modprobe.d] ***********************************************************
2019-03-20 13:05:56,538 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,538 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,550 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,561 p=9913 u=student |  TASK [container_runtime : Manually modprobe overlay into the kernel] *******************************************
2019-03-20 13:05:56,596 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,597 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,608 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,619 p=9913 u=student |  TASK [container_runtime : Enable and start systemd-modules-load] ***********************************************
2019-03-20 13:05:56,653 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,654 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,667 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,677 p=9913 u=student |  TASK [container_runtime : Install cri-o] ***********************************************************************
2019-03-20 13:05:56,710 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,715 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,724 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,735 p=9913 u=student |  TASK [container_runtime : Remove CRI-O default configuration files] ********************************************
2019-03-20 13:05:56,784 p=9913 u=student |  skipping: [master.lab.example.com] => (item=/etc/cni/net.d/200-loopback.conf) 
2019-03-20 13:05:56,785 p=9913 u=student |  skipping: [master.lab.example.com] => (item=/etc/cni/net.d/100-crio-bridge.conf) 
2019-03-20 13:05:56,786 p=9913 u=student |  skipping: [node1.lab.example.com] => (item=/etc/cni/net.d/200-loopback.conf) 
2019-03-20 13:05:56,787 p=9913 u=student |  skipping: [node1.lab.example.com] => (item=/etc/cni/net.d/100-crio-bridge.conf) 
2019-03-20 13:05:56,794 p=9913 u=student |  skipping: [node2.lab.example.com] => (item=/etc/cni/net.d/200-loopback.conf) 
2019-03-20 13:05:56,800 p=9913 u=student |  skipping: [node2.lab.example.com] => (item=/etc/cni/net.d/100-crio-bridge.conf) 
2019-03-20 13:05:56,811 p=9913 u=student |  TASK [container_runtime : Create the CRI-O configuration] ******************************************************
2019-03-20 13:05:56,838 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,844 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,853 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,862 p=9913 u=student |  TASK [container_runtime : Ensure CNI configuration directory exists] *******************************************
2019-03-20 13:05:56,898 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:56,899 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:56,903 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:56,912 p=9913 u=student |  TASK [container_runtime : Add iptables allow rules] ************************************************************
2019-03-20 13:05:56,948 p=9913 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-20 13:05:56,952 p=9913 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-20 13:05:56,961 p=9913 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-20 13:05:56,970 p=9913 u=student |  TASK [container_runtime : Remove iptables rules] ***************************************************************
2019-03-20 13:05:57,018 p=9913 u=student |  TASK [container_runtime : Add firewalld allow rules] ***********************************************************
2019-03-20 13:05:57,054 p=9913 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-20 13:05:57,057 p=9913 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-20 13:05:57,066 p=9913 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-20 13:05:57,075 p=9913 u=student |  TASK [container_runtime : Remove firewalld allow rules] ********************************************************
2019-03-20 13:05:57,123 p=9913 u=student |  TASK [container_runtime : Configure the CNI network] ***********************************************************
2019-03-20 13:05:57,149 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:57,151 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:57,163 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:57,172 p=9913 u=student |  TASK [container_runtime : Create /etc/sysconfig/crio-network] **************************************************
2019-03-20 13:05:57,205 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:57,205 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:57,211 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:57,219 p=9913 u=student |  TASK [container_runtime : Start the CRI-O service] *************************************************************
2019-03-20 13:05:57,249 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:57,249 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:57,259 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:57,268 p=9913 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-20 13:05:57,292 p=9913 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:05:57,303 p=9913 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:05:57,308 p=9913 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:05:57,310 p=9913 u=student |  PLAY RECAP *****************************************************************************************************
2019-03-20 13:05:57,310 p=9913 u=student |  localhost                  : ok=12   changed=0    unreachable=0    failed=0   
2019-03-20 13:05:57,310 p=9913 u=student |  master.lab.example.com     : ok=67   changed=12   unreachable=0    failed=0   
2019-03-20 13:05:57,310 p=9913 u=student |  node1.lab.example.com      : ok=60   changed=12   unreachable=0    failed=0   
2019-03-20 13:05:57,311 p=9913 u=student |  node2.lab.example.com      : ok=60   changed=12   unreachable=0    failed=0   
2019-03-20 13:05:57,311 p=9913 u=student |  services.lab.example.com   : ok=36   changed=4    unreachable=0    failed=0   
2019-03-20 13:05:57,311 p=9913 u=student |  workstation.lab.example.com : ok=2    changed=0    unreachable=0    failed=0   
2019-03-20 13:05:57,311 p=9913 u=student |  INSTALLER STATUS ***********************************************************************************************
2019-03-20 13:05:57,314 p=9913 u=student |  Initialization             : Complete (0:00:15)
2019-03-20 13:06:32,459 p=12211 u=student |  PLAY [Initialization Checkpoint Start] *************************************************************************
2019-03-20 13:06:32,470 p=12211 u=student |  TASK [Set install initialization 'In Progress'] ****************************************************************
2019-03-20 13:06:32,508 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:06:32,514 p=12211 u=student |  PLAY [Populate config host groups] *****************************************************************************
2019-03-20 13:06:32,521 p=12211 u=student |  TASK [Load group name mapping variables] ***********************************************************************
2019-03-20 13:06:32,540 p=12211 u=student |  ok: [localhost]
2019-03-20 13:06:32,546 p=12211 u=student |  TASK [Evaluate groups - g_etcd_hosts or g_new_etcd_hosts required] *********************************************
2019-03-20 13:06:32,568 p=12211 u=student |  skipping: [localhost]
2019-03-20 13:06:32,573 p=12211 u=student |  TASK [Evaluate groups - g_master_hosts or g_new_master_hosts required] *****************************************
2019-03-20 13:06:32,594 p=12211 u=student |  skipping: [localhost]
2019-03-20 13:06:32,599 p=12211 u=student |  TASK [Evaluate groups - g_node_hosts or g_new_node_hosts required] *********************************************
2019-03-20 13:06:32,619 p=12211 u=student |  skipping: [localhost]
2019-03-20 13:06:32,624 p=12211 u=student |  TASK [Evaluate groups - g_lb_hosts required] *******************************************************************
2019-03-20 13:06:32,642 p=12211 u=student |  skipping: [localhost]
2019-03-20 13:06:32,647 p=12211 u=student |  TASK [Evaluate groups - g_nfs_hosts required] ******************************************************************
2019-03-20 13:06:32,664 p=12211 u=student |  skipping: [localhost]
2019-03-20 13:06:32,669 p=12211 u=student |  TASK [Evaluate groups - g_nfs_hosts is single host] ************************************************************
2019-03-20 13:06:32,687 p=12211 u=student |  skipping: [localhost]
2019-03-20 13:06:32,692 p=12211 u=student |  TASK [Evaluate groups - g_glusterfs_hosts required] ************************************************************
2019-03-20 13:06:32,712 p=12211 u=student |  skipping: [localhost]
2019-03-20 13:06:32,716 p=12211 u=student |  TASK [Evaluate groups - Fail if no etcd hosts group is defined] ************************************************
2019-03-20 13:06:32,734 p=12211 u=student |  skipping: [localhost]
2019-03-20 13:06:32,740 p=12211 u=student |  TASK [Evaluate oo_all_hosts] ***********************************************************************************
2019-03-20 13:06:32,794 p=12211 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:06:32,800 p=12211 u=student |  ok: [localhost] => (item=node1.lab.example.com)
2019-03-20 13:06:32,803 p=12211 u=student |  ok: [localhost] => (item=node2.lab.example.com)
2019-03-20 13:06:32,810 p=12211 u=student |  ok: [localhost] => (item=services.lab.example.com)
2019-03-20 13:06:32,816 p=12211 u=student |  TASK [Evaluate oo_masters] *************************************************************************************
2019-03-20 13:06:32,847 p=12211 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:06:32,852 p=12211 u=student |  TASK [Evaluate oo_first_master] ********************************************************************************
2019-03-20 13:06:32,878 p=12211 u=student |  ok: [localhost]
2019-03-20 13:06:32,882 p=12211 u=student |  TASK [Evaluate oo_new_etcd_to_config] **************************************************************************
2019-03-20 13:06:32,901 p=12211 u=student |  TASK [Evaluate oo_masters_to_config] ***************************************************************************
2019-03-20 13:06:32,931 p=12211 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:06:32,936 p=12211 u=student |  TASK [Evaluate oo_etcd_to_config] ******************************************************************************
2019-03-20 13:06:32,964 p=12211 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:06:32,969 p=12211 u=student |  TASK [Evaluate oo_first_etcd] **********************************************************************************
2019-03-20 13:06:32,996 p=12211 u=student |  ok: [localhost]
2019-03-20 13:06:33,000 p=12211 u=student |  TASK [Evaluate oo_etcd_hosts_to_upgrade] ***********************************************************************
2019-03-20 13:06:33,024 p=12211 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:06:33,029 p=12211 u=student |  TASK [Evaluate oo_etcd_hosts_to_backup] ************************************************************************
2019-03-20 13:06:33,052 p=12211 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:06:33,058 p=12211 u=student |  TASK [Evaluate oo_nodes_to_config] *****************************************************************************
2019-03-20 13:06:33,088 p=12211 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:06:33,096 p=12211 u=student |  ok: [localhost] => (item=node1.lab.example.com)
2019-03-20 13:06:33,099 p=12211 u=student |  ok: [localhost] => (item=node2.lab.example.com)
2019-03-20 13:06:33,105 p=12211 u=student |  TASK [Add master to oo_nodes_to_config] ************************************************************************
2019-03-20 13:06:33,127 p=12211 u=student |  skipping: [localhost] => (item=master.lab.example.com) 
2019-03-20 13:06:33,131 p=12211 u=student |  TASK [Evaluate oo_lb_to_config] ********************************************************************************
2019-03-20 13:06:33,150 p=12211 u=student |  TASK [Evaluate oo_nfs_to_config] *******************************************************************************
2019-03-20 13:06:33,178 p=12211 u=student |  ok: [localhost] => (item=services.lab.example.com)
2019-03-20 13:06:33,183 p=12211 u=student |  TASK [Evaluate oo_glusterfs_to_config] *************************************************************************
2019-03-20 13:06:33,203 p=12211 u=student |  TASK [Evaluate oo_etcd_to_migrate] *****************************************************************************
2019-03-20 13:06:33,231 p=12211 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-20 13:06:33,237 p=12211 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_lb_to_config

2019-03-20 13:06:33,239 p=12211 u=student |  PLAY [Ensure that all non-node hosts are accessible] ***********************************************************
2019-03-20 13:06:33,245 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:06:33,941 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:33,973 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:33,995 p=12211 u=student |  PLAY [Initialize basic host facts] *****************************************************************************
2019-03-20 13:06:34,004 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:06:34,665 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:34,698 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:34,728 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:34,756 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:34,786 p=12211 u=student |  TASK [openshift_sanitize_inventory : include_tasks] ************************************************************
2019-03-20 13:06:34,873 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_sanitize_inventory/tasks/deprecations.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com, services.lab.example.com
2019-03-20 13:06:34,893 p=12211 u=student |  TASK [openshift_sanitize_inventory : Check for usage of deprecated variables] **********************************
2019-03-20 13:06:34,985 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:34,994 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:34,999 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:35,020 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:35,028 p=12211 u=student |  TASK [openshift_sanitize_inventory : debug] ********************************************************************
2019-03-20 13:06:35,065 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:35,065 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:35,067 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:35,077 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:35,085 p=12211 u=student |  TASK [openshift_sanitize_inventory : set_stats] ****************************************************************
2019-03-20 13:06:35,121 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:35,122 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:35,127 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:35,134 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:35,143 p=12211 u=student |  TASK [openshift_sanitize_inventory : Assign deprecated variables to correct counterparts] **********************
2019-03-20 13:06:35,265 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_sanitize_inventory/tasks/__deprecations_logging.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com, services.lab.example.com
2019-03-20 13:06:35,279 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_sanitize_inventory/tasks/__deprecations_metrics.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com, services.lab.example.com
2019-03-20 13:06:35,290 p=12211 u=student |  TASK [openshift_sanitize_inventory : conditional_set_fact] *****************************************************
2019-03-20 13:06:35,363 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:35,371 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:35,404 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:35,406 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:35,414 p=12211 u=student |  TASK [openshift_sanitize_inventory : set_fact] *****************************************************************
2019-03-20 13:06:35,470 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:35,488 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:35,495 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:35,514 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:35,524 p=12211 u=student |  TASK [openshift_sanitize_inventory : conditional_set_fact] *****************************************************
2019-03-20 13:06:35,597 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:35,626 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:35,638 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:35,649 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:35,659 p=12211 u=student |  TASK [openshift_sanitize_inventory : Standardize on latest variable names] *************************************
2019-03-20 13:06:35,721 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:35,722 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:35,743 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:35,753 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:35,763 p=12211 u=student |  TASK [openshift_sanitize_inventory : Normalize openshift_release] **********************************************
2019-03-20 13:06:35,824 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:35,831 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:35,840 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:35,856 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:35,864 p=12211 u=student |  TASK [openshift_sanitize_inventory : Abort when openshift_release is invalid] **********************************
2019-03-20 13:06:35,913 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:35,913 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:35,914 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:35,915 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:35,924 p=12211 u=student |  TASK [openshift_sanitize_inventory : include_tasks] ************************************************************
2019-03-20 13:06:35,969 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:35,970 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:35,970 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:35,975 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:35,983 p=12211 u=student |  TASK [openshift_sanitize_inventory : Ensure clusterid is set along with the cloudprovider] *********************
2019-03-20 13:06:36,008 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:36,030 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:36,030 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:36,034 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:36,042 p=12211 u=student |  TASK [openshift_sanitize_inventory : Ensure ansible_service_broker_remove and ansible_service_broker_install are mutually exclusive] ***
2019-03-20 13:06:36,081 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:36,082 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:36,085 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:36,094 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:36,102 p=12211 u=student |  TASK [openshift_sanitize_inventory : Ensure template_service_broker_remove and template_service_broker_install are mutually exclusive] ***
2019-03-20 13:06:36,127 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:36,144 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:36,145 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:36,150 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:36,158 p=12211 u=student |  TASK [openshift_sanitize_inventory : Ensure that all requires vsphere configuration variables are set] *********
2019-03-20 13:06:36,195 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:36,196 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:36,201 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:36,208 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:36,217 p=12211 u=student |  TASK [openshift_sanitize_inventory : Ensure removed web console extension variables are not set] ***************
2019-03-20 13:06:36,242 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:36,260 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:36,261 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:36,265 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:36,274 p=12211 u=student |  TASK [openshift_sanitize_inventory : Ensure that web console port matches API server port] *********************
2019-03-20 13:06:36,300 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:36,323 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:36,326 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:36,328 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:36,336 p=12211 u=student |  TASK [Detecting Operating System from ostree_booted] ***********************************************************
2019-03-20 13:06:36,825 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:36,828 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:36,840 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:36,852 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:36,861 p=12211 u=student |  TASK [set openshift_deployment_type if unset] ******************************************************************
2019-03-20 13:06:36,903 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:36,904 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:36,905 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:36,908 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:36,915 p=12211 u=student |  TASK [initialize_facts set fact openshift_is_atomic and openshift_is_containerized] ****************************
2019-03-20 13:06:36,979 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:36,984 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:36,990 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:37,006 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:37,014 p=12211 u=student |  TASK [Set use_crio to True if cri-o rpm is requested] **********************************************************
2019-03-20 13:06:37,050 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:37,050 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:37,055 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:37,061 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:37,069 p=12211 u=student |  TASK [Determine Atomic Host Docker Version] ********************************************************************
2019-03-20 13:06:37,111 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:37,112 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:37,112 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:37,117 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:37,125 p=12211 u=student |  TASK [assert atomic host docker version is 1.12 or later] ******************************************************
2019-03-20 13:06:37,148 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:37,161 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:37,166 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:37,177 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:37,183 p=12211 u=student |  PLAY [Initialize special first-master variables] ***************************************************************
2019-03-20 13:06:37,193 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:06:37,670 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:37,698 p=12211 u=student |  TASK [stat] ****************************************************************************************************
2019-03-20 13:06:37,992 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:38,000 p=12211 u=student |  TASK [slurp] ***************************************************************************************************
2019-03-20 13:06:38,017 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:38,025 p=12211 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-20 13:06:38,042 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:38,050 p=12211 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-20 13:06:38,083 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:38,089 p=12211 u=student |  PLAY [Disable web console if required] *************************************************************************
2019-03-20 13:06:38,097 p=12211 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-20 13:06:38,113 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:38,121 p=12211 u=student |  PLAY [Install packages necessary for installer] ****************************************************************
2019-03-20 13:06:38,130 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:06:38,165 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:38,165 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:38,169 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:38,176 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:38,185 p=12211 u=student |  TASK [Ensure openshift-ansible installer package deps are installed] *******************************************
2019-03-20 13:06:38,236 p=12211 u=student |  skipping: [master.lab.example.com] => (item=iproute) 
2019-03-20 13:06:38,236 p=12211 u=student |  skipping: [master.lab.example.com] => (item=dbus-python) 
2019-03-20 13:06:38,237 p=12211 u=student |  skipping: [master.lab.example.com] => (item=PyYAML) 
2019-03-20 13:06:38,237 p=12211 u=student |  skipping: [master.lab.example.com] => (item=python-ipaddress) 
2019-03-20 13:06:38,238 p=12211 u=student |  skipping: [master.lab.example.com] => (item=yum-utils) 
2019-03-20 13:06:38,251 p=12211 u=student |  skipping: [node1.lab.example.com] => (item=iproute) 
2019-03-20 13:06:38,251 p=12211 u=student |  skipping: [node1.lab.example.com] => (item=dbus-python) 
2019-03-20 13:06:38,252 p=12211 u=student |  skipping: [node1.lab.example.com] => (item=PyYAML) 
2019-03-20 13:06:38,252 p=12211 u=student |  skipping: [node1.lab.example.com] => (item=python-ipaddress) 
2019-03-20 13:06:38,253 p=12211 u=student |  skipping: [node1.lab.example.com] => (item=yum-utils) 
2019-03-20 13:06:38,256 p=12211 u=student |  skipping: [node2.lab.example.com] => (item=iproute) 
2019-03-20 13:06:38,268 p=12211 u=student |  skipping: [services.lab.example.com] => (item=iproute) 
2019-03-20 13:06:38,268 p=12211 u=student |  skipping: [services.lab.example.com] => (item=dbus-python) 
2019-03-20 13:06:38,271 p=12211 u=student |  skipping: [node2.lab.example.com] => (item=dbus-python) 
2019-03-20 13:06:38,272 p=12211 u=student |  skipping: [node2.lab.example.com] => (item=PyYAML) 
2019-03-20 13:06:38,272 p=12211 u=student |  skipping: [node2.lab.example.com] => (item=python-ipaddress) 
2019-03-20 13:06:38,272 p=12211 u=student |  skipping: [node2.lab.example.com] => (item=yum-utils) 
2019-03-20 13:06:38,275 p=12211 u=student |  skipping: [services.lab.example.com] => (item=PyYAML) 
2019-03-20 13:06:38,276 p=12211 u=student |  skipping: [services.lab.example.com] => (item=python-ipaddress) 
2019-03-20 13:06:38,276 p=12211 u=student |  skipping: [services.lab.example.com] => (item=yum-utils) 
2019-03-20 13:06:38,284 p=12211 u=student |  TASK [Ensure various deps for running system containers are installed] *****************************************
2019-03-20 13:06:38,343 p=12211 u=student |  skipping: [master.lab.example.com] => (item=atomic) 
2019-03-20 13:06:38,343 p=12211 u=student |  skipping: [master.lab.example.com] => (item=ostree) 
2019-03-20 13:06:38,344 p=12211 u=student |  skipping: [master.lab.example.com] => (item=runc) 
2019-03-20 13:06:38,346 p=12211 u=student |  skipping: [node1.lab.example.com] => (item=atomic) 
2019-03-20 13:06:38,346 p=12211 u=student |  skipping: [node1.lab.example.com] => (item=ostree) 
2019-03-20 13:06:38,347 p=12211 u=student |  skipping: [node1.lab.example.com] => (item=runc) 
2019-03-20 13:06:38,347 p=12211 u=student |  skipping: [node2.lab.example.com] => (item=atomic) 
2019-03-20 13:06:38,348 p=12211 u=student |  skipping: [node2.lab.example.com] => (item=ostree) 
2019-03-20 13:06:38,348 p=12211 u=student |  skipping: [node2.lab.example.com] => (item=runc) 
2019-03-20 13:06:38,350 p=12211 u=student |  skipping: [services.lab.example.com] => (item=atomic) 
2019-03-20 13:06:38,354 p=12211 u=student |  skipping: [services.lab.example.com] => (item=ostree) 
2019-03-20 13:06:38,356 p=12211 u=student |  skipping: [services.lab.example.com] => (item=runc) 
2019-03-20 13:06:38,364 p=12211 u=student |  PLAY [Initialize cluster facts] ********************************************************************************
2019-03-20 13:06:38,373 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:06:39,078 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:39,113 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:39,132 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:39,151 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:39,173 p=12211 u=student |  TASK [Gather Cluster facts] ************************************************************************************
2019-03-20 13:06:40,218 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:40,407 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:40,441 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:40,445 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:40,454 p=12211 u=student |  TASK [Set fact of no_proxy_internal_hostnames] *****************************************************************
2019-03-20 13:06:40,498 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:40,499 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:40,499 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:40,504 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:06:40,512 p=12211 u=student |  TASK [Initialize openshift.node.sdn_mtu] ***********************************************************************
2019-03-20 13:06:41,368 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:41,488 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:41,509 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:41,513 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:41,523 p=12211 u=student |  PLAY [Determine openshift_version to configure on first master] ************************************************
2019-03-20 13:06:41,531 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:06:42,019 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:42,041 p=12211 u=student |  TASK [include_role] ********************************************************************************************
2019-03-20 13:06:42,095 p=12211 u=student |  TASK [openshift_version : Use openshift.common.version fact as version to configure if already installed] ******
2019-03-20 13:06:42,135 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:42,144 p=12211 u=student |  TASK [openshift_version : include_tasks] ***********************************************************************
2019-03-20 13:06:42,172 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_version/tasks/first_master_rpm_version.yml for master.lab.example.com
2019-03-20 13:06:42,180 p=12211 u=student |  TASK [openshift_version : Set rpm version to configure if openshift_pkg_version specified] *********************
2019-03-20 13:06:42,195 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:42,203 p=12211 u=student |  TASK [openshift_version : Set openshift_version for rpm installation] ******************************************
2019-03-20 13:06:42,229 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_version/tasks/check_available_rpms.yml for master.lab.example.com
2019-03-20 13:06:42,240 p=12211 u=student |  TASK [openshift_version : Get available atomic-openshift version] **********************************************
2019-03-20 13:06:43,023 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:43,032 p=12211 u=student |  TASK [openshift_version : fail] ********************************************************************************
2019-03-20 13:06:43,047 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:43,056 p=12211 u=student |  TASK [openshift_version : set_fact] ****************************************************************************
2019-03-20 13:06:43,071 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:43,080 p=12211 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-20 13:06:43,113 p=12211 u=student |  ok: [master.lab.example.com] => {
    "msg": "openshift_pkg_version was not defined. Falling back to -3.9.14"
}
2019-03-20 13:06:43,121 p=12211 u=student |  TASK [openshift_version : set_fact] ****************************************************************************
2019-03-20 13:06:43,155 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:43,163 p=12211 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-20 13:06:43,179 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:43,188 p=12211 u=student |  TASK [openshift_version : set_fact] ****************************************************************************
2019-03-20 13:06:43,205 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:06:43,215 p=12211 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-20 13:06:43,327 p=12211 u=student |  ok: [master.lab.example.com] => {
    "openshift_release": "3.9"
}
2019-03-20 13:06:43,334 p=12211 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-20 13:06:43,444 p=12211 u=student |  ok: [master.lab.example.com] => {
    "openshift_image_tag": "v3.9.14"
}
2019-03-20 13:06:43,452 p=12211 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-20 13:06:43,564 p=12211 u=student |  ok: [master.lab.example.com] => {
    "openshift_pkg_version": "-3.9.14"
}
2019-03-20 13:06:43,573 p=12211 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-20 13:06:43,695 p=12211 u=student |  ok: [master.lab.example.com] => {
    "openshift_version": "3.9.14"
}
2019-03-20 13:06:43,705 p=12211 u=student |  TASK [debug] ***************************************************************************************************
2019-03-20 13:06:43,828 p=12211 u=student |  ok: [master.lab.example.com] => {
    "msg": "openshift_pkg_version set to -3.9.14"
}
2019-03-20 13:06:43,839 p=12211 u=student |  PLAY [Set openshift_version for etcd, node, and master hosts] **************************************************
2019-03-20 13:06:43,846 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:06:44,449 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:44,469 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:44,489 p=12211 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-20 13:06:44,632 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:44,640 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:44,650 p=12211 u=student |  PLAY [Ensure the requested version packages are available.] ****************************************************
2019-03-20 13:06:44,658 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:06:45,296 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:45,319 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:45,339 p=12211 u=student |  TASK [include_role] ********************************************************************************************
2019-03-20 13:06:45,401 p=12211 u=student |  TASK [openshift_version : Check openshift_version for rpm installation] ****************************************
2019-03-20 13:06:45,442 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_version/tasks/check_available_rpms.yml for node1.lab.example.com, node2.lab.example.com
2019-03-20 13:06:45,452 p=12211 u=student |  TASK [openshift_version : Get available atomic-openshift version] **********************************************
2019-03-20 13:06:46,123 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:46,130 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:46,138 p=12211 u=student |  TASK [openshift_version : fail] ********************************************************************************
2019-03-20 13:06:46,154 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:46,164 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:46,172 p=12211 u=student |  TASK [openshift_version : Fail if rpm version and docker image version are different] **************************
2019-03-20 13:06:46,191 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:06:46,203 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:06:46,210 p=12211 u=student |  TASK [openshift_version : For an RPM install, abort when the release requested does not match the available version.] ***
2019-03-20 13:06:46,253 p=12211 u=student |  ok: [node1.lab.example.com] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2019-03-20 13:06:46,265 p=12211 u=student |  ok: [node2.lab.example.com] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2019-03-20 13:06:46,272 p=12211 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-20 13:06:46,306 p=12211 u=student |  ok: [node1.lab.example.com] => {
    "openshift_release": "3.9"
}
2019-03-20 13:06:46,316 p=12211 u=student |  ok: [node2.lab.example.com] => {
    "openshift_release": "3.9"
}
2019-03-20 13:06:46,323 p=12211 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-20 13:06:46,357 p=12211 u=student |  ok: [node1.lab.example.com] => {
    "openshift_image_tag": "v3.9.14"
}
2019-03-20 13:06:46,376 p=12211 u=student |  ok: [node2.lab.example.com] => {
    "openshift_image_tag": "v3.9.14"
}
2019-03-20 13:06:46,382 p=12211 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-20 13:06:46,417 p=12211 u=student |  ok: [node1.lab.example.com] => {
    "openshift_pkg_version": "-3.9.14"
}
2019-03-20 13:06:46,425 p=12211 u=student |  ok: [node2.lab.example.com] => {
    "openshift_pkg_version": "-3.9.14"
}
2019-03-20 13:06:46,430 p=12211 u=student |  PLAY [Verify Requirements] *************************************************************************************
2019-03-20 13:06:46,438 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:06:46,950 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:46,973 p=12211 u=student |  TASK [Run variable sanity checks] ******************************************************************************
2019-03-20 13:06:47,180 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:47,186 p=12211 u=student |  PLAY [Initialization Checkpoint End] ***************************************************************************
2019-03-20 13:06:47,191 p=12211 u=student |  TASK [Set install initialization 'Complete'] *******************************************************************
2019-03-20 13:06:47,231 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:06:47,237 p=12211 u=student |  PLAY [Health Check Checkpoint Start] ***************************************************************************
2019-03-20 13:06:47,244 p=12211 u=student |  TASK [Set Health Check 'In Progress'] **************************************************************************
2019-03-20 13:06:47,283 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:06:47,290 p=12211 u=student |  PLAY [OpenShift Health Checks] *********************************************************************************
2019-03-20 13:06:47,298 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:06:47,992 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:06:48,031 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:06:48,053 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:06:48,076 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:06:48,100 p=12211 u=student |  TASK [Run health checks (install) - EL] ************************************************************************
2019-03-20 13:06:48,138 p=12211 u=student |  CHECK [docker_storage : master.lab.example.com] ****************************************************************
2019-03-20 13:06:48,138 p=12211 u=student |  CHECK [disk_availability : master.lab.example.com] *************************************************************
2019-03-20 13:06:48,138 p=12211 u=student |  CHECK [package_availability : master.lab.example.com] **********************************************************
2019-03-20 13:06:48,205 p=12211 u=student |  CHECK [docker_storage : node1.lab.example.com] *****************************************************************
2019-03-20 13:06:48,205 p=12211 u=student |  CHECK [disk_availability : node1.lab.example.com] **************************************************************
2019-03-20 13:06:48,205 p=12211 u=student |  CHECK [package_availability : node1.lab.example.com] ***********************************************************
2019-03-20 13:06:48,230 p=12211 u=student |  CHECK [docker_storage : node2.lab.example.com] *****************************************************************
2019-03-20 13:06:48,230 p=12211 u=student |  CHECK [disk_availability : node2.lab.example.com] **************************************************************
2019-03-20 13:06:48,231 p=12211 u=student |  CHECK [package_availability : node2.lab.example.com] ***********************************************************
2019-03-20 13:06:48,253 p=12211 u=student |  CHECK [docker_storage : services.lab.example.com] **************************************************************
2019-03-20 13:06:48,253 p=12211 u=student |  CHECK [disk_availability : services.lab.example.com] ***********************************************************
2019-03-20 13:06:48,253 p=12211 u=student |  CHECK [package_availability : services.lab.example.com] ********************************************************
2019-03-20 13:06:49,873 p=12211 u=student |  CHECK [package_version : master.lab.example.com] ***************************************************************
2019-03-20 13:06:49,877 p=12211 u=student |  CHECK [package_version : node2.lab.example.com] ****************************************************************
2019-03-20 13:06:49,967 p=12211 u=student |  CHECK [package_version : node1.lab.example.com] ****************************************************************
2019-03-20 13:06:50,807 p=12211 u=student |  CHECK [docker_image_availability : node2.lab.example.com] ******************************************************
2019-03-20 13:06:50,843 p=12211 u=student |  CHECK [docker_image_availability : master.lab.example.com] *****************************************************
2019-03-20 13:06:50,865 p=12211 u=student |  CHECK [docker_image_availability : node1.lab.example.com] ******************************************************
2019-03-20 13:06:53,623 p=12211 u=student |  CHECK [package_version : services.lab.example.com] *************************************************************
2019-03-20 13:06:53,623 p=12211 u=student |  CHECK [docker_image_availability : services.lab.example.com] ***************************************************
2019-03-20 13:06:53,623 p=12211 u=student |  CHECK [memory_availability : services.lab.example.com] *********************************************************
2019-03-20 13:06:53,628 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:07:00,840 p=12211 u=student |  CHECK [memory_availability : node1.lab.example.com] ************************************************************
2019-03-20 13:07:00,843 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:07:00,872 p=12211 u=student |  CHECK [memory_availability : master.lab.example.com] ***********************************************************
2019-03-20 13:07:00,872 p=12211 u=student |  CHECK [memory_availability : node2.lab.example.com] ************************************************************
2019-03-20 13:07:00,880 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:07:00,881 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:00,889 p=12211 u=student |  TASK [Run health checks (install) - Fedora] ********************************************************************
2019-03-20 13:07:00,932 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:00,933 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:07:00,933 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:07:00,939 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:07:00,944 p=12211 u=student |  PLAY [Health Check Checkpoint End] *****************************************************************************
2019-03-20 13:07:00,950 p=12211 u=student |  TASK [Set Health Check 'Complete'] *****************************************************************************
2019-03-20 13:07:00,989 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:07:00,995 p=12211 u=student |  PLAY [etcd Install Checkpoint Start] ***************************************************************************
2019-03-20 13:07:01,001 p=12211 u=student |  TASK [Set etcd install 'In Progress'] **************************************************************************
2019-03-20 13:07:01,041 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:07:01,048 p=12211 u=student |  PLAY [Generate new etcd CA] ************************************************************************************
2019-03-20 13:07:01,059 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:07:01,524 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:01,546 p=12211 u=student |  TASK [openshift_clock : Determine if chrony is installed] ******************************************************
2019-03-20 13:07:01,888 p=12211 u=student |   [WARNING]: Consider using yum, dnf or zypper module rather than running rpm

2019-03-20 13:07:01,888 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:01,897 p=12211 u=student |  TASK [openshift_clock : Install ntp package] *******************************************************************
2019-03-20 13:07:01,915 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:01,924 p=12211 u=student |  TASK [openshift_clock : Start and enable ntpd/chronyd] *********************************************************
2019-03-20 13:07:02,247 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:02,266 p=12211 u=student |  TASK [openshift_etcd_facts : Check for CA indicator files] *****************************************************
2019-03-20 13:07:02,565 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/ca', u'master.lab.example.com'])
2019-03-20 13:07:02,860 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/generated_certs', u'master.lab.example.com'])
2019-03-20 13:07:02,869 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:02,907 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:02,916 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:02,949 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:02,958 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:02,975 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:02,984 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:03,017 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:03,026 p=12211 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-20 13:07:03,064 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/certificates/deploy_ca.yml for master.lab.example.com
2019-03-20 13:07:03,079 p=12211 u=student |  TASK [etcd : Install openssl] **********************************************************************************
2019-03-20 13:07:03,523 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:03,545 p=12211 u=student |  TASK [etcd : file] *********************************************************************************************
2019-03-20 13:07:04,041 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=/etc/etcd/ca/certs)
2019-03-20 13:07:04,321 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=/etc/etcd/ca/crl)
2019-03-20 13:07:04,604 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=/etc/etcd/ca/fragments)
2019-03-20 13:07:04,626 p=12211 u=student |  TASK [etcd : command] ******************************************************************************************
2019-03-20 13:07:04,938 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:04,954 p=12211 u=student |  TASK [etcd : template] *****************************************************************************************
2019-03-20 13:07:05,690 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:05,711 p=12211 u=student |  TASK [etcd : assemble] *****************************************************************************************
2019-03-20 13:07:06,168 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:06,184 p=12211 u=student |  TASK [etcd : Check etcd_ca_db exist] ***************************************************************************
2019-03-20 13:07:06,472 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:06,488 p=12211 u=student |  TASK [etcd : Touch etcd_ca_db file] ****************************************************************************
2019-03-20 13:07:06,820 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:06,838 p=12211 u=student |  TASK [etcd : copy] *********************************************************************************************
2019-03-20 13:07:07,386 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:07,401 p=12211 u=student |  TASK [etcd : Create etcd CA certificate] ***********************************************************************
2019-03-20 13:07:08,299 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:08,306 p=12211 u=student |  PLAY [Create etcd server certificates for etcd hosts] **********************************************************
2019-03-20 13:07:08,316 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:07:08,834 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:08,865 p=12211 u=student |  TASK [openshift_etcd_facts : Check for CA indicator files] *****************************************************
2019-03-20 13:07:09,173 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/ca', u'master.lab.example.com'])
2019-03-20 13:07:09,444 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/generated_certs', u'master.lab.example.com'])
2019-03-20 13:07:09,454 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:09,491 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:09,500 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:09,533 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:09,542 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:09,562 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:09,572 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:09,589 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:09,601 p=12211 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-20 13:07:09,633 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/ca.yml for master.lab.example.com
2019-03-20 13:07:09,643 p=12211 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-20 13:07:09,681 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/certificates/deploy_ca.yml for master.lab.example.com
2019-03-20 13:07:09,700 p=12211 u=student |  TASK [etcd : Install openssl] **********************************************************************************
2019-03-20 13:07:10,158 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:10,178 p=12211 u=student |  TASK [etcd : file] *********************************************************************************************
2019-03-20 13:07:10,476 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=/etc/etcd/ca/certs)
2019-03-20 13:07:10,865 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=/etc/etcd/ca/crl)
2019-03-20 13:07:11,144 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=/etc/etcd/ca/fragments)
2019-03-20 13:07:11,161 p=12211 u=student |  TASK [etcd : command] ******************************************************************************************
2019-03-20 13:07:11,452 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:11,467 p=12211 u=student |  TASK [etcd : template] *****************************************************************************************
2019-03-20 13:07:12,013 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:12,031 p=12211 u=student |  TASK [etcd : assemble] *****************************************************************************************
2019-03-20 13:07:12,317 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:12,333 p=12211 u=student |  TASK [etcd : Check etcd_ca_db exist] ***************************************************************************
2019-03-20 13:07:12,640 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:12,658 p=12211 u=student |  TASK [etcd : Touch etcd_ca_db file] ****************************************************************************
2019-03-20 13:07:12,678 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:12,696 p=12211 u=student |  TASK [etcd : copy] *********************************************************************************************
2019-03-20 13:07:13,012 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:13,029 p=12211 u=student |  TASK [etcd : Create etcd CA certificate] ***********************************************************************
2019-03-20 13:07:13,318 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:13,328 p=12211 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-20 13:07:13,378 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/certificates/fetch_server_certificates_from_ca.yml for master.lab.example.com
2019-03-20 13:07:13,389 p=12211 u=student |  TASK [etcd : Install etcd] *************************************************************************************
2019-03-20 13:07:16,934 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:16,943 p=12211 u=student |  TASK [etcd : Check status of etcd certificates] ****************************************************************
2019-03-20 13:07:17,247 p=12211 u=student |  ok: [master.lab.example.com] => (item=/etc/etcd/server.crt)
2019-03-20 13:07:17,513 p=12211 u=student |  ok: [master.lab.example.com] => (item=/etc/etcd/peer.crt)
2019-03-20 13:07:17,888 p=12211 u=student |  ok: [master.lab.example.com] => (item=/etc/etcd/ca.crt)
2019-03-20 13:07:17,898 p=12211 u=student |  TASK [etcd : set_fact] *****************************************************************************************
2019-03-20 13:07:17,932 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:17,948 p=12211 u=student |  TASK [etcd : Ensure generated_certs directory present] *********************************************************
2019-03-20 13:07:18,247 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:18,262 p=12211 u=student |  TASK [etcd : Create the server csr] ****************************************************************************
2019-03-20 13:07:18,645 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:18,663 p=12211 u=student |  TASK [etcd : Sign and create the server crt] *******************************************************************
2019-03-20 13:07:19,133 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:19,150 p=12211 u=student |  TASK [etcd : Create the peer csr] ******************************************************************************
2019-03-20 13:07:19,541 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:19,560 p=12211 u=student |  TASK [etcd : Sign and create the peer crt] *********************************************************************
2019-03-20 13:07:19,895 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:19,911 p=12211 u=student |  TASK [etcd : file] *********************************************************************************************
2019-03-20 13:07:20,207 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:20,223 p=12211 u=student |  TASK [etcd : Create a tarball of the etcd certs] ***************************************************************
2019-03-20 13:07:20,515 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:20,533 p=12211 u=student |  TASK [etcd : Retrieve etcd cert tarball] ***********************************************************************
2019-03-20 13:07:21,003 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:21,012 p=12211 u=student |  TASK [etcd : Ensure certificate directory exists] **************************************************************
2019-03-20 13:07:21,304 p=12211 u=student |  ok: [master.lab.example.com] => (item=/etc/etcd)
2019-03-20 13:07:21,314 p=12211 u=student |  TASK [etcd : Unarchive cert tarball] ***************************************************************************
2019-03-20 13:07:22,282 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:22,299 p=12211 u=student |  TASK [etcd : Create a tarball of the etcd ca certs] ************************************************************
2019-03-20 13:07:22,596 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:22,614 p=12211 u=student |  TASK [etcd : Retrieve etcd ca cert tarball] ********************************************************************
2019-03-20 13:07:22,922 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:22,931 p=12211 u=student |  TASK [etcd : Ensure ca directory exists] ***********************************************************************
2019-03-20 13:07:23,226 p=12211 u=student |  ok: [master.lab.example.com] => (item=/etc/etcd/ca)
2019-03-20 13:07:23,239 p=12211 u=student |  TASK [etcd : Delete temporary directory] ***********************************************************************
2019-03-20 13:07:23,411 p=12211 u=student |  ok: [master.lab.example.com -> localhost]
2019-03-20 13:07:23,420 p=12211 u=student |  TASK [etcd : Validate permissions on certificate files] ********************************************************
2019-03-20 13:07:23,752 p=12211 u=student |  changed: [master.lab.example.com] => (item=/etc/etcd/ca.crt)
2019-03-20 13:07:24,032 p=12211 u=student |  changed: [master.lab.example.com] => (item=/etc/etcd/server.crt)
2019-03-20 13:07:24,392 p=12211 u=student |  changed: [master.lab.example.com] => (item=/etc/etcd/server.key)
2019-03-20 13:07:24,403 p=12211 u=student |  TASK [etcd : Validate permissions on peer certificate files] ***************************************************
2019-03-20 13:07:24,720 p=12211 u=student |  ok: [master.lab.example.com] => (item=/etc/etcd/ca.crt)
2019-03-20 13:07:25,014 p=12211 u=student |  changed: [master.lab.example.com] => (item=/etc/etcd/peer.crt)
2019-03-20 13:07:25,293 p=12211 u=student |  changed: [master.lab.example.com] => (item=/etc/etcd/peer.key)
2019-03-20 13:07:25,305 p=12211 u=student |  TASK [etcd : Validate permissions on the config dir] ***********************************************************
2019-03-20 13:07:25,599 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:25,607 p=12211 u=student |  PLAY [Create etcd client certificates for master hosts] ********************************************************
2019-03-20 13:07:25,618 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:07:26,110 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:26,143 p=12211 u=student |  TASK [openshift_etcd_facts : Check for CA indicator files] *****************************************************
2019-03-20 13:07:26,438 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/ca', u'master.lab.example.com'])
2019-03-20 13:07:26,743 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/generated_certs', u'master.lab.example.com'])
2019-03-20 13:07:26,757 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:26,800 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:26,809 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:26,842 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:26,851 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:26,866 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:26,875 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:26,892 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:26,900 p=12211 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-20 13:07:26,953 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/certificates/fetch_client_certificates_from_ca.yml for master.lab.example.com
2019-03-20 13:07:26,969 p=12211 u=student |  TASK [etcd : Ensure CA certificate exists on etcd_ca_host] *****************************************************
2019-03-20 13:07:27,267 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:27,276 p=12211 u=student |  TASK [etcd : fail] *********************************************************************************************
2019-03-20 13:07:27,295 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:27,305 p=12211 u=student |  TASK [etcd : Check status of external etcd certificatees] ******************************************************
2019-03-20 13:07:27,609 p=12211 u=student |  ok: [master.lab.example.com] => (item=master.etcd-client.crt)
2019-03-20 13:07:27,911 p=12211 u=student |  ok: [master.lab.example.com] => (item=master.etcd-client.key)
2019-03-20 13:07:28,262 p=12211 u=student |  ok: [master.lab.example.com] => (item=master.etcd-ca.crt)
2019-03-20 13:07:28,272 p=12211 u=student |  TASK [etcd : set_fact] *****************************************************************************************
2019-03-20 13:07:28,310 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:28,326 p=12211 u=student |  TASK [etcd : Ensure generated_certs directory present] *********************************************************
2019-03-20 13:07:28,626 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:28,646 p=12211 u=student |  TASK [etcd : Create the client csr] ****************************************************************************
2019-03-20 13:07:28,983 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:28,999 p=12211 u=student |  TASK [etcd : Sign and create the client crt] *******************************************************************
2019-03-20 13:07:29,312 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:29,329 p=12211 u=student |  TASK [etcd : file] *********************************************************************************************
2019-03-20 13:07:29,648 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:29,667 p=12211 u=student |  TASK [etcd : Create a tarball of the etcd certs] ***************************************************************
2019-03-20 13:07:29,982 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:29,999 p=12211 u=student |  TASK [etcd : Retrieve the etcd cert tarballs] ******************************************************************
2019-03-20 13:07:30,294 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:30,303 p=12211 u=student |  TASK [etcd : Ensure certificate directory exists] **************************************************************
2019-03-20 13:07:30,611 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:30,622 p=12211 u=student |  TASK [etcd : Unarchive etcd cert tarballs] *********************************************************************
2019-03-20 13:07:31,417 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:31,429 p=12211 u=student |  TASK [etcd : Delete temporary directory] ***********************************************************************
2019-03-20 13:07:31,613 p=12211 u=student |  ok: [master.lab.example.com -> localhost]
2019-03-20 13:07:31,623 p=12211 u=student |  TASK [etcd : file] *********************************************************************************************
2019-03-20 13:07:31,947 p=12211 u=student |  changed: [master.lab.example.com] => (item=master.etcd-client.crt)
2019-03-20 13:07:32,301 p=12211 u=student |  changed: [master.lab.example.com] => (item=master.etcd-client.key)
2019-03-20 13:07:32,594 p=12211 u=student |  changed: [master.lab.example.com] => (item=master.etcd-ca.crt)
2019-03-20 13:07:32,603 p=12211 u=student |  PLAY [Configure etcd] ******************************************************************************************
2019-03-20 13:07:32,619 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:07:33,177 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:33,199 p=12211 u=student |  TASK [openshift_clock : Determine if chrony is installed] ******************************************************
2019-03-20 13:07:33,509 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:33,519 p=12211 u=student |  TASK [openshift_clock : Install ntp package] *******************************************************************
2019-03-20 13:07:33,537 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:33,546 p=12211 u=student |  TASK [openshift_clock : Start and enable ntpd/chronyd] *********************************************************
2019-03-20 13:07:33,893 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:33,913 p=12211 u=student |  TASK [openshift_etcd_facts : Check for CA indicator files] *****************************************************
2019-03-20 13:07:34,220 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/ca', u'master.lab.example.com'])
2019-03-20 13:07:34,491 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/generated_certs', u'master.lab.example.com'])
2019-03-20 13:07:34,503 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:34,538 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:34,547 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:34,584 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:34,595 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:34,616 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:34,626 p=12211 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-20 13:07:34,644 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:34,655 p=12211 u=student |  TASK [etcd : Set hostname and ip facts] ************************************************************************
2019-03-20 13:07:34,787 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:34,797 p=12211 u=student |  TASK [etcd : Add iptables allow rules] *************************************************************************
2019-03-20 13:07:34,826 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'2379/tcp', u'service': u'etcd'}) 
2019-03-20 13:07:34,833 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'2380/tcp', u'service': u'etcd peering'}) 
2019-03-20 13:07:34,842 p=12211 u=student |  TASK [etcd : Remove iptables rules] ****************************************************************************
2019-03-20 13:07:34,866 p=12211 u=student |  TASK [etcd : Add firewalld allow rules] ************************************************************************
2019-03-20 13:07:35,565 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'port': u'2379/tcp', u'service': u'etcd'})
2019-03-20 13:07:36,098 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'port': u'2380/tcp', u'service': u'etcd peering'})
2019-03-20 13:07:36,108 p=12211 u=student |  TASK [etcd : Remove firewalld allow rules] *********************************************************************
2019-03-20 13:07:36,132 p=12211 u=student |  TASK [etcd : Install etcd] *************************************************************************************
2019-03-20 13:07:36,584 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:36,594 p=12211 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-20 13:07:36,631 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/drop_etcdctl.yml for master.lab.example.com
2019-03-20 13:07:36,643 p=12211 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-20 13:07:36,677 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/auxiliary/drop_etcdctl.yml for master.lab.example.com
2019-03-20 13:07:36,689 p=12211 u=student |  TASK [etcd : Install etcd for etcdctl] *************************************************************************
2019-03-20 13:07:37,241 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:37,250 p=12211 u=student |  TASK [etcd : Configure etcd profile.d aliases] *****************************************************************
2019-03-20 13:07:37,835 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:37,845 p=12211 u=student |  TASK [etcd : Pull etcd container] ******************************************************************************
2019-03-20 13:07:37,864 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:37,874 p=12211 u=student |  TASK [etcd : Install etcd container service file] **************************************************************
2019-03-20 13:07:37,894 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:37,902 p=12211 u=student |  TASK [etcd : Create configuration directory] *******************************************************************
2019-03-20 13:07:37,916 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:37,925 p=12211 u=student |  TASK [etcd : Copy service file for etcd instance] **************************************************************
2019-03-20 13:07:37,939 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:37,949 p=12211 u=student |  TASK [etcd : Create third party etcd service.d directory exists] ***********************************************
2019-03-20 13:07:37,964 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:37,973 p=12211 u=student |  TASK [etcd : Configure third part etcd service unit file] ******************************************************
2019-03-20 13:07:37,986 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:37,995 p=12211 u=student |  TASK [etcd : Ensure etcd datadir exists] ***********************************************************************
2019-03-20 13:07:38,014 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:38,023 p=12211 u=student |  TASK [etcd : Ensure etcd datadir ownership for thirdparty datadir] *********************************************
2019-03-20 13:07:38,040 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:38,048 p=12211 u=student |  TASK [etcd : command] ******************************************************************************************
2019-03-20 13:07:38,067 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:38,075 p=12211 u=student |  TASK [etcd : Disable system etcd when containerized] ***********************************************************
2019-03-20 13:07:38,094 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:38,102 p=12211 u=student |  TASK [etcd : Install etcd container service file] **************************************************************
2019-03-20 13:07:38,118 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:38,127 p=12211 u=student |  TASK [etcd : Install Etcd system container] ********************************************************************
2019-03-20 13:07:38,144 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:38,153 p=12211 u=student |  TASK [etcd : Validate permissions on the config dir] ***********************************************************
2019-03-20 13:07:38,525 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:38,534 p=12211 u=student |  TASK [etcd : Write etcd global config file] ********************************************************************
2019-03-20 13:07:39,241 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:39,249 p=12211 u=student |  TASK [etcd : Enable etcd] **************************************************************************************
2019-03-20 13:07:41,866 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:41,879 p=12211 u=student |  TASK [etcd : Set fact etcd_service_status_changed] *************************************************************
2019-03-20 13:07:41,910 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:41,918 p=12211 u=student |  TASK [nickhammond.logrotate : nickhammond.logrotate | Install logrotate] ***************************************
2019-03-20 13:07:42,361 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:42,370 p=12211 u=student |  TASK [nickhammond.logrotate : nickhammond.logrotate | Setup logrotate.d scripts] *******************************
2019-03-20 13:07:42,386 p=12211 u=student |  RUNNING HANDLER [etcd : restart etcd] **************************************************************************
2019-03-20 13:07:42,410 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:42,416 p=12211 u=student |  PLAY [etcd Install Checkpoint End] *****************************************************************************
2019-03-20 13:07:42,422 p=12211 u=student |  TASK [Set etcd install 'Complete'] *****************************************************************************
2019-03-20 13:07:42,544 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:07:42,551 p=12211 u=student |  PLAY [NFS Install Checkpoint Start] ****************************************************************************
2019-03-20 13:07:42,559 p=12211 u=student |  TASK [Set NFS install 'In Progress'] ***************************************************************************
2019-03-20 13:07:42,700 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:07:42,711 p=12211 u=student |  PLAY [Configure nfs] *******************************************************************************************
2019-03-20 13:07:42,723 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:07:43,267 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:07:43,287 p=12211 u=student |  TASK [openshift_storage_nfs : Add iptables allow rules] ********************************************************
2019-03-20 13:07:43,313 p=12211 u=student |  skipping: [services.lab.example.com] => (item={u'port': u'2049/tcp', u'service': u'nfs'}) 
2019-03-20 13:07:43,321 p=12211 u=student |  TASK [openshift_storage_nfs : Remove iptables rules] ***********************************************************
2019-03-20 13:07:43,342 p=12211 u=student |  TASK [openshift_storage_nfs : Add firewalld allow rules] *******************************************************
2019-03-20 13:07:43,900 p=12211 u=student |  changed: [services.lab.example.com] => (item={u'port': u'2049/tcp', u'service': u'nfs'})
2019-03-20 13:07:43,908 p=12211 u=student |  TASK [openshift_storage_nfs : Remove firewalld allow rules] ****************************************************
2019-03-20 13:07:43,929 p=12211 u=student |  TASK [openshift_storage_nfs : Install nfs-utils] ***************************************************************
2019-03-20 13:07:44,368 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:07:44,374 p=12211 u=student |  TASK [openshift_storage_nfs : Configure NFS] *******************************************************************
2019-03-20 13:07:44,862 p=12211 u=student |  changed: [services.lab.example.com]
2019-03-20 13:07:44,871 p=12211 u=student |  TASK [openshift_storage_nfs : Restart nfs-config] **************************************************************
2019-03-20 13:07:45,266 p=12211 u=student |  changed: [services.lab.example.com]
2019-03-20 13:07:45,274 p=12211 u=student |  TASK [openshift_storage_nfs : Ensure exports directory exists] *************************************************
2019-03-20 13:07:45,666 p=12211 u=student |  changed: [services.lab.example.com]
2019-03-20 13:07:45,674 p=12211 u=student |  TASK [openshift_storage_nfs : Ensure export directories exist] *************************************************
2019-03-20 13:07:45,983 p=12211 u=student |  changed: [services.lab.example.com] => (item=/exports/registry)
2019-03-20 13:07:46,339 p=12211 u=student |  changed: [services.lab.example.com] => (item=/exports/metrics)
2019-03-20 13:07:46,627 p=12211 u=student |  changed: [services.lab.example.com] => (item=/exports/logging-es)
2019-03-20 13:07:46,922 p=12211 u=student |  changed: [services.lab.example.com] => (item=/exports/logging-es-ops)
2019-03-20 13:07:47,186 p=12211 u=student |  changed: [services.lab.example.com] => (item=/exports/etcd-vol2)
2019-03-20 13:07:47,448 p=12211 u=student |  changed: [services.lab.example.com] => (item=/exports/prometheus)
2019-03-20 13:07:47,760 p=12211 u=student |  changed: [services.lab.example.com] => (item=/exports/prometheus-alertmanager)
2019-03-20 13:07:48,037 p=12211 u=student |  changed: [services.lab.example.com] => (item=/exports/prometheus-alertbuffer)
2019-03-20 13:07:48,047 p=12211 u=student |  TASK [openshift_storage_nfs : Configure exports] ***************************************************************
2019-03-20 13:07:48,700 p=12211 u=student |  changed: [services.lab.example.com]
2019-03-20 13:07:48,707 p=12211 u=student |  TASK [openshift_storage_nfs : register exports] ****************************************************************
2019-03-20 13:07:49,006 p=12211 u=student |  changed: [services.lab.example.com]
2019-03-20 13:07:49,014 p=12211 u=student |  TASK [openshift_storage_nfs : remove exports from /etc/exports] ************************************************
2019-03-20 13:07:49,394 p=12211 u=student |  ok: [services.lab.example.com] => (item="/exports/registry" *(rw,root_squash))
2019-03-20 13:07:49,682 p=12211 u=student |  ok: [services.lab.example.com] => (item="/exports/metrics" *(rw,root_squash))
2019-03-20 13:07:49,974 p=12211 u=student |  ok: [services.lab.example.com] => (item="/exports/logging-es" *(rw,root_squash))
2019-03-20 13:07:50,266 p=12211 u=student |  ok: [services.lab.example.com] => (item="/exports/logging-es-ops" *(rw,root_squash))
2019-03-20 13:07:50,542 p=12211 u=student |  ok: [services.lab.example.com] => (item="/exports/etcd-vol2" *(rw,root_squash,sync,no_wdelay))
2019-03-20 13:07:50,858 p=12211 u=student |  ok: [services.lab.example.com] => (item="/exports/prometheus" *(rw,root_squash))
2019-03-20 13:07:51,140 p=12211 u=student |  ok: [services.lab.example.com] => (item="/exports/prometheus-alertmanager" *(rw,root_squash))
2019-03-20 13:07:51,413 p=12211 u=student |  ok: [services.lab.example.com] => (item="/exports/prometheus-alertbuffer" *(rw,root_squash))
2019-03-20 13:07:51,423 p=12211 u=student |  TASK [openshift_storage_nfs : Enable and start services] *******************************************************
2019-03-20 13:07:52,061 p=12211 u=student |  changed: [services.lab.example.com]
2019-03-20 13:07:52,074 p=12211 u=student |  TASK [openshift_storage_nfs : set_fact] ************************************************************************
2019-03-20 13:07:52,194 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:07:52,195 p=12211 u=student |  RUNNING HANDLER [openshift_storage_nfs : restart nfs-server] ***************************************************
2019-03-20 13:07:52,220 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:07:52,225 p=12211 u=student |  PLAY [NFS Install Checkpoint End] ******************************************************************************
2019-03-20 13:07:52,232 p=12211 u=student |  TASK [Set NFS install 'Complete'] ******************************************************************************
2019-03-20 13:07:52,358 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:07:52,363 p=12211 u=student |  PLAY [Load Balancer Install Checkpoint Start] ******************************************************************
2019-03-20 13:07:52,370 p=12211 u=student |  TASK [Set load balancer install 'In Progress'] *****************************************************************
2019-03-20 13:07:52,385 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:07:52,390 p=12211 u=student |  PLAY [Configure load balancers] ********************************************************************************
2019-03-20 13:07:52,390 p=12211 u=student |  skipping: no hosts matched
2019-03-20 13:07:52,392 p=12211 u=student |  PLAY [Load Balancer Install Checkpoint End] ********************************************************************
2019-03-20 13:07:52,399 p=12211 u=student |  TASK [Set load balancer install 'Complete'] ********************************************************************
2019-03-20 13:07:52,415 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:07:52,420 p=12211 u=student |  PLAY [Master Install Checkpoint Start] *************************************************************************
2019-03-20 13:07:52,427 p=12211 u=student |  TASK [Set Master install 'In Progress'] ************************************************************************
2019-03-20 13:07:52,548 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:07:52,556 p=12211 u=student |  PLAY [Create OpenShift certificates for master hosts] **********************************************************
2019-03-20 13:07:52,577 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:07:53,178 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:53,203 p=12211 u=student |  TASK [openshift_master_facts : Verify required variables are set] **********************************************
2019-03-20 13:07:53,221 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:53,231 p=12211 u=student |  TASK [openshift_master_facts : Set g_metrics_hostname] *********************************************************
2019-03-20 13:07:53,350 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:53,360 p=12211 u=student |  TASK [openshift_master_facts : set_fact] ***********************************************************************
2019-03-20 13:07:53,376 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:53,385 p=12211 u=student |  TASK [openshift_master_facts : Set master facts] ***************************************************************
2019-03-20 13:07:54,209 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:54,221 p=12211 u=student |  TASK [openshift_master_facts : Determine if scheduler config present] ******************************************
2019-03-20 13:07:54,651 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:54,662 p=12211 u=student |  TASK [openshift_master_facts : Set Default scheduler predicates and priorities] ********************************
2019-03-20 13:07:54,709 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:54,721 p=12211 u=student |  TASK [openshift_master_facts : Retrieve current scheduler config] **********************************************
2019-03-20 13:07:54,739 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:54,750 p=12211 u=student |  TASK [openshift_master_facts : Set openshift_master_scheduler_current_config] **********************************
2019-03-20 13:07:54,766 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:54,777 p=12211 u=student |  TASK [openshift_master_facts : Test if scheduler config is readable] *******************************************
2019-03-20 13:07:54,795 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:54,805 p=12211 u=student |  TASK [openshift_master_facts : Set current scheduler predicates and priorities] ********************************
2019-03-20 13:07:54,821 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:54,834 p=12211 u=student |  TASK [openshift_named_certificates : set_fact] *****************************************************************
2019-03-20 13:07:54,851 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:54,861 p=12211 u=student |  TASK [openshift_named_certificates : openshift_facts] **********************************************************
2019-03-20 13:07:55,540 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:55,553 p=12211 u=student |  TASK [openshift_named_certificates : Clear named certificates] *************************************************
2019-03-20 13:07:55,574 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:55,587 p=12211 u=student |  TASK [openshift_named_certificates : Ensure named certificate directory exists] ********************************
2019-03-20 13:07:55,906 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:07:55,916 p=12211 u=student |  TASK [openshift_named_certificates : Land named certificates] **************************************************
2019-03-20 13:07:55,942 p=12211 u=student |  TASK [openshift_named_certificates : Land named certificate keys] **********************************************
2019-03-20 13:07:55,968 p=12211 u=student |  TASK [openshift_named_certificates : Land named CA certificates] ***********************************************
2019-03-20 13:07:55,994 p=12211 u=student |  TASK [openshift_cli : Install clients] *************************************************************************
2019-03-20 13:07:56,506 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:56,516 p=12211 u=student |  TASK [openshift_cli : Pull CLI Image] **************************************************************************
2019-03-20 13:07:56,533 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:56,543 p=12211 u=student |  TASK [openshift_cli : Copy client binaries/symlinks out of CLI image for use on the host] **********************
2019-03-20 13:07:56,561 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:56,575 p=12211 u=student |  TASK [openshift_cli : Pull CLI Image] **************************************************************************
2019-03-20 13:07:56,593 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:56,604 p=12211 u=student |  TASK [openshift_cli : Copy client binaries/symlinks out of CLI image for use on the host] **********************
2019-03-20 13:07:56,622 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:56,634 p=12211 u=student |  TASK [openshift_cli : Reload facts to pick up installed OpenShift version] *************************************
2019-03-20 13:07:57,328 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:57,340 p=12211 u=student |  TASK [openshift_cli : Install bash completion for oc tools] ****************************************************
2019-03-20 13:07:57,813 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:57,823 p=12211 u=student |  TASK [openshift_ca : fail] *************************************************************************************
2019-03-20 13:07:57,843 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:57,853 p=12211 u=student |  TASK [openshift_ca : fail] *************************************************************************************
2019-03-20 13:07:57,870 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:57,889 p=12211 u=student |  TASK [openshift_ca : Install the base package for admin tooling] ***********************************************
2019-03-20 13:07:58,403 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:58,412 p=12211 u=student |  TASK [openshift_ca : Reload generated facts] *******************************************************************
2019-03-20 13:07:58,440 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:58,458 p=12211 u=student |  TASK [openshift_ca : Create openshift_ca_config_dir if it does not exist] **************************************
2019-03-20 13:07:58,775 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:07:58,798 p=12211 u=student |  TASK [openshift_ca : Determine if CA must be created] **********************************************************
2019-03-20 13:07:59,095 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=ca-bundle.crt)
2019-03-20 13:07:59,375 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=ca.crt)
2019-03-20 13:07:59,679 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=ca.key)
2019-03-20 13:07:59,690 p=12211 u=student |  TASK [openshift_ca : set_fact] *********************************************************************************
2019-03-20 13:07:59,730 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:07:59,741 p=12211 u=student |  TASK [openshift_ca : Retain original serviceaccount keys] ******************************************************
2019-03-20 13:07:59,765 p=12211 u=student |  skipping: [master.lab.example.com] => (item=/etc/origin/master/serviceaccounts.private.key) 
2019-03-20 13:07:59,769 p=12211 u=student |  skipping: [master.lab.example.com] => (item=/etc/origin/master/serviceaccounts.public.key) 
2019-03-20 13:07:59,795 p=12211 u=student |  TASK [openshift_ca : Deploy master ca certificate] *************************************************************
2019-03-20 13:07:59,818 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'dest': u'ca.crt', u'src': u''}) 
2019-03-20 13:07:59,822 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'dest': u'ca.key', u'src': u''}) 
2019-03-20 13:07:59,841 p=12211 u=student |  TASK [openshift_ca : Create ca serial] *************************************************************************
2019-03-20 13:07:59,858 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:07:59,868 p=12211 u=student |  TASK [openshift_ca : find] *************************************************************************************
2019-03-20 13:08:00,234 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:00,252 p=12211 u=student |  TASK [openshift_ca : Create the master certificates if they do not already exist] ******************************
2019-03-20 13:08:02,001 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:08:02,019 p=12211 u=student |  TASK [openshift_ca : command] **********************************************************************************
2019-03-20 13:08:02,311 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:08:02,324 p=12211 u=student |  TASK [openshift_ca : copy] *************************************************************************************
2019-03-20 13:08:02,357 p=12211 u=student |  TASK [openshift_ca : copy] *************************************************************************************
2019-03-20 13:08:02,669 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:08:02,690 p=12211 u=student |  TASK [openshift_ca : assemble] *********************************************************************************
2019-03-20 13:08:02,998 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:08:03,016 p=12211 u=student |  TASK [openshift_ca : Test local loopback context] **************************************************************
2019-03-20 13:08:03,471 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:08:03,490 p=12211 u=student |  TASK [openshift_ca : Create temp directory for loopback master client config] **********************************
2019-03-20 13:08:03,509 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:03,528 p=12211 u=student |  TASK [openshift_ca : Generate the loopback master client config] ***********************************************
2019-03-20 13:08:03,547 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:03,574 p=12211 u=student |  TASK [openshift_ca : Copy generated loopback master client config to master config dir] ************************
2019-03-20 13:08:03,597 p=12211 u=student |  skipping: [master.lab.example.com] => (item=openshift-master.crt) 
2019-03-20 13:08:03,606 p=12211 u=student |  skipping: [master.lab.example.com] => (item=openshift-master.key) 
2019-03-20 13:08:03,612 p=12211 u=student |  skipping: [master.lab.example.com] => (item=openshift-master.kubeconfig) 
2019-03-20 13:08:03,636 p=12211 u=student |  TASK [openshift_ca : Delete temp directory] ********************************************************************
2019-03-20 13:08:03,659 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:03,671 p=12211 u=student |  TASK [openshift_ca : Restore original serviceaccount keys] *****************************************************
2019-03-20 13:08:03,695 p=12211 u=student |  skipping: [master.lab.example.com] => (item=/etc/origin/master/serviceaccounts.private.key) 
2019-03-20 13:08:03,702 p=12211 u=student |  skipping: [master.lab.example.com] => (item=/etc/origin/master/serviceaccounts.public.key) 
2019-03-20 13:08:03,715 p=12211 u=student |  TASK [openshift_ca : Remove backup serviceaccount keys] ********************************************************
2019-03-20 13:08:03,741 p=12211 u=student |  skipping: [master.lab.example.com] => (item=/etc/origin/master/serviceaccounts.private.key) 
2019-03-20 13:08:03,747 p=12211 u=student |  skipping: [master.lab.example.com] => (item=/etc/origin/master/serviceaccounts.public.key) 
2019-03-20 13:08:03,759 p=12211 u=student |  TASK [openshift_master_certificates : Check status of master certificates] *************************************
2019-03-20 13:08:04,084 p=12211 u=student |  ok: [master.lab.example.com] => (item=admin.crt)
2019-03-20 13:08:04,374 p=12211 u=student |  ok: [master.lab.example.com] => (item=ca.crt)
2019-03-20 13:08:04,680 p=12211 u=student |  ok: [master.lab.example.com] => (item=ca-bundle.crt)
2019-03-20 13:08:04,977 p=12211 u=student |  ok: [master.lab.example.com] => (item=master.kubelet-client.crt)
2019-03-20 13:08:05,273 p=12211 u=student |  ok: [master.lab.example.com] => (item=master.proxy-client.crt)
2019-03-20 13:08:05,570 p=12211 u=student |  ok: [master.lab.example.com] => (item=master.server.crt)
2019-03-20 13:08:05,945 p=12211 u=student |  ok: [master.lab.example.com] => (item=openshift-master.crt)
2019-03-20 13:08:06,232 p=12211 u=student |  ok: [master.lab.example.com] => (item=service-signer.crt)
2019-03-20 13:08:06,248 p=12211 u=student |  TASK [openshift_master_certificates : set_fact] ****************************************************************
2019-03-20 13:08:06,283 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:06,302 p=12211 u=student |  TASK [openshift_master_certificates : Ensure the generated_configs directory present] **************************
2019-03-20 13:08:06,321 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:06,340 p=12211 u=student |  TASK [openshift_master_certificates : find] ********************************************************************
2019-03-20 13:08:06,635 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:08:06,664 p=12211 u=student |  TASK [openshift_master_certificates : Create the master server certificate] ************************************
2019-03-20 13:08:06,714 p=12211 u=student |  TASK [openshift_master_certificates : Generate the loopback master client config] ******************************
2019-03-20 13:08:06,787 p=12211 u=student |  TASK [openshift_master_certificates : file] ********************************************************************
2019-03-20 13:08:06,818 p=12211 u=student |  skipping: [master.lab.example.com] => (item=admin.crt) 
2019-03-20 13:08:06,826 p=12211 u=student |  skipping: [master.lab.example.com] => (item=admin.key) 
2019-03-20 13:08:06,833 p=12211 u=student |  skipping: [master.lab.example.com] => (item=admin.kubeconfig) 
2019-03-20 13:08:06,839 p=12211 u=student |  skipping: [master.lab.example.com] => (item=master.kubelet-client.crt) 
2019-03-20 13:08:06,845 p=12211 u=student |  skipping: [master.lab.example.com] => (item=master.kubelet-client.key) 
2019-03-20 13:08:06,851 p=12211 u=student |  skipping: [master.lab.example.com] => (item=master.proxy-client.crt) 
2019-03-20 13:08:06,857 p=12211 u=student |  skipping: [master.lab.example.com] => (item=master.proxy-client.key) 
2019-03-20 13:08:06,862 p=12211 u=student |  skipping: [master.lab.example.com] => (item=service-signer.crt) 
2019-03-20 13:08:06,868 p=12211 u=student |  skipping: [master.lab.example.com] => (item=service-signer.key) 
2019-03-20 13:08:06,874 p=12211 u=student |  skipping: [master.lab.example.com] => (item=ca.crt) 
2019-03-20 13:08:06,883 p=12211 u=student |  skipping: [master.lab.example.com] => (item=ca.key) 
2019-03-20 13:08:06,886 p=12211 u=student |  skipping: [master.lab.example.com] => (item=ca-bundle.crt) 
2019-03-20 13:08:06,892 p=12211 u=student |  skipping: [master.lab.example.com] => (item=client-ca-bundle.crt) 
2019-03-20 13:08:06,898 p=12211 u=student |  skipping: [master.lab.example.com] => (item=serviceaccounts.private.key) 
2019-03-20 13:08:06,904 p=12211 u=student |  skipping: [master.lab.example.com] => (item=serviceaccounts.public.key) 
2019-03-20 13:08:06,924 p=12211 u=student |  TASK [openshift_master_certificates : Remove generated etcd client certs when using external etcd] *************
2019-03-20 13:08:07,224 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=master.etcd-client.crt)
2019-03-20 13:08:07,517 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=master.etcd-client.key)
2019-03-20 13:08:07,530 p=12211 u=student |  TASK [openshift_master_certificates : Create local temp directory for syncing certs] ***************************
2019-03-20 13:08:07,547 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:07,562 p=12211 u=student |  TASK [openshift_master_certificates : Chmod local temp directory for syncing certs] ****************************
2019-03-20 13:08:07,578 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:07,599 p=12211 u=student |  TASK [openshift_master_certificates : Create a tarball of the master certs] ************************************
2019-03-20 13:08:07,622 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:07,643 p=12211 u=student |  TASK [openshift_master_certificates : Retrieve the master cert tarball from the master] ************************
2019-03-20 13:08:07,663 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:07,674 p=12211 u=student |  TASK [openshift_master_certificates : Ensure certificate directory exists] *************************************
2019-03-20 13:08:07,694 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:07,704 p=12211 u=student |  TASK [openshift_master_certificates : Unarchive the tarball on the master] *************************************
2019-03-20 13:08:07,724 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:07,738 p=12211 u=student |  TASK [openshift_master_certificates : Delete local temp directory] *********************************************
2019-03-20 13:08:07,757 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:07,769 p=12211 u=student |  TASK [openshift_master_certificates : Lookup default group for ansible_ssh_user] *******************************
2019-03-20 13:08:08,067 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:08,077 p=12211 u=student |  TASK [openshift_master_certificates : set_fact] ****************************************************************
2019-03-20 13:08:08,112 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:08,122 p=12211 u=student |  TASK [openshift_master_certificates : Create the client config dir(s)] *****************************************
2019-03-20 13:08:08,419 p=12211 u=student |  changed: [master.lab.example.com] => (item=student)
2019-03-20 13:08:08,721 p=12211 u=student |  changed: [master.lab.example.com] => (item=root)
2019-03-20 13:08:08,733 p=12211 u=student |  TASK [openshift_master_certificates : Copy the admin client config(s)] *****************************************
2019-03-20 13:08:09,033 p=12211 u=student |  changed: [master.lab.example.com] => (item=student)
2019-03-20 13:08:09,314 p=12211 u=student |  changed: [master.lab.example.com] => (item=root)
2019-03-20 13:08:09,324 p=12211 u=student |  TASK [openshift_master_certificates : Update the permissions on the admin client config(s)] ********************
2019-03-20 13:08:09,634 p=12211 u=student |  changed: [master.lab.example.com] => (item=student)
2019-03-20 13:08:09,932 p=12211 u=student |  changed: [master.lab.example.com] => (item=root)
2019-03-20 13:08:09,942 p=12211 u=student |  TASK [openshift_master_certificates : Check for ca-bundle.crt] *************************************************
2019-03-20 13:08:10,237 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:10,248 p=12211 u=student |  TASK [openshift_master_certificates : Check for ca.crt] ********************************************************
2019-03-20 13:08:10,549 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:10,561 p=12211 u=student |  TASK [openshift_master_certificates : Migrate ca.crt to ca-bundle.crt] *****************************************
2019-03-20 13:08:10,581 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:10,592 p=12211 u=student |  TASK [openshift_master_certificates : Link ca.crt to ca-bundle.crt] ********************************************
2019-03-20 13:08:10,612 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:10,620 p=12211 u=student |  PLAY [Disable excluders] ***************************************************************************************
2019-03-20 13:08:10,631 p=12211 u=student |  TASK [openshift_excluder : Detecting Atomic Host Operating System] *********************************************
2019-03-20 13:08:10,939 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:10,948 p=12211 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_docker_excluder] **********************************
2019-03-20 13:08:10,989 p=12211 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-20 13:08:10,999 p=12211 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_openshift_excluder] *******************************
2019-03-20 13:08:11,038 p=12211 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-20 13:08:11,048 p=12211 u=student |  TASK [openshift_excluder : Fail if invalid openshift_excluder_action provided] *********************************
2019-03-20 13:08:11,065 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:11,074 p=12211 u=student |  TASK [openshift_excluder : Fail if r_openshift_excluder_upgrade_target is not defined] *************************
2019-03-20 13:08:11,093 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:11,103 p=12211 u=student |  TASK [openshift_excluder : Include main action task file] ******************************************************
2019-03-20 13:08:11,145 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/disable.yml for master.lab.example.com
2019-03-20 13:08:11,155 p=12211 u=student |  TASK [openshift_excluder : Include verify_upgrade.yml when upgrading] ******************************************
2019-03-20 13:08:11,169 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:11,179 p=12211 u=student |  TASK [openshift_excluder : Disable excluders before the upgrade to remove older excluding expressions] *********
2019-03-20 13:08:11,209 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/unexclude.yml for master.lab.example.com
2019-03-20 13:08:11,218 p=12211 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-20 13:08:11,518 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:11,528 p=12211 u=student |  TASK [openshift_excluder : disable docker excluder] ************************************************************
2019-03-20 13:08:11,888 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:11,897 p=12211 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-20 13:08:12,193 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:12,203 p=12211 u=student |  TASK [openshift_excluder : disable openshift excluder] *********************************************************
2019-03-20 13:08:12,226 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:12,236 p=12211 u=student |  TASK [openshift_excluder : Include install.yml] ****************************************************************
2019-03-20 13:08:12,271 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/install.yml for master.lab.example.com
2019-03-20 13:08:12,282 p=12211 u=student |  TASK [openshift_excluder : Install docker excluder - yum] ******************************************************
2019-03-20 13:08:13,148 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:13,157 p=12211 u=student |  TASK [openshift_excluder : Install docker excluder - dnf] ******************************************************
2019-03-20 13:08:13,183 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:13,192 p=12211 u=student |  TASK [openshift_excluder : Install openshift excluder - yum] ***************************************************
2019-03-20 13:08:15,199 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:15,208 p=12211 u=student |  TASK [openshift_excluder : Install openshift excluder - dnf] ***************************************************
2019-03-20 13:08:15,235 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:15,244 p=12211 u=student |  TASK [openshift_excluder : set_fact] ***************************************************************************
2019-03-20 13:08:15,281 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:15,290 p=12211 u=student |  TASK [openshift_excluder : Include exclude.yml] ****************************************************************
2019-03-20 13:08:15,327 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/exclude.yml for master.lab.example.com
2019-03-20 13:08:15,342 p=12211 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-20 13:08:15,654 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:15,665 p=12211 u=student |  TASK [openshift_excluder : Enable docker excluder] *************************************************************
2019-03-20 13:08:16,002 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:16,011 p=12211 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-20 13:08:16,309 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:16,319 p=12211 u=student |  TASK [openshift_excluder : Enable openshift excluder] **********************************************************
2019-03-20 13:08:16,654 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:16,664 p=12211 u=student |  TASK [openshift_excluder : Include unexclude.yml] **************************************************************
2019-03-20 13:08:16,719 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/unexclude.yml for master.lab.example.com
2019-03-20 13:08:16,739 p=12211 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-20 13:08:17,035 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:17,045 p=12211 u=student |  TASK [openshift_excluder : disable docker excluder] ************************************************************
2019-03-20 13:08:17,062 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:17,071 p=12211 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-20 13:08:17,362 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:17,371 p=12211 u=student |  TASK [openshift_excluder : disable openshift excluder] *********************************************************
2019-03-20 13:08:17,723 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:17,729 p=12211 u=student |  PLAY [Gather and set facts for master hosts] *******************************************************************
2019-03-20 13:08:17,740 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:08:18,205 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:18,229 p=12211 u=student |  TASK [Detect if this host is a new master in a scale up] *******************************************************
2019-03-20 13:08:18,261 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:18,270 p=12211 u=student |  TASK [Scaleup Detection] ***************************************************************************************
2019-03-20 13:08:18,299 p=12211 u=student |  ok: [master.lab.example.com] => {
    "g_openshift_master_is_scaleup": false
}
2019-03-20 13:08:18,308 p=12211 u=student |  TASK [Check for RPM generated config marker file .config_managed] **********************************************
2019-03-20 13:08:18,593 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:18,602 p=12211 u=student |  TASK [Remove RPM generated config files if present] ************************************************************
2019-03-20 13:08:18,622 p=12211 u=student |  skipping: [master.lab.example.com] => (item=master) 
2019-03-20 13:08:18,629 p=12211 u=student |  skipping: [master.lab.example.com] => (item=node) 
2019-03-20 13:08:18,633 p=12211 u=student |  skipping: [master.lab.example.com] => (item=.config_managed) 
2019-03-20 13:08:18,643 p=12211 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-20 13:08:18,693 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:18,703 p=12211 u=student |  TASK [openshift_facts] *****************************************************************************************
2019-03-20 13:08:19,394 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:19,402 p=12211 u=student |  PLAY [Inspect state of first master config settings] ***********************************************************
2019-03-20 13:08:19,410 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:08:19,914 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:19,938 p=12211 u=student |  TASK [openshift_facts] *****************************************************************************************
2019-03-20 13:08:20,628 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:20,640 p=12211 u=student |  TASK [Check for existing configuration] ************************************************************************
2019-03-20 13:08:20,942 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:20,951 p=12211 u=student |  TASK [Set clean install fact] **********************************************************************************
2019-03-20 13:08:21,072 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:21,081 p=12211 u=student |  TASK [Determine if etcd3 storage is in use] ********************************************************************
2019-03-20 13:08:21,470 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:21,480 p=12211 u=student |  TASK [Set etcd3 fact] ******************************************************************************************
2019-03-20 13:08:21,512 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:21,521 p=12211 u=student |  TASK [Check if atomic-openshift-master sysconfig exists yet] ***************************************************
2019-03-20 13:08:21,836 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:21,844 p=12211 u=student |  TASK [Preserve OPENSHIFT_DEFAULT_REGISTRY master parameter if present] *****************************************
2019-03-20 13:08:21,860 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:21,869 p=12211 u=student |  TASK [Check if atomic-openshift-master-api sysconfig exists yet] ***********************************************
2019-03-20 13:08:22,152 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:22,161 p=12211 u=student |  TASK [Preserve OPENSHIFT_DEFAULT_REGISTRY master-api parameter if present] *************************************
2019-03-20 13:08:22,176 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:22,185 p=12211 u=student |  TASK [Check if atomic-openshift-master-controllers sysconfig exists yet] ***************************************
2019-03-20 13:08:22,473 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:22,482 p=12211 u=student |  TASK [Preserve OPENSHIFT_DEFAULT_REGISTRY master-controllers parameter if present] *****************************
2019-03-20 13:08:22,498 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:22,507 p=12211 u=student |  TASK [Update facts with OPENSHIFT_DEFAULT_REGISTRY value] ******************************************************
2019-03-20 13:08:22,540 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:22,545 p=12211 u=student |  PLAY [Generate master session secrets] *************************************************************************
2019-03-20 13:08:22,554 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:08:23,054 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:23,077 p=12211 u=student |  TASK [openshift_facts] *****************************************************************************************
2019-03-20 13:08:23,895 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:23,907 p=12211 u=student |  PLAY [Configure masters] ***************************************************************************************
2019-03-20 13:08:23,936 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:08:24,490 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:24,515 p=12211 u=student |  TASK [openshift_master_facts : Verify required variables are set] **********************************************
2019-03-20 13:08:24,531 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:24,541 p=12211 u=student |  TASK [openshift_master_facts : Set g_metrics_hostname] *********************************************************
2019-03-20 13:08:24,676 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:24,688 p=12211 u=student |  TASK [openshift_master_facts : set_fact] ***********************************************************************
2019-03-20 13:08:24,707 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:24,719 p=12211 u=student |  TASK [openshift_master_facts : Set master facts] ***************************************************************
2019-03-20 13:08:25,582 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:25,596 p=12211 u=student |  TASK [openshift_master_facts : Determine if scheduler config present] ******************************************
2019-03-20 13:08:25,907 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:25,917 p=12211 u=student |  TASK [openshift_master_facts : Set Default scheduler predicates and priorities] ********************************
2019-03-20 13:08:26,043 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:26,055 p=12211 u=student |  TASK [openshift_master_facts : Retrieve current scheduler config] **********************************************
2019-03-20 13:08:26,070 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:26,081 p=12211 u=student |  TASK [openshift_master_facts : Set openshift_master_scheduler_current_config] **********************************
2019-03-20 13:08:26,096 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:26,106 p=12211 u=student |  TASK [openshift_master_facts : Test if scheduler config is readable] *******************************************
2019-03-20 13:08:26,122 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:26,133 p=12211 u=student |  TASK [openshift_master_facts : Set current scheduler predicates and priorities] ********************************
2019-03-20 13:08:26,149 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:26,159 p=12211 u=student |  TASK [openshift_clock : Determine if chrony is installed] ******************************************************
2019-03-20 13:08:26,565 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:26,577 p=12211 u=student |  TASK [openshift_clock : Install ntp package] *******************************************************************
2019-03-20 13:08:26,597 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:26,609 p=12211 u=student |  TASK [openshift_clock : Start and enable ntpd/chronyd] *********************************************************
2019-03-20 13:08:27,042 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:27,052 p=12211 u=student |  TASK [openshift_cloud_provider : Set cloud provider facts] *****************************************************
2019-03-20 13:08:27,067 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:27,078 p=12211 u=student |  TASK [openshift_cloud_provider : Create cloudprovider config dir] **********************************************
2019-03-20 13:08:27,093 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:27,103 p=12211 u=student |  TASK [openshift_cloud_provider : include the defined cloud provider files] *************************************
2019-03-20 13:08:27,120 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:27,130 p=12211 u=student |  TASK [openshift_builddefaults : Set builddefaults] *************************************************************
2019-03-20 13:08:27,943 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:27,956 p=12211 u=student |  TASK [openshift_builddefaults : Set builddefaults config structure] ********************************************
2019-03-20 13:08:28,769 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:28,787 p=12211 u=student |  TASK [openshift_buildoverrides : Set buildoverrides config structure] ******************************************
2019-03-20 13:08:29,576 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:29,591 p=12211 u=student |  TASK [nickhammond.logrotate : nickhammond.logrotate | Install logrotate] ***************************************
2019-03-20 13:08:30,154 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:30,164 p=12211 u=student |  TASK [nickhammond.logrotate : nickhammond.logrotate | Setup logrotate.d scripts] *******************************
2019-03-20 13:08:30,190 p=12211 u=student |  TASK [openshift_master : fail] *********************************************************************************
2019-03-20 13:08:30,206 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:30,217 p=12211 u=student |  TASK [openshift_master : Add iptables allow rules] *************************************************************
2019-03-20 13:08:30,249 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'api server https'}) 
2019-03-20 13:08:30,257 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'8444/tcp', u'service': u'api controllers https'}) 
2019-03-20 13:08:30,266 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'8053/tcp', u'service': u'skydns tcp'}) 
2019-03-20 13:08:30,272 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'8053/udp', u'service': u'skydns udp'}) 
2019-03-20 13:08:30,279 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'4001/tcp', u'service': u'etcd embedded'}) 
2019-03-20 13:08:30,291 p=12211 u=student |  TASK [openshift_master : Remove iptables rules] ****************************************************************
2019-03-20 13:08:30,318 p=12211 u=student |  TASK [openshift_master : Add firewalld allow rules] ************************************************************
2019-03-20 13:08:30,985 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'api server https'})
2019-03-20 13:08:31,504 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'port': u'8444/tcp', u'service': u'api controllers https'})
2019-03-20 13:08:32,043 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'port': u'8053/tcp', u'service': u'skydns tcp'})
2019-03-20 13:08:32,551 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'port': u'8053/udp', u'service': u'skydns udp'})
2019-03-20 13:08:32,566 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'4001/tcp', u'service': u'etcd embedded'}) 
2019-03-20 13:08:32,580 p=12211 u=student |  TASK [openshift_master : Remove firewalld allow rules] *********************************************************
2019-03-20 13:08:32,608 p=12211 u=student |  TASK [openshift_master : Install Master package] ***************************************************************
2019-03-20 13:08:34,722 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:34,733 p=12211 u=student |  TASK [openshift_master : Create r_openshift_master_data_dir] ***************************************************
2019-03-20 13:08:34,752 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:34,764 p=12211 u=student |  TASK [openshift_master : Reload systemd units] *****************************************************************
2019-03-20 13:08:34,782 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:34,794 p=12211 u=student |  TASK [openshift_master : Re-gather package dependent master facts] *********************************************
2019-03-20 13:08:35,582 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:35,596 p=12211 u=student |  TASK [openshift_master : Create config parent directory if it does not exist] **********************************
2019-03-20 13:08:36,017 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:36,027 p=12211 u=student |  TASK [openshift_master : Create the policy file if it does not already exist] **********************************
2019-03-20 13:08:36,581 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:36,591 p=12211 u=student |  TASK [openshift_master : Create the scheduler config] **********************************************************
2019-03-20 13:08:37,276 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:37,285 p=12211 u=student |  TASK [openshift_master : Install httpd-tools if needed] ********************************************************
2019-03-20 13:08:37,866 p=12211 u=student |  ok: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'})
2019-03-20 13:08:37,879 p=12211 u=student |  TASK [openshift_master : Ensure htpasswd directory exists] *****************************************************
2019-03-20 13:08:38,275 p=12211 u=student |  ok: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'})
2019-03-20 13:08:38,288 p=12211 u=student |  TASK [openshift_master : Create the htpasswd file if needed] ***************************************************
2019-03-20 13:08:38,983 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'})
2019-03-20 13:08:38,995 p=12211 u=student |  TASK [openshift_master : Ensure htpasswd file exists] **********************************************************
2019-03-20 13:08:39,304 p=12211 u=student |  ok: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'})
2019-03-20 13:08:39,315 p=12211 u=student |  TASK [openshift_master : Create the ldap ca file if needed] ****************************************************
2019-03-20 13:08:39,336 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'}) 
2019-03-20 13:08:39,347 p=12211 u=student |  TASK [openshift_master : Create the openid ca file if needed] **************************************************
2019-03-20 13:08:39,368 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'}) 
2019-03-20 13:08:39,381 p=12211 u=student |  TASK [openshift_master : Create the request header ca file if needed] ******************************************
2019-03-20 13:08:39,404 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'}) 
2019-03-20 13:08:39,416 p=12211 u=student |  TASK [openshift_master : Include push_via_dns.yml] *************************************************************
2019-03-20 13:08:39,453 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_master/tasks/push_via_dns.yml for master.lab.example.com
2019-03-20 13:08:39,469 p=12211 u=student |  TASK [openshift_master : check whether our docker-registry setting exists in the env file] *********************
2019-03-20 13:08:39,885 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:39,898 p=12211 u=student |  TASK [openshift_master : set_fact] *****************************************************************************
2019-03-20 13:08:40,024 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:40,034 p=12211 u=student |  TASK [openshift_master : Set fact of all etcd host IPs] ********************************************************
2019-03-20 13:08:40,860 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:40,872 p=12211 u=student |  TASK [openshift_master : Install the systemd units] ************************************************************
2019-03-20 13:08:40,941 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_master/tasks/systemd_units.yml for master.lab.example.com
2019-03-20 13:08:40,958 p=12211 u=student |  TASK [openshift_master : include push_via_dns.yml tasks] *******************************************************
2019-03-20 13:08:41,013 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_master/tasks/push_via_dns.yml for master.lab.example.com
2019-03-20 13:08:41,028 p=12211 u=student |  TASK [openshift_master : check whether our docker-registry setting exists in the env file] *********************
2019-03-20 13:08:41,043 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:41,054 p=12211 u=student |  TASK [openshift_master : set_fact] *****************************************************************************
2019-03-20 13:08:41,070 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:41,080 p=12211 u=student |  TASK [openshift_master : Set HA Service Info for containerized installs] ***************************************
2019-03-20 13:08:41,095 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:41,105 p=12211 u=student |  TASK [openshift_master : include registry_auth tasks] **********************************************************
2019-03-20 13:08:41,170 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_master/tasks/registry_auth.yml for master.lab.example.com
2019-03-20 13:08:41,186 p=12211 u=student |  TASK [openshift_master : Check for credentials file for registry auth] *****************************************
2019-03-20 13:08:41,203 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:41,213 p=12211 u=student |  TASK [openshift_master : Create credentials for registry auth] *************************************************
2019-03-20 13:08:41,233 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:41,244 p=12211 u=student |  TASK [openshift_master : Create credentials for registry auth (alternative)] ***********************************
2019-03-20 13:08:41,263 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:41,273 p=12211 u=student |  TASK [openshift_master : Setup ro mount of /root/.docker for containerized hosts] ******************************
2019-03-20 13:08:41,288 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:41,299 p=12211 u=student |  TASK [openshift_master : Disable the legacy master service if it exists] ***************************************
2019-03-20 13:08:41,676 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:41,688 p=12211 u=student |  TASK [openshift_master : Remove the legacy master service if it exists] ****************************************
2019-03-20 13:08:41,996 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:42,007 p=12211 u=student |  TASK [openshift_master : Pre-pull master image] ****************************************************************
2019-03-20 13:08:42,023 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:42,033 p=12211 u=student |  TASK [openshift_master : Create the ha systemd unit files] *****************************************************
2019-03-20 13:08:42,654 p=12211 u=student |  changed: [master.lab.example.com] => (item=api)
2019-03-20 13:08:43,259 p=12211 u=student |  changed: [master.lab.example.com] => (item=controllers)
2019-03-20 13:08:43,272 p=12211 u=student |  TASK [openshift_master : command] ******************************************************************************
2019-03-20 13:08:43,616 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:43,628 p=12211 u=student |  TASK [openshift_master : enable master services] ***************************************************************
2019-03-20 13:08:44,005 p=12211 u=student |  changed: [master.lab.example.com] => (item=api)
2019-03-20 13:08:44,331 p=12211 u=student |  changed: [master.lab.example.com] => (item=controllers)
2019-03-20 13:08:44,345 p=12211 u=student |  TASK [openshift_master : Preserve Master API Proxy Config options] *********************************************
2019-03-20 13:08:44,663 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:44,674 p=12211 u=student |  TASK [openshift_master : Preserve Master API AWS options] ******************************************************
2019-03-20 13:08:44,975 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:44,986 p=12211 u=student |  TASK [openshift_master : Create the master api service env file] ***********************************************
2019-03-20 13:08:45,608 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:45,619 p=12211 u=student |  TASK [openshift_master : Restore Master API Proxy Config Options] **********************************************
2019-03-20 13:08:45,648 p=12211 u=student |  TASK [openshift_master : Restore Master API AWS Options] *******************************************************
2019-03-20 13:08:45,678 p=12211 u=student |  TASK [openshift_master : Preserve Master Controllers Proxy Config options] *************************************
2019-03-20 13:08:45,987 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:45,998 p=12211 u=student |  TASK [openshift_master : Preserve Master Controllers AWS options] **********************************************
2019-03-20 13:08:46,286 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:46,297 p=12211 u=student |  TASK [openshift_master : Create the master controllers service env file] ***************************************
2019-03-20 13:08:46,958 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:46,968 p=12211 u=student |  TASK [openshift_master : Restore Master Controllers Proxy Config Options] **************************************
2019-03-20 13:08:46,993 p=12211 u=student |  TASK [openshift_master : Restore Master Controllers AWS Options] ***********************************************
2019-03-20 13:08:47,018 p=12211 u=student |  TASK [openshift_master : Install Master system container] ******************************************************
2019-03-20 13:08:47,035 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:47,045 p=12211 u=student |  TASK [openshift_master : Create session secrets file] **********************************************************
2019-03-20 13:08:47,664 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:47,675 p=12211 u=student |  TASK [openshift_master : set_fact] *****************************************************************************
2019-03-20 13:08:47,717 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:47,728 p=12211 u=student |  TASK [openshift_master : Create master config] *****************************************************************
2019-03-20 13:08:48,406 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:48,415 p=12211 u=student |  TASK [openshift_master : include_tasks] ************************************************************************
2019-03-20 13:08:48,430 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:48,441 p=12211 u=student |  TASK [openshift_master : include_tasks] ************************************************************************
2019-03-20 13:08:48,496 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_master/tasks/set_loopback_context.yml for master.lab.example.com
2019-03-20 13:08:48,521 p=12211 u=student |  TASK [openshift_master : Test local loopback context] **********************************************************
2019-03-20 13:08:48,992 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:49,004 p=12211 u=student |  TASK [openshift_master : command] ******************************************************************************
2019-03-20 13:08:49,020 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:49,031 p=12211 u=student |  TASK [openshift_master : command] ******************************************************************************
2019-03-20 13:08:49,048 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:49,058 p=12211 u=student |  TASK [openshift_master : command] ******************************************************************************
2019-03-20 13:08:49,076 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:49,086 p=12211 u=student |  TASK [openshift_master : Start and enable master api] **********************************************************
2019-03-20 13:08:55,593 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:08:55,610 p=12211 u=student |  TASK [openshift_master : Dump logs from master-api if it failed] ***********************************************
2019-03-20 13:08:55,628 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:08:55,640 p=12211 u=student |  TASK [openshift_master : set_fact] *****************************************************************************
2019-03-20 13:08:55,681 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:08:55,693 p=12211 u=student |  TASK [openshift_master : include_tasks] ************************************************************************
2019-03-20 13:08:55,794 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_master/tasks/check_master_api_is_ready.yml for master.lab.example.com
2019-03-20 13:08:55,825 p=12211 u=student |  TASK [openshift_master : Wait for API to become available] *****************************************************
2019-03-20 13:08:56,175 p=12211 u=student |  FAILED - RETRYING: Wait for API to become available (120 retries left).
2019-03-20 13:08:57,483 p=12211 u=student |  FAILED - RETRYING: Wait for API to become available (119 retries left).
2019-03-20 13:08:58,811 p=12211 u=student |  FAILED - RETRYING: Wait for API to become available (118 retries left).
2019-03-20 13:09:00,119 p=12211 u=student |   [WARNING]: Consider using get_url or uri module rather than running curl

2019-03-20 13:09:00,119 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:00,131 p=12211 u=student |  TASK [openshift_master : Collect verbose curl output when API didn't become available] *************************
2019-03-20 13:09:00,469 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:00,480 p=12211 u=student |  TASK [openshift_master : Collect API logs when API didn't become available] ************************************
2019-03-20 13:09:00,497 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:00,508 p=12211 u=student |  TASK [openshift_master : Dump verbose curl output when the API didn't become available] ************************
2019-03-20 13:09:00,525 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:00,536 p=12211 u=student |  TASK [openshift_master : Dump API logs when the API didn't become availabale] **********************************
2019-03-20 13:09:00,552 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:00,564 p=12211 u=student |  TASK [openshift_master : fail] *********************************************************************************
2019-03-20 13:09:00,582 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:00,593 p=12211 u=student |  TASK [openshift_master : Start and enable master controller service] *******************************************
2019-03-20 13:09:01,151 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:01,166 p=12211 u=student |  TASK [openshift_master : configure vsphere svc account] ********************************************************
2019-03-20 13:09:01,182 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:01,193 p=12211 u=student |  TASK [openshift_master : update vsphere provider master config] ************************************************
2019-03-20 13:09:01,209 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:01,221 p=12211 u=student |  TASK [openshift_master : Dump logs from master-controllers if it failed] ***************************************
2019-03-20 13:09:01,237 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:01,247 p=12211 u=student |  TASK [openshift_master : Set fact master_controllers_service_status_changed] ***********************************
2019-03-20 13:09:01,280 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:01,292 p=12211 u=student |  TASK [openshift_master : node bootstrap settings] **************************************************************
2019-03-20 13:09:01,308 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:01,319 p=12211 u=student |  TASK [tuned : Check for tuned package] *************************************************************************
2019-03-20 13:09:01,651 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:01,662 p=12211 u=student |  TASK [tuned : Set tuned OpenShift variables] *******************************************************************
2019-03-20 13:09:01,700 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:01,711 p=12211 u=student |  TASK [tuned : Ensure directory structure exists] ***************************************************************
2019-03-20 13:09:02,028 p=12211 u=student |  changed: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:09:02,320 p=12211 u=student |  changed: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:09:02,622 p=12211 u=student |  changed: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:09:02,634 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:09:02,643 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:09:02,651 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:09:02,659 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:09:02,674 p=12211 u=student |  TASK [tuned : Ensure files are populated from templates] *******************************************************
2019-03-20 13:09:02,704 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:09:02,713 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:09:02,723 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:09:03,315 p=12211 u=student |  changed: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:09:04,131 p=12211 u=student |  changed: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:09:04,961 p=12211 u=student |  changed: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:09:05,791 p=12211 u=student |  changed: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': u's0', 'seuser': u'system_u', 'serole': u'object_r', 'ctime': 1553065475.4003277, 'state': u'file', 'gid': 0, 'mode': u'0644', 'mtime': 1522031926.0, 'owner': u'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': u'usr_t'})
2019-03-20 13:09:05,805 p=12211 u=student |  TASK [tuned : Make tuned use the recommended tuned profile on restart] *****************************************
2019-03-20 13:09:06,129 p=12211 u=student |  changed: [master.lab.example.com] => (item=/etc/tuned/active_profile)
2019-03-20 13:09:06,420 p=12211 u=student |  changed: [master.lab.example.com] => (item=/etc/tuned/profile_mode)
2019-03-20 13:09:06,433 p=12211 u=student |  TASK [tuned : Restart tuned service] ***************************************************************************
2019-03-20 13:09:07,380 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:07,392 p=12211 u=student |  TASK [nuage_common : Set the Nuage plugin openshift directory fact to handle Atomic host install] **************
2019-03-20 13:09:07,408 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,419 p=12211 u=student |  TASK [nuage_common : Set the Nuage CNI network config directory fact to handle Atomic host install] ************
2019-03-20 13:09:07,435 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,446 p=12211 u=student |  TASK [nuage_common : Set the Nuage CNI binary directory fact to handle Atomic host install] ********************
2019-03-20 13:09:07,462 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,472 p=12211 u=student |  TASK [nuage_common : Assure CNI plugin config dir exists before daemon set install] ****************************
2019-03-20 13:09:07,491 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,501 p=12211 u=student |  TASK [nuage_common : Assure CNI netconf directory exists before daemon set install] ****************************
2019-03-20 13:09:07,519 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,529 p=12211 u=student |  TASK [nuage_common : Assure CNI plugin binary directory exists before daemon set install] **********************
2019-03-20 13:09:07,547 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,558 p=12211 u=student |  TASK [nuage_ca : Install openssl] ******************************************************************************
2019-03-20 13:09:07,578 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,600 p=12211 u=student |  TASK [nuage_ca : Create CA directory] **************************************************************************
2019-03-20 13:09:07,620 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,642 p=12211 u=student |  TASK [nuage_ca : Create certificate directory] *****************************************************************
2019-03-20 13:09:07,663 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,686 p=12211 u=student |  TASK [nuage_ca : Check if the CA key already exists] ***********************************************************
2019-03-20 13:09:07,707 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,730 p=12211 u=student |  TASK [nuage_ca : Create CA key] ********************************************************************************
2019-03-20 13:09:07,751 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,776 p=12211 u=student |  TASK [nuage_ca : Check if the CA crt already exists] ***********************************************************
2019-03-20 13:09:07,796 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,818 p=12211 u=student |  TASK [nuage_ca : Create CA crt] ********************************************************************************
2019-03-20 13:09:07,837 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,857 p=12211 u=student |  TASK [nuage_ca : Create the serial file] ***********************************************************************
2019-03-20 13:09:07,874 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,894 p=12211 u=student |  TASK [nuage_ca : Copy SSL config file] *************************************************************************
2019-03-20 13:09:07,912 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,922 p=12211 u=student |  TASK [nuage_common : Set the Nuage plugin openshift directory fact to handle Atomic host install] **************
2019-03-20 13:09:07,939 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,950 p=12211 u=student |  TASK [nuage_common : Set the Nuage CNI network config directory fact to handle Atomic host install] ************
2019-03-20 13:09:07,966 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:07,977 p=12211 u=student |  TASK [nuage_common : Set the Nuage CNI binary directory fact to handle Atomic host install] ********************
2019-03-20 13:09:07,992 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,005 p=12211 u=student |  TASK [nuage_common : Assure CNI plugin config dir exists before daemon set install] ****************************
2019-03-20 13:09:08,021 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,033 p=12211 u=student |  TASK [nuage_common : Assure CNI netconf directory exists before daemon set install] ****************************
2019-03-20 13:09:08,049 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,059 p=12211 u=student |  TASK [nuage_common : Assure CNI plugin binary directory exists before daemon set install] **********************
2019-03-20 13:09:08,079 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,090 p=12211 u=student |  TASK [nuage_master : Add iptables allow rules] *****************************************************************
2019-03-20 13:09:08,113 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'9443/tcp', u'service': u'openshift-monitor'}) 
2019-03-20 13:09:08,124 p=12211 u=student |  TASK [nuage_master : Remove iptables rules] ********************************************************************
2019-03-20 13:09:08,151 p=12211 u=student |  TASK [nuage_master : Add firewalld allow rules] ****************************************************************
2019-03-20 13:09:08,175 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'9443/tcp', u'service': u'openshift-monitor'}) 
2019-03-20 13:09:08,186 p=12211 u=student |  TASK [nuage_master : Remove firewalld allow rules] *************************************************************
2019-03-20 13:09:08,215 p=12211 u=student |  TASK [nuage_master : Set the Nuage certificate directory fact for Atomic hosts] ********************************
2019-03-20 13:09:08,234 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,243 p=12211 u=student |  TASK [nuage_master : Set the Nuage kubeconfig file path fact for Atomic hosts] *********************************
2019-03-20 13:09:08,260 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,271 p=12211 u=student |  TASK [nuage_master : Set the Nuage monitor yaml location fact for Atomic hosts] ********************************
2019-03-20 13:09:08,289 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,300 p=12211 u=student |  TASK [nuage_master : Set the Nuage monitor certs location fact for Atomic hosts] *******************************
2019-03-20 13:09:08,317 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,328 p=12211 u=student |  TASK [nuage_master : Set the Nuage master config directory for daemon sets install] ****************************
2019-03-20 13:09:08,344 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,355 p=12211 u=student |  TASK [nuage_master : Set the Nuage node config directory for daemon sets install] ******************************
2019-03-20 13:09:08,371 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,381 p=12211 u=student |  TASK [nuage_master : Set the Nuage CNI plugin binary directory for daemon sets install] ************************
2019-03-20 13:09:08,397 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,408 p=12211 u=student |  TASK [nuage_master : Create directory /usr/share/nuage-openshift-monitor] **************************************
2019-03-20 13:09:08,425 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,436 p=12211 u=student |  TASK [nuage_master : Create directory /var/usr/share/nuage-openshift-monitor] **********************************
2019-03-20 13:09:08,454 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,464 p=12211 u=student |  TASK [nuage_master : Create directory /var/usr/bin for monitor binary on atomic] *******************************
2019-03-20 13:09:08,481 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,493 p=12211 u=student |  TASK [nuage_master : Create CNI bin directory /var/opt/cni/bin] ************************************************
2019-03-20 13:09:08,508 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,519 p=12211 u=student |  TASK [nuage_master : Create the log directory] *****************************************************************
2019-03-20 13:09:08,535 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,546 p=12211 u=student |  TASK [nuage_master : include_tasks] ****************************************************************************
2019-03-20 13:09:08,566 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,579 p=12211 u=student |  TASK [nuage_master : Download the certs and keys] **************************************************************
2019-03-20 13:09:08,601 p=12211 u=student |  skipping: [master.lab.example.com] => (item=ca.crt) 
2019-03-20 13:09:08,607 p=12211 u=student |  skipping: [master.lab.example.com] => (item=nuage.crt) 
2019-03-20 13:09:08,613 p=12211 u=student |  skipping: [master.lab.example.com] => (item=nuage.key) 
2019-03-20 13:09:08,618 p=12211 u=student |  skipping: [master.lab.example.com] => (item=nuage.kubeconfig) 
2019-03-20 13:09:08,631 p=12211 u=student |  TASK [nuage_master : Copy the certificates and keys] ***********************************************************
2019-03-20 13:09:08,653 p=12211 u=student |  skipping: [master.lab.example.com] => (item=ca.crt) 
2019-03-20 13:09:08,657 p=12211 u=student |  skipping: [master.lab.example.com] => (item=nuage.crt) 
2019-03-20 13:09:08,667 p=12211 u=student |  skipping: [master.lab.example.com] => (item=nuage.key) 
2019-03-20 13:09:08,672 p=12211 u=student |  skipping: [master.lab.example.com] => (item=nuage.kubeconfig) 
2019-03-20 13:09:08,684 p=12211 u=student |  TASK [nuage_master : include_tasks] ****************************************************************************
2019-03-20 13:09:08,701 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,713 p=12211 u=student |  TASK [nuage_master : include_tasks] ****************************************************************************
2019-03-20 13:09:08,731 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,742 p=12211 u=student |  TASK [nuage_master : Install Nuage VSD user certificate] *******************************************************
2019-03-20 13:09:08,761 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,773 p=12211 u=student |  TASK [nuage_master : Install Nuage VSD user key] ***************************************************************
2019-03-20 13:09:08,793 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,807 p=12211 u=student |  TASK [nuage_master : Create Nuage master daemon set yaml file] *************************************************
2019-03-20 13:09:08,823 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,835 p=12211 u=student |  TASK [nuage_master : Create Nuage node daemon set yaml file] ***************************************************
2019-03-20 13:09:08,851 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,862 p=12211 u=student |  TASK [nuage_master : Create Nuage Infra Pod daemon set yaml file] **********************************************
2019-03-20 13:09:08,878 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,889 p=12211 u=student |  TASK [nuage_master : Add the service account to the privileged scc to have root permissions for kube-system] ***
2019-03-20 13:09:08,905 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,916 p=12211 u=student |  TASK [nuage_master : Add the service account to the privileged scc to have root permissions for openshift-infra] ***
2019-03-20 13:09:08,936 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,947 p=12211 u=student |  TASK [nuage_master : Spawn Nuage Master monitor daemon sets pod] ***********************************************
2019-03-20 13:09:08,962 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:08,974 p=12211 u=student |  TASK [nuage_master : Spawn Nuage CNI daemon sets pod] **********************************************************
2019-03-20 13:09:08,992 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,003 p=12211 u=student |  TASK [nuage_master : Spawn Nuage Infra daemon sets pod] ********************************************************
2019-03-20 13:09:09,021 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,031 p=12211 u=student |  TASK [nuage_master : Restart daemons] **************************************************************************
2019-03-20 13:09:09,050 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,065 p=12211 u=student |  TASK [calico : Calico Node | Error if invalid cert arguments] **************************************************
2019-03-20 13:09:09,081 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,092 p=12211 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-20 13:09:09,110 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,121 p=12211 u=student |  TASK [calico : Calico Node | Set etcd cert location facts] *****************************************************
2019-03-20 13:09:09,138 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,149 p=12211 u=student |  TASK [calico : Calico Node | Error if no certs set.] ***********************************************************
2019-03-20 13:09:09,169 p=12211 u=student |  skipping: [master.lab.example.com] => (item=calico_etcd_ca_cert_file) 
2019-03-20 13:09:09,174 p=12211 u=student |  skipping: [master.lab.example.com] => (item=calico_etcd_cert_file) 
2019-03-20 13:09:09,179 p=12211 u=student |  skipping: [master.lab.example.com] => (item=calico_etcd_key_file) 
2019-03-20 13:09:09,183 p=12211 u=student |  skipping: [master.lab.example.com] => (item=calico_etcd_endpoints) 
2019-03-20 13:09:09,194 p=12211 u=student |  TASK [calico : Calico Node | Assure the calico certs are present] **********************************************
2019-03-20 13:09:09,213 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,224 p=12211 u=student |  TASK [calico : Calico Node | Configure Calico service unit file] ***********************************************
2019-03-20 13:09:09,242 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,253 p=12211 u=student |  TASK [calico : Calico Node | Enable calico] ********************************************************************
2019-03-20 13:09:09,271 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,282 p=12211 u=student |  TASK [calico : Calico Node | Assure CNI conf dir exists] *******************************************************
2019-03-20 13:09:09,300 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,310 p=12211 u=student |  TASK [calico : Calico Node | Generate Calico CNI config] *******************************************************
2019-03-20 13:09:09,327 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,338 p=12211 u=student |  TASK [calico : Calico Node | Assures Kuberentes CNI bin dir exists] ********************************************
2019-03-20 13:09:09,357 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,368 p=12211 u=student |  TASK [calico : Calico Node | Download Calico CNI Plugin] *******************************************************
2019-03-20 13:09:09,384 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,395 p=12211 u=student |  TASK [calico : Calico Node | Download Calico IPAM Plugin] ******************************************************
2019-03-20 13:09:09,411 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,422 p=12211 u=student |  TASK [calico : Calico Node | Download and extract standard CNI plugins] ****************************************
2019-03-20 13:09:09,439 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,449 p=12211 u=student |  TASK [calico : Calico Node | Assure Calico conf dir exists] ****************************************************
2019-03-20 13:09:09,467 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,477 p=12211 u=student |  TASK [calico : Calico Node | Set calicoctl.cfg] ****************************************************************
2019-03-20 13:09:09,494 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,505 p=12211 u=student |  TASK [calico_master : Calico Master | Assure the calico certs have been generated] *****************************
2019-03-20 13:09:09,523 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,534 p=12211 u=student |  TASK [calico_master : Calico Master | Create temp directory for policy controller definition] ******************
2019-03-20 13:09:09,552 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,566 p=12211 u=student |  TASK [calico_master : Calico Master | Write Calico Policy Controller definition] *******************************
2019-03-20 13:09:09,584 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,597 p=12211 u=student |  TASK [calico_master : Calico Master | Launch Calico Policy Controller] *****************************************
2019-03-20 13:09:09,616 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,629 p=12211 u=student |  TASK [calico_master : Calico Master | Delete temp directory] ***************************************************
2019-03-20 13:09:09,647 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,659 p=12211 u=student |  TASK [calico_master : Calico Master | oc adm policy add-scc-to-user privileged system:serviceaccount:kube-system:calico] ***
2019-03-20 13:09:09,677 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,689 p=12211 u=student |  TASK [calico_master : Download Calicoctl] **********************************************************************
2019-03-20 13:09:09,707 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,719 p=12211 u=student |  TASK [kuryr : Perform OpenShift ServiceAccount config] *********************************************************
2019-03-20 13:09:09,738 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,750 p=12211 u=student |  TASK [kuryr : Create kuryr manifests tempdir] ******************************************************************
2019-03-20 13:09:09,768 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,781 p=12211 u=student |  TASK [kuryr : Create kuryr ConfigMap manifest] *****************************************************************
2019-03-20 13:09:09,798 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,810 p=12211 u=student |  TASK [kuryr : Create kuryr-controller Deployment manifest] *****************************************************
2019-03-20 13:09:09,826 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,838 p=12211 u=student |  TASK [kuryr : Create kuryr-cni DaemonSet manifest] *************************************************************
2019-03-20 13:09:09,855 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,866 p=12211 u=student |  TASK [kuryr : Apply ConfigMap manifest] ************************************************************************
2019-03-20 13:09:09,884 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,895 p=12211 u=student |  TASK [kuryr : Apply Controller Deployment manifest] ************************************************************
2019-03-20 13:09:09,913 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,924 p=12211 u=student |  TASK [kuryr : Apply kuryr-cni DaemonSet manifest] **************************************************************
2019-03-20 13:09:09,939 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,950 p=12211 u=student |  TASK [setup bootstrap settings] ********************************************************************************
2019-03-20 13:09:09,966 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,968 p=12211 u=student |  RUNNING HANDLER [openshift_master : restart master api] ********************************************************
2019-03-20 13:09:09,995 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:09,995 p=12211 u=student |  RUNNING HANDLER [openshift_master : restart master controllers] ************************************************
2019-03-20 13:09:10,023 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:10,034 p=12211 u=student |  TASK [Create group for deployment type] ************************************************************************
2019-03-20 13:09:10,067 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:10,074 p=12211 u=student |  PLAY [Configure API Aggregation on masters] ********************************************************************
2019-03-20 13:09:10,082 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:09:10,612 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:10,639 p=12211 u=student |  TASK [include_tasks] *******************************************************************************************
2019-03-20 13:09:10,684 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/playbooks/openshift-master/private/tasks/wire_aggregator.yml for master.lab.example.com
2019-03-20 13:09:10,699 p=12211 u=student |  TASK [Make temp cert dir] **************************************************************************************
2019-03-20 13:09:11,010 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:11,028 p=12211 u=student |  TASK [Check for First Master Aggregator Signer cert] ***********************************************************
2019-03-20 13:09:11,324 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:09:11,341 p=12211 u=student |  TASK [Check for First Master Aggregator Signer key] ************************************************************
2019-03-20 13:09:11,649 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:09:11,668 p=12211 u=student |  TASK [Creating First Master Aggregator signer certs] ***********************************************************
2019-03-20 13:09:12,527 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:09:12,537 p=12211 u=student |  TASK [Check for Aggregator Signer cert] ************************************************************************
2019-03-20 13:09:12,863 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:12,873 p=12211 u=student |  TASK [Check for Aggregator Signer key] *************************************************************************
2019-03-20 13:09:13,173 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:13,191 p=12211 u=student |  TASK [Copy Aggregator Signer certs from first master] **********************************************************
2019-03-20 13:09:13,210 p=12211 u=student |  skipping: [master.lab.example.com] => (item=front-proxy-ca.crt) 
2019-03-20 13:09:13,217 p=12211 u=student |  skipping: [master.lab.example.com] => (item=front-proxy-ca.key) 
2019-03-20 13:09:13,227 p=12211 u=student |  TASK [Copy Aggregator Signer certs to host] ********************************************************************
2019-03-20 13:09:13,245 p=12211 u=student |  skipping: [master.lab.example.com] => (item=front-proxy-ca.crt) 
2019-03-20 13:09:13,251 p=12211 u=student |  skipping: [master.lab.example.com] => (item=front-proxy-ca.key) 
2019-03-20 13:09:13,268 p=12211 u=student |  TASK [Check for first master api-client config] ****************************************************************
2019-03-20 13:09:13,556 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:09:13,576 p=12211 u=student |  TASK [Create first master api-client config for Aggregator] ****************************************************
2019-03-20 13:09:14,328 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:09:14,348 p=12211 u=student |  TASK [Copy first master api-client config for Aggregator] ******************************************************
2019-03-20 13:09:14,677 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=aggregator-front-proxy.crt)
2019-03-20 13:09:15,090 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=aggregator-front-proxy.key)
2019-03-20 13:09:15,376 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=aggregator-front-proxy.kubeconfig)
2019-03-20 13:09:15,390 p=12211 u=student |  TASK [Check for api-client config] *****************************************************************************
2019-03-20 13:09:15,728 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:15,753 p=12211 u=student |  TASK [Copy api-client config from first master] ****************************************************************
2019-03-20 13:09:15,775 p=12211 u=student |  skipping: [master.lab.example.com] => (item=aggregator-front-proxy.crt) 
2019-03-20 13:09:15,780 p=12211 u=student |  skipping: [master.lab.example.com] => (item=aggregator-front-proxy.key) 
2019-03-20 13:09:15,785 p=12211 u=student |  skipping: [master.lab.example.com] => (item=aggregator-front-proxy.kubeconfig) 
2019-03-20 13:09:15,798 p=12211 u=student |  TASK [Copy api-client config to host] **************************************************************************
2019-03-20 13:09:15,819 p=12211 u=student |  skipping: [master.lab.example.com] => (item=aggregator-front-proxy.crt) 
2019-03-20 13:09:15,822 p=12211 u=student |  skipping: [master.lab.example.com] => (item=aggregator-front-proxy.key) 
2019-03-20 13:09:15,826 p=12211 u=student |  skipping: [master.lab.example.com] => (item=aggregator-front-proxy.kubeconfig) 
2019-03-20 13:09:15,836 p=12211 u=student |  TASK [Delete temp directory] ***********************************************************************************
2019-03-20 13:09:16,133 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:16,142 p=12211 u=student |  TASK [Update master config] ************************************************************************************
2019-03-20 13:09:16,791 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:16,844 p=12211 u=student |  TASK [Setup extension file for service console UI] *************************************************************
2019-03-20 13:09:16,860 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:16,870 p=12211 u=student |  TASK [Update master config] ************************************************************************************
2019-03-20 13:09:16,886 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:16,895 p=12211 u=student |  TASK [restart master api] **************************************************************************************
2019-03-20 13:09:23,492 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:23,502 p=12211 u=student |  TASK [restart master controllers] ******************************************************************************
2019-03-20 13:09:24,750 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:24,761 p=12211 u=student |  TASK [Verify API Server] ***************************************************************************************
2019-03-20 13:09:25,132 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:25,138 p=12211 u=student |  PLAY [Re-enable excluder if it was previously enabled] *********************************************************
2019-03-20 13:09:25,148 p=12211 u=student |  TASK [openshift_excluder : Detecting Atomic Host Operating System] *********************************************
2019-03-20 13:09:25,564 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:25,575 p=12211 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_docker_excluder] **********************************
2019-03-20 13:09:25,620 p=12211 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-20 13:09:25,631 p=12211 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_openshift_excluder] *******************************
2019-03-20 13:09:25,677 p=12211 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-20 13:09:25,688 p=12211 u=student |  TASK [openshift_excluder : Fail if invalid openshift_excluder_action provided] *********************************
2019-03-20 13:09:25,709 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:25,720 p=12211 u=student |  TASK [openshift_excluder : Fail if r_openshift_excluder_upgrade_target is not defined] *************************
2019-03-20 13:09:25,742 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:25,752 p=12211 u=student |  TASK [openshift_excluder : Include main action task file] ******************************************************
2019-03-20 13:09:25,793 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/enable.yml for master.lab.example.com
2019-03-20 13:09:25,803 p=12211 u=student |  TASK [openshift_excluder : Install excluders] ******************************************************************
2019-03-20 13:09:25,836 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/install.yml for master.lab.example.com
2019-03-20 13:09:25,846 p=12211 u=student |  TASK [openshift_excluder : Install docker excluder - yum] ******************************************************
2019-03-20 13:09:25,865 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:25,875 p=12211 u=student |  TASK [openshift_excluder : Install docker excluder - dnf] ******************************************************
2019-03-20 13:09:25,894 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:25,905 p=12211 u=student |  TASK [openshift_excluder : Install openshift excluder - yum] ***************************************************
2019-03-20 13:09:25,923 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:25,933 p=12211 u=student |  TASK [openshift_excluder : Install openshift excluder - dnf] ***************************************************
2019-03-20 13:09:25,952 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:25,962 p=12211 u=student |  TASK [openshift_excluder : set_fact] ***************************************************************************
2019-03-20 13:09:25,981 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:25,991 p=12211 u=student |  TASK [openshift_excluder : Enable excluders] *******************************************************************
2019-03-20 13:09:26,025 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/exclude.yml for master.lab.example.com
2019-03-20 13:09:26,039 p=12211 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-20 13:09:26,482 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:26,492 p=12211 u=student |  TASK [openshift_excluder : Enable docker excluder] *************************************************************
2019-03-20 13:09:27,092 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:27,103 p=12211 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-20 13:09:27,643 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:27,655 p=12211 u=student |  TASK [openshift_excluder : Enable openshift excluder] **********************************************************
2019-03-20 13:09:28,009 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:28,015 p=12211 u=student |  PLAY [Master Install Checkpoint End] ***************************************************************************
2019-03-20 13:09:28,021 p=12211 u=student |  TASK [Set Master install 'Complete'] ***************************************************************************
2019-03-20 13:09:28,065 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:09:28,072 p=12211 u=student |  PLAY [Master Additional Install Checkpoint Start] **************************************************************
2019-03-20 13:09:28,078 p=12211 u=student |  TASK [Set Master Additional install 'In Progress'] *************************************************************
2019-03-20 13:09:28,237 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:09:28,244 p=12211 u=student |  PLAY [Additional master configuration] *************************************************************************
2019-03-20 13:09:28,260 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:09:28,890 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:28,915 p=12211 u=student |  TASK [openshift_project_request_template : Create temp file for template] **************************************
2019-03-20 13:09:28,931 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:28,940 p=12211 u=student |  TASK [openshift_project_request_template : Generate default project template] **********************************
2019-03-20 13:09:28,956 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:28,966 p=12211 u=student |  TASK [openshift_project_request_template : Write default project template to file] *****************************
2019-03-20 13:09:28,980 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:28,989 p=12211 u=student |  TASK [openshift_project_request_template : Apply template modifications] ***************************************
2019-03-20 13:09:29,006 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:29,016 p=12211 u=student |  TASK [openshift_project_request_template : Create or update project request template] **************************
2019-03-20 13:09:29,032 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:29,041 p=12211 u=student |  TASK [openshift_project_request_template : Delete temp file] ***************************************************
2019-03-20 13:09:29,056 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:29,068 p=12211 u=student |  TASK [openshift_examples : Create local temp dir for OpenShift examples copy] **********************************
2019-03-20 13:09:29,234 p=12211 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-20 13:09:29,246 p=12211 u=student |  TASK [openshift_examples : Chmod local temp dir for OpenShift examples copy] ***********************************
2019-03-20 13:09:29,419 p=12211 u=student |   [WARNING]: Consider using file module with mode rather than running chmod

2019-03-20 13:09:29,420 p=12211 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-20 13:09:29,432 p=12211 u=student |  TASK [openshift_examples : Create tar of OpenShift examples] ***************************************************
2019-03-20 13:09:29,620 p=12211 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-20 13:09:29,634 p=12211 u=student |  TASK [openshift_examples : Chmod local temp dir for OpenShift examples copy] ***********************************
2019-03-20 13:09:29,835 p=12211 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-20 13:09:29,845 p=12211 u=student |  TASK [openshift_examples : Create the remote OpenShift examples directory] *************************************
2019-03-20 13:09:30,264 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:30,274 p=12211 u=student |  TASK [openshift_examples : Unarchive the OpenShift examples on the remote] *************************************
2019-03-20 13:09:31,328 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:31,341 p=12211 u=student |  TASK [openshift_examples : Cleanup the OpenShift Examples temp dir] ********************************************
2019-03-20 13:09:31,516 p=12211 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-20 13:09:31,526 p=12211 u=student |  TASK [openshift_examples : Modify registry paths if registry_url is not registry.access.redhat.com] ************
2019-03-20 13:09:32,238 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:32,248 p=12211 u=student |  TASK [openshift_examples : Import RHEL streams] ****************************************************************
2019-03-20 13:09:33,129 p=12211 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/image-streams/image-streams-rhel7.json)
2019-03-20 13:09:33,682 p=12211 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/image-streams/dotnet_imagestreams.json)
2019-03-20 13:09:33,698 p=12211 u=student |  TASK [openshift_examples : Import Centos Image streams] ********************************************************
2019-03-20 13:09:33,731 p=12211 u=student |  skipping: [master.lab.example.com] => (item=/usr/share/openshift/examples/image-streams/image-streams-centos7.json) 
2019-03-20 13:09:33,740 p=12211 u=student |  skipping: [master.lab.example.com] => (item=/usr/share/openshift/examples/image-streams/dotnet_imagestreams_centos.json) 
2019-03-20 13:09:33,753 p=12211 u=student |  TASK [openshift_examples : Import db templates] ****************************************************************
2019-03-20 13:09:34,430 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:34,440 p=12211 u=student |  TASK [openshift_examples : Remove defunct quickstart template files] *******************************************
2019-03-20 13:09:34,898 p=12211 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/quickstart-templates/nodejs.json)
2019-03-20 13:09:35,182 p=12211 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/quickstart-templates/cakephp.json)
2019-03-20 13:09:35,469 p=12211 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/quickstart-templates/dancer.json)
2019-03-20 13:09:35,786 p=12211 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/quickstart-templates/django.json)
2019-03-20 13:09:35,799 p=12211 u=student |  TASK [openshift_examples : Remove defunct quickstart templates from openshift namespace] ***********************
2019-03-20 13:09:36,390 p=12211 u=student |  ok: [master.lab.example.com] => (item=nodejs-example)
2019-03-20 13:09:36,866 p=12211 u=student |  ok: [master.lab.example.com] => (item=cakephp-example)
2019-03-20 13:09:37,320 p=12211 u=student |  ok: [master.lab.example.com] => (item=dancer-example)
2019-03-20 13:09:37,809 p=12211 u=student |  ok: [master.lab.example.com] => (item=django-example)
2019-03-20 13:09:37,822 p=12211 u=student |  TASK [openshift_examples : Import quickstart-templates] ********************************************************
2019-03-20 13:09:38,587 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:38,599 p=12211 u=student |  TASK [openshift_examples : Remove old xPaas template files] ****************************************************
2019-03-20 13:09:38,924 p=12211 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/xpaas-templates/sso70-basic.json)
2019-03-20 13:09:38,935 p=12211 u=student |  TASK [openshift_examples : Remove old xPaas templates from openshift namespace] ********************************
2019-03-20 13:09:39,515 p=12211 u=student |  ok: [master.lab.example.com] => (item=sso70-basic)
2019-03-20 13:09:39,526 p=12211 u=student |  TASK [openshift_examples : Import xPaas image streams] *********************************************************
2019-03-20 13:09:40,440 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:40,453 p=12211 u=student |  TASK [openshift_examples : Import xPaas templates] *************************************************************
2019-03-20 13:09:42,804 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:42,822 p=12211 u=student |  TASK [openshift_hosted_templates : Create local temp dir for OpenShift hosted templates copy] ******************
2019-03-20 13:09:42,996 p=12211 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-20 13:09:43,009 p=12211 u=student |  TASK [openshift_hosted_templates : Chmod local temp dir for OpenShift examples copy] ***************************
2019-03-20 13:09:43,324 p=12211 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-20 13:09:43,337 p=12211 u=student |  TASK [openshift_hosted_templates : Create tar of OpenShift examples] *******************************************
2019-03-20 13:09:43,514 p=12211 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-20 13:09:43,526 p=12211 u=student |  TASK [openshift_hosted_templates : Chmod local tar of OpenShift examples] **************************************
2019-03-20 13:09:43,727 p=12211 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-20 13:09:43,737 p=12211 u=student |  TASK [openshift_hosted_templates : Create remote OpenShift hosted templates directory] *************************
2019-03-20 13:09:44,170 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:44,181 p=12211 u=student |  TASK [openshift_hosted_templates : Unarchive the OpenShift hosted templates on the remote] *********************
2019-03-20 13:09:45,144 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:45,158 p=12211 u=student |  TASK [openshift_hosted_templates : Cleanup the OpenShift hosted templates temp dir] ****************************
2019-03-20 13:09:45,335 p=12211 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-20 13:09:45,346 p=12211 u=student |  TASK [openshift_hosted_templates : Modify registry paths if registry_url is not registry.access.redhat.com] ****
2019-03-20 13:09:45,365 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:09:45,376 p=12211 u=student |  TASK [openshift_hosted_templates : Create temp directory for kubeconfig] ***************************************
2019-03-20 13:09:45,819 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:45,829 p=12211 u=student |  TASK [openshift_hosted_templates : Record kubeconfig tmp dir] **************************************************
2019-03-20 13:09:45,988 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:45,997 p=12211 u=student |  TASK [openshift_hosted_templates : Copy the admin client config(s)] ********************************************
2019-03-20 13:09:46,430 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:46,440 p=12211 u=student |  TASK [openshift_hosted_templates : Create or update hosted templates] ******************************************
2019-03-20 13:09:47,068 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:47,078 p=12211 u=student |  TASK [openshift_hosted_templates : Delete temp directory] ******************************************************
2019-03-20 13:09:47,505 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:09:47,515 p=12211 u=student |  TASK [openshift_manageiq : Add Management Infrastructure project] **********************************************
2019-03-20 13:09:48,888 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:48,897 p=12211 u=student |  TASK [openshift_manageiq : Create Admin and Image Inspector Service Account] ***********************************
2019-03-20 13:09:49,888 p=12211 u=student |  changed: [master.lab.example.com] => (item=management-admin)
2019-03-20 13:09:50,730 p=12211 u=student |  changed: [master.lab.example.com] => (item=inspector-admin)
2019-03-20 13:09:50,742 p=12211 u=student |  TASK [openshift_manageiq : Create manageiq cluster role] *******************************************************
2019-03-20 13:09:51,884 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:51,896 p=12211 u=student |  TASK [openshift_manageiq : Create Hawkular Metrics Admin Cluster Role] *****************************************
2019-03-20 13:09:52,942 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:09:52,952 p=12211 u=student |  TASK [openshift_manageiq : Configure role/user permissions] ****************************************************
2019-03-20 13:09:53,752 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'role', u'resource_name': u'admin', u'user': u'management-admin'})
2019-03-20 13:09:54,429 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'role', u'resource_name': u'admin', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-20 13:09:55,135 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'management-infra-admin', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-20 13:09:55,900 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'cluster-reader', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-20 13:09:56,544 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'scc', u'resource_name': u'privileged', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-20 13:09:57,224 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'system:image-puller', u'user': u'system:serviceaccount:management-infra:inspector-admin'})
2019-03-20 13:09:57,906 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'scc', u'resource_name': u'privileged', u'user': u'system:serviceaccount:management-infra:inspector-admin'})
2019-03-20 13:09:58,585 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'self-provisioner', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-20 13:09:59,277 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'hawkular-metrics-admin', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-20 13:09:59,289 p=12211 u=student |  TASK [openshift_manageiq : Configure 3_2 role/user permissions] ************************************************
2019-03-20 13:10:00,022 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'system:image-auditor', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-20 13:10:00,034 p=12211 u=student |  TASK [cockpit : Add iptables allow rules] **********************************************************************
2019-03-20 13:10:00,129 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'9090/tcp', u'service': u'cockpit-ws'}) 
2019-03-20 13:10:00,143 p=12211 u=student |  TASK [cockpit : Remove iptables rules] *************************************************************************
2019-03-20 13:10:00,170 p=12211 u=student |  TASK [cockpit : Add firewalld allow rules] *********************************************************************
2019-03-20 13:10:00,908 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'port': u'9090/tcp', u'service': u'cockpit-ws'})
2019-03-20 13:10:00,921 p=12211 u=student |  TASK [cockpit : Remove firewalld allow rules] ******************************************************************
2019-03-20 13:10:00,952 p=12211 u=student |  TASK [cockpit : Install cockpit-ws] ****************************************************************************
2019-03-20 13:10:05,546 p=12211 u=student |  changed: [master.lab.example.com] => (item=cockpit-ws)
2019-03-20 13:10:08,349 p=12211 u=student |  changed: [master.lab.example.com] => (item=cockpit-system)
2019-03-20 13:10:08,879 p=12211 u=student |  ok: [master.lab.example.com] => (item=cockpit-bridge)
2019-03-20 13:10:10,728 p=12211 u=student |  changed: [master.lab.example.com] => (item=cockpit-docker)
2019-03-20 13:10:13,287 p=12211 u=student |  changed: [master.lab.example.com] => (item=cockpit-kubernetes)
2019-03-20 13:10:13,300 p=12211 u=student |  TASK [cockpit : Enable cockpit-ws] *****************************************************************************
2019-03-20 13:10:13,725 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:13,740 p=12211 u=student |  TASK [flannel_register : Assures /etc/flannel dir exists] ******************************************************
2019-03-20 13:10:13,760 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:13,771 p=12211 u=student |  TASK [flannel_register : Generate etcd configuration for etcd] *************************************************
2019-03-20 13:10:13,790 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:13,801 p=12211 u=student |  TASK [flannel_register : Insert flannel configuration into etcd] ***********************************************
2019-03-20 13:10:13,820 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:13,825 p=12211 u=student |  PLAY [Master Additional Install Checkpoint End] ****************************************************************
2019-03-20 13:10:13,833 p=12211 u=student |  TASK [Set Master Additional install 'Complete'] ****************************************************************
2019-03-20 13:10:13,879 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:10:13,886 p=12211 u=student |  PLAY [Node Install Checkpoint Start] ***************************************************************************
2019-03-20 13:10:13,893 p=12211 u=student |  TASK [Set Node install 'In Progress'] **************************************************************************
2019-03-20 13:10:13,937 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:10:13,944 p=12211 u=student |  PLAY [Create OpenShift certificates for node hosts] ************************************************************
2019-03-20 13:10:13,965 p=12211 u=student |  TASK [openshift_node_certificates : Ensure CA certificate exists on openshift_ca_host] *************************
2019-03-20 13:10:14,280 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:10:14,290 p=12211 u=student |  TASK [openshift_node_certificates : fail] **********************************************************************
2019-03-20 13:10:14,309 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:14,321 p=12211 u=student |  TASK [openshift_node_certificates : Check status of node certificates] *****************************************
2019-03-20 13:10:14,741 p=12211 u=student |  ok: [master.lab.example.com] => (item=system:node:master.lab.example.com.crt)
2019-03-20 13:10:15,070 p=12211 u=student |  ok: [node2.lab.example.com] => (item=system:node:node2.lab.example.com.crt)
2019-03-20 13:10:15,132 p=12211 u=student |  ok: [master.lab.example.com] => (item=system:node:master.lab.example.com.key)
2019-03-20 13:10:15,134 p=12211 u=student |  ok: [node1.lab.example.com] => (item=system:node:node1.lab.example.com.crt)
2019-03-20 13:10:15,457 p=12211 u=student |  ok: [master.lab.example.com] => (item=system:node:master.lab.example.com.kubeconfig)
2019-03-20 13:10:15,492 p=12211 u=student |  ok: [node2.lab.example.com] => (item=system:node:node2.lab.example.com.key)
2019-03-20 13:10:15,495 p=12211 u=student |  ok: [node1.lab.example.com] => (item=system:node:node1.lab.example.com.key)
2019-03-20 13:10:15,834 p=12211 u=student |  ok: [node2.lab.example.com] => (item=system:node:node2.lab.example.com.kubeconfig)
2019-03-20 13:10:15,884 p=12211 u=student |  ok: [master.lab.example.com] => (item=ca.crt)
2019-03-20 13:10:15,949 p=12211 u=student |  ok: [node1.lab.example.com] => (item=system:node:node1.lab.example.com.kubeconfig)
2019-03-20 13:10:16,207 p=12211 u=student |  ok: [node2.lab.example.com] => (item=ca.crt)
2019-03-20 13:10:16,260 p=12211 u=student |  ok: [master.lab.example.com] => (item=server.key)
2019-03-20 13:10:16,301 p=12211 u=student |  ok: [node1.lab.example.com] => (item=ca.crt)
2019-03-20 13:10:16,628 p=12211 u=student |  ok: [node2.lab.example.com] => (item=server.key)
2019-03-20 13:10:16,650 p=12211 u=student |  ok: [master.lab.example.com] => (item=server.crt)
2019-03-20 13:10:16,669 p=12211 u=student |  ok: [node1.lab.example.com] => (item=server.key)
2019-03-20 13:10:16,979 p=12211 u=student |  ok: [node2.lab.example.com] => (item=server.crt)
2019-03-20 13:10:17,004 p=12211 u=student |  ok: [node1.lab.example.com] => (item=server.crt)
2019-03-20 13:10:17,015 p=12211 u=student |  TASK [openshift_node_certificates : set_fact] ******************************************************************
2019-03-20 13:10:17,058 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:10:17,084 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:17,094 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:17,113 p=12211 u=student |  TASK [openshift_node_certificates : Create openshift_generated_configs_dir if it does not exist] ***************
2019-03-20 13:10:17,667 p=12211 u=student |  changed: [node2.lab.example.com -> master.lab.example.com]
2019-03-20 13:10:17,689 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:10:17,690 p=12211 u=student |  ok: [node1.lab.example.com -> master.lab.example.com]
2019-03-20 13:10:17,711 p=12211 u=student |  TASK [openshift_node_certificates : find] **********************************************************************
2019-03-20 13:10:18,128 p=12211 u=student |  ok: [node1.lab.example.com -> master.lab.example.com]
2019-03-20 13:10:18,143 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:10:18,194 p=12211 u=student |  ok: [node2.lab.example.com -> master.lab.example.com]
2019-03-20 13:10:18,248 p=12211 u=student |  TASK [openshift_node_certificates : Generate the node client config] *******************************************
2019-03-20 13:10:19,198 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=master.lab.example.com)
2019-03-20 13:10:19,815 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=node1.lab.example.com)
2019-03-20 13:10:20,517 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=node2.lab.example.com)
2019-03-20 13:10:20,565 p=12211 u=student |  TASK [openshift_node_certificates : Generate the node server certificate] **************************************
2019-03-20 13:10:21,380 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=master.lab.example.com)
2019-03-20 13:10:22,291 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=node1.lab.example.com)
2019-03-20 13:10:22,873 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=node2.lab.example.com)
2019-03-20 13:10:22,892 p=12211 u=student |  TASK [openshift_node_certificates : Create a tarball of the node config directories] ***************************
2019-03-20 13:10:23,332 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:10:23,339 p=12211 u=student |  changed: [node2.lab.example.com -> master.lab.example.com]
2019-03-20 13:10:23,434 p=12211 u=student |  changed: [node1.lab.example.com -> master.lab.example.com]
2019-03-20 13:10:23,453 p=12211 u=student |  TASK [openshift_node_certificates : Retrieve the node config tarballs from the master] *************************
2019-03-20 13:10:24,012 p=12211 u=student |  changed: [node2.lab.example.com -> master.lab.example.com]
2019-03-20 13:10:24,057 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:10:24,058 p=12211 u=student |  changed: [node1.lab.example.com -> master.lab.example.com]
2019-03-20 13:10:24,068 p=12211 u=student |  TASK [openshift_node_certificates : Ensure certificate directory exists] ***************************************
2019-03-20 13:10:24,477 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:24,522 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:24,528 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:24,539 p=12211 u=student |  TASK [openshift_node_certificates : Unarchive the tarball on the node] *****************************************
2019-03-20 13:10:25,586 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:25,687 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:25,697 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:25,712 p=12211 u=student |  TASK [openshift_node_certificates : Delete local temp directory] ***********************************************
2019-03-20 13:10:25,983 p=12211 u=student |  ok: [node1.lab.example.com -> localhost]
2019-03-20 13:10:25,996 p=12211 u=student |  ok: [master.lab.example.com -> localhost]
2019-03-20 13:10:26,054 p=12211 u=student |  ok: [node2.lab.example.com -> localhost]
2019-03-20 13:10:26,065 p=12211 u=student |  TASK [openshift_node_certificates : Copy OpenShift CA to system CA trust] **************************************
2019-03-20 13:10:26,463 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'cert': u'/etc/origin/node/ca.crt', u'id': u'openshift'})
2019-03-20 13:10:26,478 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'cert': u'/etc/origin/node/ca.crt', u'id': u'openshift'})
2019-03-20 13:10:26,495 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'cert': u'/etc/origin/node/ca.crt', u'id': u'openshift'})
2019-03-20 13:10:26,500 p=12211 u=student |  RUNNING HANDLER [openshift_node_certificates : update ca trust] ************************************************
2019-03-20 13:10:27,456 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:27,506 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:27,514 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:27,515 p=12211 u=student |  RUNNING HANDLER [openshift_node_certificates : check for container runtime after updating ca trust] ************
2019-03-20 13:10:27,937 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:27,966 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:28,003 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:28,004 p=12211 u=student |  RUNNING HANDLER [openshift_node_certificates : restart container runtime after updating ca trust] **************
2019-03-20 13:10:31,256 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:31,267 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:31,314 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:31,325 p=12211 u=student |  PLAY [Disable excluders] ***************************************************************************************
2019-03-20 13:10:31,336 p=12211 u=student |  TASK [openshift_excluder : Detecting Atomic Host Operating System] *********************************************
2019-03-20 13:10:31,756 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:10:31,794 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:31,806 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:31,816 p=12211 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_docker_excluder] **********************************
2019-03-20 13:10:31,862 p=12211 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-20 13:10:31,892 p=12211 u=student |  ok: [node1.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-20 13:10:31,899 p=12211 u=student |  ok: [node2.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-20 13:10:31,909 p=12211 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_openshift_excluder] *******************************
2019-03-20 13:10:31,954 p=12211 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-20 13:10:31,983 p=12211 u=student |  ok: [node1.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-20 13:10:31,992 p=12211 u=student |  ok: [node2.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-20 13:10:32,002 p=12211 u=student |  TASK [openshift_excluder : Fail if invalid openshift_excluder_action provided] *********************************
2019-03-20 13:10:32,039 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:32,045 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:32,047 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:32,057 p=12211 u=student |  TASK [openshift_excluder : Fail if r_openshift_excluder_upgrade_target is not defined] *************************
2019-03-20 13:10:32,093 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:32,095 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:32,105 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:32,115 p=12211 u=student |  TASK [openshift_excluder : Include main action task file] ******************************************************
2019-03-20 13:10:32,191 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/disable.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:10:32,203 p=12211 u=student |  TASK [openshift_excluder : Include verify_upgrade.yml when upgrading] ******************************************
2019-03-20 13:10:32,232 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:32,233 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:32,241 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:32,251 p=12211 u=student |  TASK [openshift_excluder : Disable excluders before the upgrade to remove older excluding expressions] *********
2019-03-20 13:10:32,322 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/unexclude.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:10:32,333 p=12211 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-20 13:10:32,761 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:10:32,770 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:32,779 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:32,792 p=12211 u=student |  TASK [openshift_excluder : disable docker excluder] ************************************************************
2019-03-20 13:10:33,266 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:33,283 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:33,283 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:33,293 p=12211 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-20 13:10:33,683 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:10:33,696 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:33,721 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:33,732 p=12211 u=student |  TASK [openshift_excluder : disable openshift excluder] *********************************************************
2019-03-20 13:10:33,803 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:33,812 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:34,102 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:34,113 p=12211 u=student |  TASK [openshift_excluder : Include install.yml] ****************************************************************
2019-03-20 13:10:34,193 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/install.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:10:34,209 p=12211 u=student |  TASK [openshift_excluder : Install docker excluder - yum] ******************************************************
2019-03-20 13:10:34,260 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:35,198 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:35,225 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:35,236 p=12211 u=student |  TASK [openshift_excluder : Install docker excluder - dnf] ******************************************************
2019-03-20 13:10:35,265 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:35,282 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:35,289 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:35,300 p=12211 u=student |  TASK [openshift_excluder : Install openshift excluder - yum] ***************************************************
2019-03-20 13:10:35,345 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:37,671 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:37,684 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:37,695 p=12211 u=student |  TASK [openshift_excluder : Install openshift excluder - dnf] ***************************************************
2019-03-20 13:10:37,736 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:37,747 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:37,751 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:37,763 p=12211 u=student |  TASK [openshift_excluder : set_fact] ***************************************************************************
2019-03-20 13:10:37,795 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:37,831 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:37,835 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:37,846 p=12211 u=student |  TASK [openshift_excluder : Include exclude.yml] ****************************************************************
2019-03-20 13:10:37,920 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/exclude.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:10:37,947 p=12211 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-20 13:10:38,323 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:10:38,336 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:38,350 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:38,361 p=12211 u=student |  TASK [openshift_excluder : Enable docker excluder] *************************************************************
2019-03-20 13:10:38,848 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:38,852 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:38,858 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:38,871 p=12211 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-20 13:10:39,290 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:10:39,304 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:39,307 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:39,318 p=12211 u=student |  TASK [openshift_excluder : Enable openshift excluder] **********************************************************
2019-03-20 13:10:39,771 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:39,790 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:39,790 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:39,802 p=12211 u=student |  TASK [openshift_excluder : Include unexclude.yml] **************************************************************
2019-03-20 13:10:39,892 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/unexclude.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:10:39,933 p=12211 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-20 13:10:40,510 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:40,517 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:10:40,577 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:40,589 p=12211 u=student |  TASK [openshift_excluder : disable docker excluder] ************************************************************
2019-03-20 13:10:40,624 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:40,630 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:40,640 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:40,652 p=12211 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-20 13:10:41,210 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:41,238 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:10:41,252 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:41,263 p=12211 u=student |  TASK [openshift_excluder : disable openshift excluder] *********************************************************
2019-03-20 13:10:41,940 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:41,991 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:42,044 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:42,053 p=12211 u=student |  PLAY [Evaluate node groups] ************************************************************************************
2019-03-20 13:10:42,057 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:10:42,454 p=12211 u=student |  ok: [localhost]
2019-03-20 13:10:42,480 p=12211 u=student |  TASK [Evaluate oo_containerized_master_nodes] ******************************************************************
2019-03-20 13:10:42,548 p=12211 u=student |  skipping: [localhost] => (item=master.lab.example.com) 
2019-03-20 13:10:42,572 p=12211 u=student |  skipping: [localhost] => (item=node1.lab.example.com) 
2019-03-20 13:10:42,598 p=12211 u=student |  skipping: [localhost] => (item=node2.lab.example.com) 
2019-03-20 13:10:42,604 p=12211 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_containerized_master_nodes

2019-03-20 13:10:42,605 p=12211 u=student |  PLAY [Configure containerized nodes] ***************************************************************************
2019-03-20 13:10:42,605 p=12211 u=student |  skipping: no hosts matched
2019-03-20 13:10:42,611 p=12211 u=student |  PLAY [Configure nodes] *****************************************************************************************
2019-03-20 13:10:42,654 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:10:43,298 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:43,330 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:10:43,365 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:43,389 p=12211 u=student |  TASK [openshift_clock : Determine if chrony is installed] ******************************************************
2019-03-20 13:10:43,823 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:43,834 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:43,835 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:43,846 p=12211 u=student |  TASK [openshift_clock : Install ntp package] *******************************************************************
2019-03-20 13:10:43,881 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:43,881 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:43,891 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:43,901 p=12211 u=student |  TASK [openshift_clock : Start and enable ntpd/chronyd] *********************************************************
2019-03-20 13:10:44,324 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:44,340 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:44,350 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:44,361 p=12211 u=student |  TASK [openshift_cloud_provider : Set cloud provider facts] *****************************************************
2019-03-20 13:10:44,393 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:44,393 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:44,404 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:44,414 p=12211 u=student |  TASK [openshift_cloud_provider : Create cloudprovider config dir] **********************************************
2019-03-20 13:10:44,451 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:44,451 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:44,456 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:44,466 p=12211 u=student |  TASK [openshift_cloud_provider : include the defined cloud provider files] *************************************
2019-03-20 13:10:44,502 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:44,502 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:44,510 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:44,519 p=12211 u=student |  TASK [openshift_node : fail] ***********************************************************************************
2019-03-20 13:10:44,554 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:44,555 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:44,564 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:44,575 p=12211 u=student |  TASK [openshift_node : Check for NetworkManager service] *******************************************************
2019-03-20 13:10:44,983 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:44,997 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:10:45,010 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:45,024 p=12211 u=student |  TASK [openshift_node : Set fact using_network_manager] *********************************************************
2019-03-20 13:10:45,093 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:10:45,110 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:45,123 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:45,134 p=12211 u=student |  TASK [openshift_node : Install dnsmasq] ************************************************************************
2019-03-20 13:10:47,211 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:47,275 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:47,333 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:47,344 p=12211 u=student |  TASK [openshift_node : ensure origin/node directory exists] ****************************************************
2019-03-20 13:10:47,753 p=12211 u=student |  changed: [master.lab.example.com] => (item=/etc/origin)
2019-03-20 13:10:47,811 p=12211 u=student |  changed: [node2.lab.example.com] => (item=/etc/origin)
2019-03-20 13:10:47,822 p=12211 u=student |  changed: [node1.lab.example.com] => (item=/etc/origin)
2019-03-20 13:10:48,136 p=12211 u=student |  changed: [node1.lab.example.com] => (item=/etc/origin/node)
2019-03-20 13:10:48,199 p=12211 u=student |  changed: [master.lab.example.com] => (item=/etc/origin/node)
2019-03-20 13:10:48,201 p=12211 u=student |  changed: [node2.lab.example.com] => (item=/etc/origin/node)
2019-03-20 13:10:48,212 p=12211 u=student |  TASK [openshift_node : Install node-dnsmasq.conf] **************************************************************
2019-03-20 13:10:49,099 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:49,127 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:49,146 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:49,157 p=12211 u=student |  TASK [openshift_node : fail] ***********************************************************************************
2019-03-20 13:10:49,194 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:49,194 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:49,201 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:49,212 p=12211 u=student |  TASK [openshift_node : Install NetworkManager during node_bootstrap provisioning] ******************************
2019-03-20 13:10:49,246 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:49,250 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:49,258 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:49,269 p=12211 u=student |  TASK [openshift_node : Install network manager dispatch script] ************************************************
2019-03-20 13:10:49,306 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:49,307 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:49,315 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:49,327 p=12211 u=student |  TASK [openshift_node : Install dnsmasq configuration] **********************************************************
2019-03-20 13:10:50,205 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:50,215 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:50,253 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:50,262 p=12211 u=student |  TASK [openshift_node : Deploy additional dnsmasq.conf] *********************************************************
2019-03-20 13:10:50,297 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:10:50,297 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:10:50,305 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:10:50,315 p=12211 u=student |  TASK [openshift_node : Enable dnsmasq] *************************************************************************
2019-03-20 13:10:50,830 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:50,849 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:50,853 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:50,864 p=12211 u=student |  TASK [openshift_node : Install network manager dispatch script] ************************************************
2019-03-20 13:10:51,638 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:51,662 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:51,684 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:51,686 p=12211 u=student |  RUNNING HANDLER [openshift_node : restart NetworkManager] ******************************************************
2019-03-20 13:10:52,240 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:52,313 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:52,405 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:52,408 p=12211 u=student |  RUNNING HANDLER [openshift_node : restart dnsmasq] *************************************************************
2019-03-20 13:10:52,970 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:53,020 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:53,021 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:53,033 p=12211 u=student |  TASK [openshift_node : Add iptables allow rules] ***************************************************************
2019-03-20 13:10:53,091 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'10250/tcp', u'service': u'Kubernetes kubelet'}) 
2019-03-20 13:10:53,091 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'80/tcp', u'service': u'http'}) 
2019-03-20 13:10:53,122 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'https'}) 
2019-03-20 13:10:53,123 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'cond': u'openshift_use_openshift_sdn | bool', u'port': u'4789/udp', u'service': u'OpenShift OVS sdn'}) 
2019-03-20 13:10:53,123 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'179/tcp', u'service': u'Calico BGP Port'}) 
2019-03-20 13:10:53,124 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'/tcp', u'service': u'Kubernetes service NodePort TCP'}) 
2019-03-20 13:10:53,124 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'/udp', u'service': u'Kubernetes service NodePort UDP'}) 
2019-03-20 13:10:53,144 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'10250/tcp', u'service': u'Kubernetes kubelet'}) 
2019-03-20 13:10:53,145 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'80/tcp', u'service': u'http'}) 
2019-03-20 13:10:53,145 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'10250/tcp', u'service': u'Kubernetes kubelet'}) 
2019-03-20 13:10:53,173 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'https'}) 
2019-03-20 13:10:53,174 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': u'openshift_use_openshift_sdn | bool', u'port': u'4789/udp', u'service': u'OpenShift OVS sdn'}) 
2019-03-20 13:10:53,174 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': False, u'port': u'179/tcp', u'service': u'Calico BGP Port'}) 
2019-03-20 13:10:53,174 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': False, u'port': u'/tcp', u'service': u'Kubernetes service NodePort TCP'}) 
2019-03-20 13:10:53,175 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': False, u'port': u'/udp', u'service': u'Kubernetes service NodePort UDP'}) 
2019-03-20 13:10:53,177 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'80/tcp', u'service': u'http'}) 
2019-03-20 13:10:53,177 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'https'}) 
2019-03-20 13:10:53,178 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': u'openshift_use_openshift_sdn | bool', u'port': u'4789/udp', u'service': u'OpenShift OVS sdn'}) 
2019-03-20 13:10:53,178 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': False, u'port': u'179/tcp', u'service': u'Calico BGP Port'}) 
2019-03-20 13:10:53,180 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': False, u'port': u'/tcp', u'service': u'Kubernetes service NodePort TCP'}) 
2019-03-20 13:10:53,188 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': False, u'port': u'/udp', u'service': u'Kubernetes service NodePort UDP'}) 
2019-03-20 13:10:53,198 p=12211 u=student |  TASK [openshift_node : Remove iptables rules] ******************************************************************
2019-03-20 13:10:53,249 p=12211 u=student |  TASK [openshift_node : Add firewalld allow rules] **************************************************************
2019-03-20 13:10:53,955 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'port': u'10250/tcp', u'service': u'Kubernetes kubelet'})
2019-03-20 13:10:54,015 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'port': u'10250/tcp', u'service': u'Kubernetes kubelet'})
2019-03-20 13:10:54,057 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'port': u'10250/tcp', u'service': u'Kubernetes kubelet'})
2019-03-20 13:10:54,621 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'port': u'80/tcp', u'service': u'http'})
2019-03-20 13:10:54,748 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'port': u'80/tcp', u'service': u'http'})
2019-03-20 13:10:54,815 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'port': u'80/tcp', u'service': u'http'})
2019-03-20 13:10:55,250 p=12211 u=student |  ok: [master.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'https'})
2019-03-20 13:10:55,409 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'https'})
2019-03-20 13:10:55,458 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'https'})
2019-03-20 13:10:56,024 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'cond': u'openshift_use_openshift_sdn | bool', u'port': u'4789/udp', u'service': u'OpenShift OVS sdn'})
2019-03-20 13:10:56,041 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'179/tcp', u'service': u'Calico BGP Port'}) 
2019-03-20 13:10:56,054 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'/tcp', u'service': u'Kubernetes service NodePort TCP'}) 
2019-03-20 13:10:56,074 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'/udp', u'service': u'Kubernetes service NodePort UDP'}) 
2019-03-20 13:10:56,085 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'cond': u'openshift_use_openshift_sdn | bool', u'port': u'4789/udp', u'service': u'OpenShift OVS sdn'})
2019-03-20 13:10:56,108 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': False, u'port': u'179/tcp', u'service': u'Calico BGP Port'}) 
2019-03-20 13:10:56,125 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': False, u'port': u'/tcp', u'service': u'Kubernetes service NodePort TCP'}) 
2019-03-20 13:10:56,136 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': False, u'port': u'/udp', u'service': u'Kubernetes service NodePort UDP'}) 
2019-03-20 13:10:56,184 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'cond': u'openshift_use_openshift_sdn | bool', u'port': u'4789/udp', u'service': u'OpenShift OVS sdn'})
2019-03-20 13:10:56,198 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': False, u'port': u'179/tcp', u'service': u'Calico BGP Port'}) 
2019-03-20 13:10:56,208 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': False, u'port': u'/tcp', u'service': u'Kubernetes service NodePort TCP'}) 
2019-03-20 13:10:56,221 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': False, u'port': u'/udp', u'service': u'Kubernetes service NodePort UDP'}) 
2019-03-20 13:10:56,232 p=12211 u=student |  TASK [openshift_node : Remove firewalld allow rules] ***********************************************************
2019-03-20 13:10:56,285 p=12211 u=student |  TASK [openshift_node : Checking for journald.conf] *************************************************************
2019-03-20 13:10:56,678 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:10:56,699 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:10:56,710 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:10:56,723 p=12211 u=student |  TASK [openshift_node : Create journald persistence directories] ************************************************
2019-03-20 13:10:57,134 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:10:57,141 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:10:57,172 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:10:57,185 p=12211 u=student |  TASK [openshift_node : Update journald setup] ******************************************************************
2019-03-20 13:10:57,779 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'Storage', u'val': u'persistent'})
2019-03-20 13:10:57,837 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'var': u'Storage', u'val': u'persistent'})
2019-03-20 13:10:57,838 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'Storage', u'val': u'persistent'})
2019-03-20 13:10:58,174 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'Compress', u'val': True})
2019-03-20 13:10:58,212 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'Compress', u'val': True})
2019-03-20 13:10:58,256 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'var': u'Compress', u'val': True})
2019-03-20 13:10:58,555 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'SyncIntervalSec', u'val': u'1s'})
2019-03-20 13:10:58,604 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'SyncIntervalSec', u'val': u'1s'})
2019-03-20 13:10:58,656 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'var': u'SyncIntervalSec', u'val': u'1s'})
2019-03-20 13:10:58,936 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'RateLimitInterval', u'val': u'1s'})
2019-03-20 13:10:58,977 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'RateLimitInterval', u'val': u'1s'})
2019-03-20 13:10:59,034 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'var': u'RateLimitInterval', u'val': u'1s'})
2019-03-20 13:10:59,324 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'RateLimitBurst', u'val': 10000})
2019-03-20 13:10:59,489 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'var': u'RateLimitBurst', u'val': 10000})
2019-03-20 13:10:59,517 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'RateLimitBurst', u'val': 10000})
2019-03-20 13:10:59,868 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'SystemMaxUse', u'val': u'8G'})
2019-03-20 13:10:59,945 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'SystemMaxUse', u'val': u'8G'})
2019-03-20 13:10:59,946 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'var': u'SystemMaxUse', u'val': u'8G'})
2019-03-20 13:11:00,238 p=12211 u=student |  ok: [node1.lab.example.com] => (item={u'var': u'SystemKeepFree', u'val': u'20%'})
2019-03-20 13:11:00,295 p=12211 u=student |  ok: [node2.lab.example.com] => (item={u'var': u'SystemKeepFree', u'val': u'20%'})
2019-03-20 13:11:00,302 p=12211 u=student |  ok: [master.lab.example.com] => (item={u'var': u'SystemKeepFree', u'val': u'20%'})
2019-03-20 13:11:00,617 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'SystemMaxFileSize', u'val': u'10M'})
2019-03-20 13:11:00,698 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'SystemMaxFileSize', u'val': u'10M'})
2019-03-20 13:11:00,710 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'var': u'SystemMaxFileSize', u'val': u'10M'})
2019-03-20 13:11:01,042 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'MaxRetentionSec', u'val': u'1month'})
2019-03-20 13:11:01,086 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'MaxRetentionSec', u'val': u'1month'})
2019-03-20 13:11:01,135 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'var': u'MaxRetentionSec', u'val': u'1month'})
2019-03-20 13:11:01,446 p=12211 u=student |  ok: [node1.lab.example.com] => (item={u'var': u'MaxFileSec', u'val': u'1day'})
2019-03-20 13:11:01,486 p=12211 u=student |  ok: [node2.lab.example.com] => (item={u'var': u'MaxFileSec', u'val': u'1day'})
2019-03-20 13:11:01,548 p=12211 u=student |  ok: [master.lab.example.com] => (item={u'var': u'MaxFileSec', u'val': u'1day'})
2019-03-20 13:11:01,840 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'ForwardToSyslog', u'val': False})
2019-03-20 13:11:01,882 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'ForwardToSyslog', u'val': False})
2019-03-20 13:11:01,953 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'var': u'ForwardToSyslog', u'val': False})
2019-03-20 13:11:02,211 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'ForwardToWall', u'val': False})
2019-03-20 13:11:02,239 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'ForwardToWall', u'val': False})
2019-03-20 13:11:02,377 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'var': u'ForwardToWall', u'val': False})
2019-03-20 13:11:02,392 p=12211 u=student |  TASK [openshift_node : Restart journald] ***********************************************************************
2019-03-20 13:11:02,918 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:11:02,927 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:11:02,930 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:11:02,940 p=12211 u=student |  TASK [openshift_node : Disable swap] ***************************************************************************
2019-03-20 13:11:03,499 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:11:03,514 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:11:03,530 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:11:03,540 p=12211 u=student |  TASK [openshift_node : Install Node package, sdn-ovs, conntrack packages] **************************************
2019-03-20 13:11:10,084 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'name': u'atomic-openshift-node-3.9.14'})
2019-03-20 13:11:10,595 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'name': u'atomic-openshift-node-3.9.14'})
2019-03-20 13:11:10,725 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'name': u'atomic-openshift-node-3.9.14'})
2019-03-20 13:11:14,972 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'name': u'atomic-openshift-sdn-ovs-3.9.14', u'install': True})
2019-03-20 13:11:15,453 p=12211 u=student |  ok: [node1.lab.example.com] => (item={u'name': u'conntrack-tools'})
2019-03-20 13:11:16,212 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'name': u'atomic-openshift-sdn-ovs-3.9.14', u'install': True})
2019-03-20 13:11:16,316 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'name': u'atomic-openshift-sdn-ovs-3.9.14', u'install': True})
2019-03-20 13:11:16,714 p=12211 u=student |  ok: [node2.lab.example.com] => (item={u'name': u'conntrack-tools'})
2019-03-20 13:11:16,830 p=12211 u=student |  ok: [master.lab.example.com] => (item={u'name': u'conntrack-tools'})
2019-03-20 13:11:16,843 p=12211 u=student |  TASK [openshift_node : Pre-pull node image when containerized] *************************************************
2019-03-20 13:11:16,880 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:16,880 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:16,886 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:16,896 p=12211 u=student |  TASK [openshift_node : Restart cri-o] **************************************************************************
2019-03-20 13:11:16,930 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:16,931 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:16,940 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:16,950 p=12211 u=student |  TASK [openshift_node : restart NetworkManager to ensure resolv.conf is present] ********************************
2019-03-20 13:11:16,985 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:16,986 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:16,992 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:17,002 p=12211 u=student |  TASK [openshift_node : sysctl] *********************************************************************************
2019-03-20 13:11:17,587 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:11:17,648 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:11:17,657 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:11:17,670 p=12211 u=student |  TASK [openshift_node : Check for credentials file for registry auth] *******************************************
2019-03-20 13:11:17,710 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:17,711 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:17,723 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:17,735 p=12211 u=student |  TASK [openshift_node : Create credentials for registry auth] ***************************************************
2019-03-20 13:11:17,775 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:17,784 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:17,799 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:17,810 p=12211 u=student |  TASK [openshift_node : Create credentials for registry auth (alternative)] *************************************
2019-03-20 13:11:17,843 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:17,854 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:17,860 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:17,870 p=12211 u=student |  TASK [openshift_node : Setup ro mount of /root/.docker for containerized hosts] ********************************
2019-03-20 13:11:17,903 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:17,904 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:17,914 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:17,925 p=12211 u=student |  TASK [openshift_node : Install Node service file] **************************************************************
2019-03-20 13:11:19,089 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:11:19,115 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:11:19,134 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:11:19,144 p=12211 u=student |  TASK [openshift_node : Install Node dependencies docker service file] ******************************************
2019-03-20 13:11:19,183 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:19,184 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:19,190 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:19,201 p=12211 u=student |  TASK [openshift_node : Create the openvswitch service env file] ************************************************
2019-03-20 13:11:19,231 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:19,240 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:19,248 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:19,260 p=12211 u=student |  TASK [openshift_node : Install OpenvSwitch docker service file] ************************************************
2019-03-20 13:11:19,297 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:19,297 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:19,304 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:19,315 p=12211 u=student |  TASK [openshift_node : Configure Node settings] ****************************************************************
2019-03-20 13:11:19,736 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'regex': u'^OPTIONS=', u'line': u'OPTIONS=--loglevel=2 '})
2019-03-20 13:11:19,784 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'regex': u'^OPTIONS=', u'line': u'OPTIONS=--loglevel=2 '})
2019-03-20 13:11:19,806 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'regex': u'^OPTIONS=', u'line': u'OPTIONS=--loglevel=2 '})
2019-03-20 13:11:20,115 p=12211 u=student |  ok: [node1.lab.example.com] => (item={u'regex': u'^CONFIG_FILE=', u'line': u'CONFIG_FILE=/etc/origin/node/node-config.yaml'})
2019-03-20 13:11:20,149 p=12211 u=student |  ok: [master.lab.example.com] => (item={u'regex': u'^CONFIG_FILE=', u'line': u'CONFIG_FILE=/etc/origin/node/node-config.yaml'})
2019-03-20 13:11:20,162 p=12211 u=student |  ok: [node2.lab.example.com] => (item={u'regex': u'^CONFIG_FILE=', u'line': u'CONFIG_FILE=/etc/origin/node/node-config.yaml'})
2019-03-20 13:11:20,497 p=12211 u=student |  changed: [node1.lab.example.com] => (item={u'regex': u'^IMAGE_VERSION=', u'line': u'IMAGE_VERSION=v3.9.14'})
2019-03-20 13:11:20,526 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'regex': u'^IMAGE_VERSION=', u'line': u'IMAGE_VERSION=v3.9.14'})
2019-03-20 13:11:20,549 p=12211 u=student |  changed: [node2.lab.example.com] => (item={u'regex': u'^IMAGE_VERSION=', u'line': u'IMAGE_VERSION=v3.9.14'})
2019-03-20 13:11:20,585 p=12211 u=student |  TASK [openshift_node : Configure Proxy Settings] ***************************************************************
2019-03-20 13:11:20,669 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'regex': u'^HTTP_PROXY=', u'line': u'HTTP_PROXY='}) 
2019-03-20 13:11:20,677 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'regex': u'^HTTPS_PROXY=', u'line': u'HTTPS_PROXY='}) 
2019-03-20 13:11:20,678 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'regex': u'^NO_PROXY=', u'line': u'NO_PROXY=[],172.30.0.0/16,10.128.0.0/14'}) 
2019-03-20 13:11:20,728 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={u'regex': u'^HTTP_PROXY=', u'line': u'HTTP_PROXY='}) 
2019-03-20 13:11:20,729 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={u'regex': u'^HTTPS_PROXY=', u'line': u'HTTPS_PROXY='}) 
2019-03-20 13:11:20,730 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={u'regex': u'^NO_PROXY=', u'line': u'NO_PROXY=[],172.30.0.0/16,10.128.0.0/14'}) 
2019-03-20 13:11:20,733 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={u'regex': u'^HTTP_PROXY=', u'line': u'HTTP_PROXY='}) 
2019-03-20 13:11:20,733 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={u'regex': u'^HTTPS_PROXY=', u'line': u'HTTPS_PROXY='}) 
2019-03-20 13:11:20,743 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={u'regex': u'^NO_PROXY=', u'line': u'NO_PROXY=[],172.30.0.0/16,10.128.0.0/14'}) 
2019-03-20 13:11:20,756 p=12211 u=student |  TASK [openshift_node : Pre-pull node system container image] ***************************************************
2019-03-20 13:11:20,794 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:20,801 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:20,804 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:20,817 p=12211 u=student |  TASK [openshift_node : Install or Update node system container] ************************************************
2019-03-20 13:11:20,856 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:20,857 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:20,869 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:20,880 p=12211 u=student |  TASK [openshift_node : set_fact] *******************************************************************************
2019-03-20 13:11:20,916 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:20,916 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:20,924 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:20,936 p=12211 u=student |  TASK [openshift_node : set_fact] *******************************************************************************
2019-03-20 13:11:20,972 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:20,974 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:20,984 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:20,995 p=12211 u=student |  TASK [openshift_node : Pre-pull OpenVSwitch system container image] ********************************************
2019-03-20 13:11:21,030 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:21,031 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:21,041 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:21,052 p=12211 u=student |  TASK [openshift_node : Install or Update OpenVSwitch system container] *****************************************
2019-03-20 13:11:21,091 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:21,091 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:21,098 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:21,109 p=12211 u=student |  TASK [openshift_node : Pre-pull openvswitch image] *************************************************************
2019-03-20 13:11:21,146 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:21,146 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:21,155 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:21,166 p=12211 u=student |  TASK [openshift_node : Start and enable openvswitch service] ***************************************************
2019-03-20 13:11:21,201 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:21,201 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:21,210 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:21,220 p=12211 u=student |  TASK [openshift_node : set_fact] *******************************************************************************
2019-03-20 13:11:21,257 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:11:21,281 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:11:21,291 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:11:21,301 p=12211 u=student |  TASK [openshift_node : file] ***********************************************************************************
2019-03-20 13:11:21,345 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:21,351 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:21,365 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:21,376 p=12211 u=student |  TASK [openshift_node : Create the Node config] *****************************************************************
2019-03-20 13:11:22,497 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:11:22,567 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:11:22,582 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:11:22,591 p=12211 u=student |  TASK [openshift_node : Configure Node Environment Variables] ***************************************************
2019-03-20 13:11:22,648 p=12211 u=student |  TASK [openshift_node : Configure AWS Cloud Provider Settings] **************************************************
2019-03-20 13:11:22,702 p=12211 u=student |  skipping: [master.lab.example.com] => (item=None) 
2019-03-20 13:11:22,702 p=12211 u=student |  skipping: [master.lab.example.com] => (item=None) 
2019-03-20 13:11:22,717 p=12211 u=student |  skipping: [node1.lab.example.com] => (item=None) 
2019-03-20 13:11:22,720 p=12211 u=student |  skipping: [node1.lab.example.com] => (item=None) 
2019-03-20 13:11:22,727 p=12211 u=student |  skipping: [node2.lab.example.com] => (item=None) 
2019-03-20 13:11:22,737 p=12211 u=student |  skipping: [node2.lab.example.com] => (item=None) 
2019-03-20 13:11:22,749 p=12211 u=student |  TASK [openshift_node : Wait for master API to become available before proceeding] ******************************
2019-03-20 13:11:22,785 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:22,786 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:22,795 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:22,806 p=12211 u=student |  TASK [openshift_node : Start and enable node dep] **************************************************************
2019-03-20 13:11:22,840 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:22,843 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:22,850 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:22,862 p=12211 u=student |  TASK [openshift_node : Start and enable node] ******************************************************************
2019-03-20 13:11:25,224 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:11:25,271 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:11:25,362 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:11:25,377 p=12211 u=student |  TASK [openshift_node : Dump logs from node service if it failed] ***********************************************
2019-03-20 13:11:25,417 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:25,417 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:25,425 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:25,436 p=12211 u=student |  TASK [openshift_node : Abort if node failed to start] **********************************************************
2019-03-20 13:11:25,470 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:11:25,477 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:11:25,487 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:11:25,498 p=12211 u=student |  TASK [openshift_node : set_fact] *******************************************************************************
2019-03-20 13:11:25,540 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:11:25,562 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:11:25,581 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:11:25,593 p=12211 u=student |  TASK [openshift_node : Install NFS storage plugin dependencies] ************************************************
2019-03-20 13:11:26,258 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:11:26,352 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:11:26,370 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:11:26,382 p=12211 u=student |  TASK [openshift_node : Check for existence of nfs sebooleans] **************************************************
2019-03-20 13:11:26,836 p=12211 u=student |  ok: [master.lab.example.com] => (item=virt_use_nfs)
2019-03-20 13:11:26,895 p=12211 u=student |  ok: [node1.lab.example.com] => (item=virt_use_nfs)
2019-03-20 13:11:26,909 p=12211 u=student |  ok: [node2.lab.example.com] => (item=virt_use_nfs)
2019-03-20 13:11:27,198 p=12211 u=student |  ok: [master.lab.example.com] => (item=virt_sandbox_use_nfs)
2019-03-20 13:11:27,213 p=12211 u=student |  ok: [node1.lab.example.com] => (item=virt_sandbox_use_nfs)
2019-03-20 13:11:27,220 p=12211 u=student |  ok: [node2.lab.example.com] => (item=virt_sandbox_use_nfs)
2019-03-20 13:11:27,233 p=12211 u=student |  TASK [openshift_node : Set seboolean to allow nfs storage plugin access from containers] ***********************
2019-03-20 13:11:27,859 p=12211 u=student |  ok: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:26.840870', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_use_nfs'], u'rc': 0, 'item': u'virt_use_nfs', u'delta': u'0:00:00.004720', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:26.836150', '_ansible_ignore_errors': None, 'failed': False})
2019-03-20 13:11:27,878 p=12211 u=student |  ok: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:26.835349', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_use_nfs'], u'rc': 0, 'item': u'virt_use_nfs', u'delta': u'0:00:00.003831', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:26.831518', '_ansible_ignore_errors': None, 'failed': False})
2019-03-20 13:11:27,884 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:27.186859', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_sandbox_use_nfs'], u'rc': 0, 'item': u'virt_sandbox_use_nfs', u'delta': u'0:00:00.004389', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:27.182470', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:27,887 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:27.194971', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_sandbox_use_nfs'], u'rc': 0, 'item': u'virt_sandbox_use_nfs', u'delta': u'0:00:00.003608', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:27.191363', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:27,904 p=12211 u=student |  ok: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:26.804823', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_use_nfs'], u'rc': 0, 'item': u'virt_use_nfs', u'delta': u'0:00:00.004683', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:26.800140', '_ansible_ignore_errors': None, 'failed': False})
2019-03-20 13:11:27,918 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:27.173274', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_sandbox_use_nfs'], u'rc': 0, 'item': u'virt_sandbox_use_nfs', u'delta': u'0:00:00.003559', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:27.169715', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:27,930 p=12211 u=student |  TASK [openshift_node : Set seboolean to allow nfs storage plugin access from containers (python 3)] ************
2019-03-20 13:11:27,977 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:26.804823', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_use_nfs'], u'rc': 0, 'item': u'virt_use_nfs', u'delta': u'0:00:00.004683', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:26.800140', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:27,978 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:27.173274', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_sandbox_use_nfs'], u'rc': 0, 'item': u'virt_sandbox_use_nfs', u'delta': u'0:00:00.003559', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:27.169715', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:28,003 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:26.835349', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_use_nfs'], u'rc': 0, 'item': u'virt_use_nfs', u'delta': u'0:00:00.003831', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:26.831518', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:28,004 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:27.186859', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_sandbox_use_nfs'], u'rc': 0, 'item': u'virt_sandbox_use_nfs', u'delta': u'0:00:00.004389', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:27.182470', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:28,010 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:26.840870', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_use_nfs'], u'rc': 0, 'item': u'virt_use_nfs', u'delta': u'0:00:00.004720', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:26.836150', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:28,021 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:27.194971', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_sandbox_use_nfs'], u'rc': 0, 'item': u'virt_sandbox_use_nfs', u'delta': u'0:00:00.003608', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:27.191363', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:28,034 p=12211 u=student |  TASK [openshift_node : Install GlusterFS storage plugin dependencies] ******************************************
2019-03-20 13:11:31,760 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:11:31,980 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:11:32,095 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:11:32,107 p=12211 u=student |  TASK [openshift_node : Check for existence of fusefs sebooleans] ***********************************************
2019-03-20 13:11:32,527 p=12211 u=student |  ok: [master.lab.example.com] => (item=virt_use_fusefs)
2019-03-20 13:11:32,569 p=12211 u=student |  ok: [node1.lab.example.com] => (item=virt_use_fusefs)
2019-03-20 13:11:32,574 p=12211 u=student |  ok: [node2.lab.example.com] => (item=virt_use_fusefs)
2019-03-20 13:11:32,907 p=12211 u=student |  ok: [master.lab.example.com] => (item=virt_sandbox_use_fusefs)
2019-03-20 13:11:32,939 p=12211 u=student |  ok: [node1.lab.example.com] => (item=virt_sandbox_use_fusefs)
2019-03-20 13:11:32,941 p=12211 u=student |  ok: [node2.lab.example.com] => (item=virt_sandbox_use_fusefs)
2019-03-20 13:11:32,955 p=12211 u=student |  TASK [openshift_node : Set seboolean to allow gluster storage plugin access from containers] *******************
2019-03-20 13:11:33,899 p=12211 u=student |  changed: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:32.514046', '_ansible_no_log': False, u'stdout': u'virt_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_use_fusefs'], u'rc': 0, 'item': u'virt_use_fusefs', u'delta': u'0:00:00.003454', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:32.510592', '_ansible_ignore_errors': None, 'failed': False})
2019-03-20 13:11:33,950 p=12211 u=student |  changed: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:32.501874', '_ansible_no_log': False, u'stdout': u'virt_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_use_fusefs'], u'rc': 0, 'item': u'virt_use_fusefs', u'delta': u'0:00:00.003731', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:32.498143', '_ansible_ignore_errors': None, 'failed': False})
2019-03-20 13:11:34,098 p=12211 u=student |  changed: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:32.497121', '_ansible_no_log': False, u'stdout': u'virt_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_use_fusefs'], u'rc': 0, 'item': u'virt_use_fusefs', u'delta': u'0:00:00.004143', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:32.492978', '_ansible_ignore_errors': None, 'failed': False})
2019-03-20 13:11:34,801 p=12211 u=student |  changed: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:32.911857', '_ansible_no_log': False, u'stdout': u'virt_sandbox_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_sandbox_use_fusefs'], u'rc': 0, 'item': u'virt_sandbox_use_fusefs', u'delta': u'0:00:00.003662', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_sandbox_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:32.908195', '_ansible_ignore_errors': None, 'failed': False})
2019-03-20 13:11:34,865 p=12211 u=student |  changed: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:32.911915', '_ansible_no_log': False, u'stdout': u'virt_sandbox_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_sandbox_use_fusefs'], u'rc': 0, 'item': u'virt_sandbox_use_fusefs', u'delta': u'0:00:00.003558', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_sandbox_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:32.908357', '_ansible_ignore_errors': None, 'failed': False})
2019-03-20 13:11:35,094 p=12211 u=student |  changed: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:32.882053', '_ansible_no_log': False, u'stdout': u'virt_sandbox_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_sandbox_use_fusefs'], u'rc': 0, 'item': u'virt_sandbox_use_fusefs', u'delta': u'0:00:00.003952', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_sandbox_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:32.878101', '_ansible_ignore_errors': None, 'failed': False})
2019-03-20 13:11:35,109 p=12211 u=student |  TASK [openshift_node : Set seboolean to allow gluster storage plugin access from containers (python 3)] ********
2019-03-20 13:11:35,186 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:32.497121', '_ansible_no_log': False, u'stdout': u'virt_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_use_fusefs'], u'rc': 0, 'item': u'virt_use_fusefs', u'delta': u'0:00:00.004143', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:32.492978', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:35,188 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:32.882053', '_ansible_no_log': False, u'stdout': u'virt_sandbox_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_sandbox_use_fusefs'], u'rc': 0, 'item': u'virt_sandbox_use_fusefs', u'delta': u'0:00:00.003952', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_sandbox_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:32.878101', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:35,200 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:32.514046', '_ansible_no_log': False, u'stdout': u'virt_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_use_fusefs'], u'rc': 0, 'item': u'virt_use_fusefs', u'delta': u'0:00:00.003454', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:32.510592', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:35,201 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:32.911915', '_ansible_no_log': False, u'stdout': u'virt_sandbox_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_sandbox_use_fusefs'], u'rc': 0, 'item': u'virt_sandbox_use_fusefs', u'delta': u'0:00:00.003558', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_sandbox_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:32.908357', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:35,210 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:32.501874', '_ansible_no_log': False, u'stdout': u'virt_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_use_fusefs'], u'rc': 0, 'item': u'virt_use_fusefs', u'delta': u'0:00:00.003731', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:32.498143', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:35,213 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-20 13:11:32.911857', '_ansible_no_log': False, u'stdout': u'virt_sandbox_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_sandbox_use_fusefs'], u'rc': 0, 'item': u'virt_sandbox_use_fusefs', u'delta': u'0:00:00.003662', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_sandbox_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-20 13:11:32.908195', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-20 13:11:35,226 p=12211 u=student |  TASK [openshift_node : Install Ceph storage plugin dependencies] ***********************************************
2019-03-20 13:11:43,681 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:11:45,810 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:11:45,855 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:11:45,865 p=12211 u=student |  TASK [openshift_node : Install iSCSI storage plugin dependencies] **********************************************
2019-03-20 13:11:49,132 p=12211 u=student |  changed: [node1.lab.example.com] => (item=iscsi-initiator-utils)
2019-03-20 13:11:49,329 p=12211 u=student |  changed: [node2.lab.example.com] => (item=iscsi-initiator-utils)
2019-03-20 13:11:49,433 p=12211 u=student |  changed: [master.lab.example.com] => (item=iscsi-initiator-utils)
2019-03-20 13:11:52,221 p=12211 u=student |  changed: [master.lab.example.com] => (item=device-mapper-multipath)
2019-03-20 13:11:52,489 p=12211 u=student |  changed: [node1.lab.example.com] => (item=device-mapper-multipath)
2019-03-20 13:11:52,553 p=12211 u=student |  changed: [node2.lab.example.com] => (item=device-mapper-multipath)
2019-03-20 13:11:52,566 p=12211 u=student |  TASK [openshift_node : restart services] ***********************************************************************
2019-03-20 13:11:53,076 p=12211 u=student |  changed: [master.lab.example.com] => (item=multipathd)
2019-03-20 13:11:53,131 p=12211 u=student |  changed: [node1.lab.example.com] => (item=multipathd)
2019-03-20 13:11:53,168 p=12211 u=student |  changed: [node2.lab.example.com] => (item=multipathd)
2019-03-20 13:11:53,488 p=12211 u=student |  ok: [master.lab.example.com] => (item=rpcbind)
2019-03-20 13:11:53,542 p=12211 u=student |  ok: [node1.lab.example.com] => (item=rpcbind)
2019-03-20 13:11:53,589 p=12211 u=student |  ok: [node2.lab.example.com] => (item=rpcbind)
2019-03-20 13:11:54,047 p=12211 u=student |  changed: [node1.lab.example.com] => (item=iscsid)
2019-03-20 13:11:54,075 p=12211 u=student |  changed: [master.lab.example.com] => (item=iscsid)
2019-03-20 13:11:54,110 p=12211 u=student |  changed: [node2.lab.example.com] => (item=iscsid)
2019-03-20 13:11:54,125 p=12211 u=student |  TASK [openshift_node : Template multipath configuration] *******************************************************
2019-03-20 13:11:55,062 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:11:55,088 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:11:55,098 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:11:55,110 p=12211 u=student |  TASK [openshift_node : Enable multipath] ***********************************************************************
2019-03-20 13:11:55,565 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:11:55,571 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:11:55,577 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:11:55,591 p=12211 u=student |  TASK [openshift_node : Create OpenvSwitch service.d directory] *************************************************
2019-03-20 13:11:55,992 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:11:56,026 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:11:56,032 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:11:56,046 p=12211 u=student |  TASK [openshift_node : Install OpenvSwitch service OOM fix] ****************************************************
2019-03-20 13:11:57,154 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:11:57,173 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:11:57,193 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:11:57,202 p=12211 u=student |  TASK [tuned : Check for tuned package] *************************************************************************
2019-03-20 13:11:57,632 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:11:57,639 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:11:57,647 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:11:57,658 p=12211 u=student |  TASK [tuned : Set tuned OpenShift variables] *******************************************************************
2019-03-20 13:11:57,701 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:11:57,721 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:11:57,739 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:11:57,751 p=12211 u=student |  TASK [tuned : Ensure directory structure exists] ***************************************************************
2019-03-20 13:11:58,168 p=12211 u=student |  ok: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:11:58,217 p=12211 u=student |  changed: [node2.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:11:58,222 p=12211 u=student |  changed: [node1.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:11:58,532 p=12211 u=student |  changed: [node2.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:11:58,786 p=12211 u=student |  ok: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:11:58,808 p=12211 u=student |  changed: [node1.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:11:59,079 p=12211 u=student |  changed: [node2.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:11:59,095 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,108 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,120 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,131 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,147 p=12211 u=student |  ok: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:11:59,148 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,169 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,170 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,170 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': u's0', 'seuser': u'system_u', 'serole': u'object_r', 'ctime': 1553065475.4003277, 'state': u'file', 'gid': 0, 'mode': u'0644', 'mtime': 1522031926.0, 'owner': u'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': u'usr_t'}) 
2019-03-20 13:11:59,181 p=12211 u=student |  changed: [node1.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:11:59,182 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,183 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,183 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,189 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': u's0', 'seuser': u'system_u', 'serole': u'object_r', 'ctime': 1553065475.4003277, 'state': u'file', 'gid': 0, 'mode': u'0644', 'mtime': 1522031926.0, 'owner': u'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': u'usr_t'}) 
2019-03-20 13:11:59,200 p=12211 u=student |  TASK [tuned : Ensure files are populated from templates] *******************************************************
2019-03-20 13:11:59,247 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,248 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,278 p=12211 u=student |  skipping: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,288 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,300 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,301 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,335 p=12211 u=student |  skipping: [node2.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,336 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,337 p=12211 u=student |  skipping: [node1.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-20 13:11:59,926 p=12211 u=student |  ok: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:12:00,027 p=12211 u=student |  changed: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:12:00,072 p=12211 u=student |  changed: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:12:00,627 p=12211 u=student |  ok: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:12:00,799 p=12211 u=student |  changed: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:12:00,804 p=12211 u=student |  changed: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:12:01,359 p=12211 u=student |  ok: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:12:01,478 p=12211 u=student |  changed: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:12:01,510 p=12211 u=student |  changed: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-20 13:12:02,054 p=12211 u=student |  ok: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': u's0', 'seuser': u'system_u', 'serole': u'object_r', 'ctime': 1553065475.4003277, 'state': u'file', 'gid': 0, 'mode': u'0644', 'mtime': 1522031926.0, 'owner': u'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': u'usr_t'})
2019-03-20 13:12:02,170 p=12211 u=student |  changed: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': u's0', 'seuser': u'system_u', 'serole': u'object_r', 'ctime': 1553065475.4003277, 'state': u'file', 'gid': 0, 'mode': u'0644', 'mtime': 1522031926.0, 'owner': u'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': u'usr_t'})
2019-03-20 13:12:02,201 p=12211 u=student |  changed: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': u's0', 'seuser': u'system_u', 'serole': u'object_r', 'ctime': 1553065475.4003277, 'state': u'file', 'gid': 0, 'mode': u'0644', 'mtime': 1522031926.0, 'owner': u'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': u'usr_t'})
2019-03-20 13:12:02,214 p=12211 u=student |  TASK [tuned : Make tuned use the recommended tuned profile on restart] *****************************************
2019-03-20 13:12:02,633 p=12211 u=student |  changed: [node2.lab.example.com] => (item=/etc/tuned/active_profile)
2019-03-20 13:12:02,692 p=12211 u=student |  changed: [node1.lab.example.com] => (item=/etc/tuned/active_profile)
2019-03-20 13:12:02,698 p=12211 u=student |  changed: [master.lab.example.com] => (item=/etc/tuned/active_profile)
2019-03-20 13:12:03,017 p=12211 u=student |  changed: [node2.lab.example.com] => (item=/etc/tuned/profile_mode)
2019-03-20 13:12:03,027 p=12211 u=student |  changed: [node1.lab.example.com] => (item=/etc/tuned/profile_mode)
2019-03-20 13:12:03,043 p=12211 u=student |  changed: [master.lab.example.com] => (item=/etc/tuned/profile_mode)
2019-03-20 13:12:03,057 p=12211 u=student |  TASK [tuned : Restart tuned service] ***************************************************************************
2019-03-20 13:12:04,319 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:12:04,614 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:12:05,089 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:05,100 p=12211 u=student |  TASK [nickhammond.logrotate : nickhammond.logrotate | Install logrotate] ***************************************
2019-03-20 13:12:05,719 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:12:05,727 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:05,728 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:12:05,741 p=12211 u=student |  TASK [nickhammond.logrotate : nickhammond.logrotate | Setup logrotate.d scripts] *******************************
2019-03-20 13:12:05,787 p=12211 u=student |  RUNNING HANDLER [openshift_node : restart openvswitch] *********************************************************
2019-03-20 13:12:06,690 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:12:06,725 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:06,745 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:12:06,753 p=12211 u=student |  RUNNING HANDLER [openshift_node : restart openvswitch pause] ***************************************************
2019-03-20 13:12:06,790 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:12:06,791 p=12211 u=student |  RUNNING HANDLER [openshift_node : restart node] ****************************************************************
2019-03-20 13:12:06,864 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:06,865 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:12:06,879 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:12:06,880 p=12211 u=student |  RUNNING HANDLER [openshift_node : reload systemd units] ********************************************************
2019-03-20 13:12:07,631 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:12:07,653 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:12:07,817 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:07,828 p=12211 u=student |  PLAY [create additional node network plugin groups] ************************************************************
2019-03-20 13:12:07,839 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:12:08,609 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:12:08,657 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:12:08,696 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:08,736 p=12211 u=student |  TASK [group_by] ************************************************************************************************
2019-03-20 13:12:08,794 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:08,810 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:12:08,812 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:12:08,823 p=12211 u=student |  TASK [group_by] ************************************************************************************************
2019-03-20 13:12:08,873 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:08,891 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:12:08,900 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:12:08,911 p=12211 u=student |  TASK [group_by] ************************************************************************************************
2019-03-20 13:12:08,966 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:08,973 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:12:08,987 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:12:08,998 p=12211 u=student |  TASK [group_by] ************************************************************************************************
2019-03-20 13:12:09,038 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:09,066 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:12:09,072 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:12:09,083 p=12211 u=student |  TASK [group_by] ************************************************************************************************
2019-03-20 13:12:09,136 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:09,153 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:12:09,156 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:12:09,164 p=12211 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_nodes_use_flannel

2019-03-20 13:12:09,164 p=12211 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_nodes_use_calico

2019-03-20 13:12:09,165 p=12211 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_nodes_use_contiv

2019-03-20 13:12:09,165 p=12211 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_nodes_use_kuryr

2019-03-20 13:12:09,165 p=12211 u=student |  PLAY [etcd_client node config] *********************************************************************************
2019-03-20 13:12:09,165 p=12211 u=student |  skipping: no hosts matched
2019-03-20 13:12:09,167 p=12211 u=student |  PLAY [Additional node config] **********************************************************************************
2019-03-20 13:12:09,167 p=12211 u=student |  skipping: no hosts matched
2019-03-20 13:12:09,169 p=12211 u=student |  PLAY [Additional node config] **********************************************************************************
2019-03-20 13:12:09,169 p=12211 u=student |  skipping: no hosts matched
2019-03-20 13:12:09,171 p=12211 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_nodes_use_nuage

2019-03-20 13:12:09,171 p=12211 u=student |  PLAY [Additional node config] **********************************************************************************
2019-03-20 13:12:09,171 p=12211 u=student |  skipping: no hosts matched
2019-03-20 13:12:09,176 p=12211 u=student |  PLAY [Configure Contiv masters] ********************************************************************************
2019-03-20 13:12:09,193 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:12:09,868 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:09,908 p=12211 u=student |  PLAY [Configure rest of Contiv nodes] **************************************************************************
2019-03-20 13:12:09,912 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:12:10,960 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:12:11,031 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:12:11,094 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:11,135 p=12211 u=student |  ok: [services.lab.example.com]
2019-03-20 13:12:11,206 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:12:11,230 p=12211 u=student |  PLAY [Configure Kuryr node] ************************************************************************************
2019-03-20 13:12:11,230 p=12211 u=student |  skipping: no hosts matched
2019-03-20 13:12:11,238 p=12211 u=student |  PLAY [Additional node config] **********************************************************************************
2019-03-20 13:12:11,250 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:12:12,006 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:12,065 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:12:12,097 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:12:12,141 p=12211 u=student |  TASK [openshift_manage_node : Wait for master API to become available before proceeding] ***********************
2019-03-20 13:12:12,166 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:12,187 p=12211 u=student |  TASK [openshift_manage_node : Wait for Node Registration] ******************************************************
2019-03-20 13:12:13,266 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:12:13,297 p=12211 u=student |  ok: [node2.lab.example.com -> master.lab.example.com]
2019-03-20 13:12:13,411 p=12211 u=student |  ok: [node1.lab.example.com -> master.lab.example.com]
2019-03-20 13:12:13,425 p=12211 u=student |  TASK [openshift_manage_node : include_tasks] *******************************************************************
2019-03-20 13:12:13,496 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_manage_node/tasks/config.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:12:13,516 p=12211 u=student |  TASK [openshift_manage_node : Set node schedulability] *********************************************************
2019-03-20 13:12:14,507 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:12:14,669 p=12211 u=student |  ok: [node2.lab.example.com -> master.lab.example.com]
2019-03-20 13:12:14,687 p=12211 u=student |  ok: [node1.lab.example.com -> master.lab.example.com]
2019-03-20 13:12:14,711 p=12211 u=student |  TASK [openshift_manage_node : Label nodes] *********************************************************************
2019-03-20 13:12:15,798 p=12211 u=student |  ok: [node2.lab.example.com -> master.lab.example.com]
2019-03-20 13:12:15,943 p=12211 u=student |  ok: [node1.lab.example.com -> master.lab.example.com]
2019-03-20 13:12:16,087 p=12211 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:12:16,098 p=12211 u=student |  TASK [openshift_manage_node : include_tasks] *******************************************************************
2019-03-20 13:12:16,172 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_manage_node/tasks/set_default_node_role.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:12:16,195 p=12211 u=student |  TASK [openshift_manage_node : Retrieve non-infra, non-master nodes that are not yet labeled compute] ***********
2019-03-20 13:12:16,758 p=12211 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-20 13:12:16,775 p=12211 u=student |  TASK [openshift_manage_node : label non-master non-infra nodes compute] ****************************************
2019-03-20 13:12:16,807 p=12211 u=student |  TASK [Create group for deployment type] ************************************************************************
2019-03-20 13:12:17,009 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:17,103 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:12:17,121 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:12:17,129 p=12211 u=student |  PLAY [Re-enable excluder if it was previously enabled] *********************************************************
2019-03-20 13:12:17,144 p=12211 u=student |  TASK [openshift_excluder : Detecting Atomic Host Operating System] *********************************************
2019-03-20 13:12:17,752 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:17,807 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:12:17,817 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:12:17,829 p=12211 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_docker_excluder] **********************************
2019-03-20 13:12:18,014 p=12211 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-20 13:12:18,119 p=12211 u=student |  ok: [node1.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-20 13:12:18,135 p=12211 u=student |  ok: [node2.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-20 13:12:18,146 p=12211 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_openshift_excluder] *******************************
2019-03-20 13:12:18,328 p=12211 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-20 13:12:18,432 p=12211 u=student |  ok: [node1.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-20 13:12:18,456 p=12211 u=student |  ok: [node2.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-20 13:12:18,468 p=12211 u=student |  TASK [openshift_excluder : Fail if invalid openshift_excluder_action provided] *********************************
2019-03-20 13:12:18,512 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:18,516 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:12:18,520 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:12:18,532 p=12211 u=student |  TASK [openshift_excluder : Fail if r_openshift_excluder_upgrade_target is not defined] *************************
2019-03-20 13:12:18,579 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:18,580 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:12:18,590 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:12:18,602 p=12211 u=student |  TASK [openshift_excluder : Include main action task file] ******************************************************
2019-03-20 13:12:18,693 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/enable.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:12:18,706 p=12211 u=student |  TASK [openshift_excluder : Install excluders] ******************************************************************
2019-03-20 13:12:18,791 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/install.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:12:18,804 p=12211 u=student |  TASK [openshift_excluder : Install docker excluder - yum] ******************************************************
2019-03-20 13:12:18,846 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:18,851 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:12:18,860 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:12:18,872 p=12211 u=student |  TASK [openshift_excluder : Install docker excluder - dnf] ******************************************************
2019-03-20 13:12:18,909 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:18,917 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:12:18,929 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:12:18,942 p=12211 u=student |  TASK [openshift_excluder : Install openshift excluder - yum] ***************************************************
2019-03-20 13:12:18,986 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:18,987 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:12:18,996 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:12:19,008 p=12211 u=student |  TASK [openshift_excluder : Install openshift excluder - dnf] ***************************************************
2019-03-20 13:12:19,050 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:19,051 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:12:19,063 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:12:19,076 p=12211 u=student |  TASK [openshift_excluder : set_fact] ***************************************************************************
2019-03-20 13:12:19,121 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:19,122 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:12:19,132 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:12:19,144 p=12211 u=student |  TASK [openshift_excluder : Enable excluders] *******************************************************************
2019-03-20 13:12:19,222 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/exclude.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-20 13:12:19,239 p=12211 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-20 13:12:19,874 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:12:19,883 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:19,932 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:12:19,944 p=12211 u=student |  TASK [openshift_excluder : Enable docker excluder] *************************************************************
2019-03-20 13:12:20,557 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:20,669 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:12:20,684 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:12:20,696 p=12211 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-20 13:12:21,385 p=12211 u=student |  ok: [node1.lab.example.com]
2019-03-20 13:12:21,430 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:21,453 p=12211 u=student |  ok: [node2.lab.example.com]
2019-03-20 13:12:21,464 p=12211 u=student |  TASK [openshift_excluder : Enable openshift excluder] **********************************************************
2019-03-20 13:12:21,944 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:21,989 p=12211 u=student |  changed: [node2.lab.example.com]
2019-03-20 13:12:21,989 p=12211 u=student |  changed: [node1.lab.example.com]
2019-03-20 13:12:21,996 p=12211 u=student |  PLAY [Node Install Checkpoint End] *****************************************************************************
2019-03-20 13:12:22,005 p=12211 u=student |  TASK [Set Node install 'Complete'] *****************************************************************************
2019-03-20 13:12:22,056 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:12:22,063 p=12211 u=student |  PLAY [GlusterFS Install Checkpoint Start] **********************************************************************
2019-03-20 13:12:22,073 p=12211 u=student |  TASK [Set GlusterFS install 'In Progress'] *********************************************************************
2019-03-20 13:12:22,092 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:12:22,098 p=12211 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: glusterfs

2019-03-20 13:12:22,098 p=12211 u=student |  PLAY [Configure GlusterFS hosts] *******************************************************************************
2019-03-20 13:12:22,098 p=12211 u=student |  skipping: no hosts matched
2019-03-20 13:12:22,100 p=12211 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: glusterfs_registry

2019-03-20 13:12:22,101 p=12211 u=student |  PLAY [Configure GlusterFS registry hosts] **********************************************************************
2019-03-20 13:12:22,101 p=12211 u=student |  skipping: no hosts matched
2019-03-20 13:12:22,104 p=12211 u=student |  PLAY [Load kernel modules for nodes] ***************************************************************************
2019-03-20 13:12:22,117 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:12:22,158 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:22,158 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:12:22,168 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:12:22,180 p=12211 u=student |  TASK [openshift_storage_glusterfs : Ensure device mapper modules loaded] ***************************************
2019-03-20 13:12:22,226 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:22,226 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:12:22,229 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:12:22,242 p=12211 u=student |  TASK [openshift_storage_glusterfs : load kernel modules] *******************************************************
2019-03-20 13:12:22,280 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:22,282 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:12:22,291 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:12:22,298 p=12211 u=student |  PLAY [Configure GlusterFS] *************************************************************************************
2019-03-20 13:12:22,311 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:12:22,331 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:22,346 p=12211 u=student |  TASK [openshift_storage_glusterfs : Create temp directory for doing work in] ***********************************
2019-03-20 13:12:22,367 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:22,379 p=12211 u=student |  TASK [openshift_storage_glusterfs : include_tasks] *************************************************************
2019-03-20 13:12:22,398 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:22,410 p=12211 u=student |  TASK [openshift_storage_glusterfs : include_tasks] *************************************************************
2019-03-20 13:12:22,432 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:22,444 p=12211 u=student |  TASK [openshift_storage_glusterfs : Delete temp directory] *****************************************************
2019-03-20 13:12:22,465 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:22,472 p=12211 u=student |  PLAY [GlusterFS Install Checkpoint End] ************************************************************************
2019-03-20 13:12:22,480 p=12211 u=student |  TASK [Set GlusterFS install 'Complete'] ************************************************************************
2019-03-20 13:12:22,500 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:12:22,506 p=12211 u=student |  PLAY [Hosted Install Checkpoint Start] *************************************************************************
2019-03-20 13:12:22,515 p=12211 u=student |  TASK [Set Hosted install 'In Progress'] ************************************************************************
2019-03-20 13:12:22,567 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:12:22,576 p=12211 u=student |  PLAY [Create Hosted Resources - persistent volumes] ************************************************************
2019-03-20 13:12:22,590 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:12:23,209 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:23,248 p=12211 u=student |  TASK [openshift_persistent_volumes : Create temp directory for volume definitions] *****************************
2019-03-20 13:12:23,565 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:23,578 p=12211 u=student |  TASK [openshift_persistent_volumes : Copy the admin client config(s)] ******************************************
2019-03-20 13:12:23,923 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:23,934 p=12211 u=student |  TASK [openshift_persistent_volumes : set_fact] *****************************************************************
2019-03-20 13:12:23,952 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:23,965 p=12211 u=student |  TASK [openshift_persistent_volumes : create standard pv and pvc lists] *****************************************
2019-03-20 13:12:24,006 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:24,018 p=12211 u=student |  TASK [openshift_persistent_volumes : include_tasks] ************************************************************
2019-03-20 13:12:24,049 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_persistent_volumes/tasks/pv.yml for master.lab.example.com
2019-03-20 13:12:24,061 p=12211 u=student |  TASK [openshift_persistent_volumes : Deploy PersistentVolume definitions] **************************************
2019-03-20 13:12:24,711 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:24,724 p=12211 u=student |  TASK [openshift_persistent_volumes : Create PersistentVolumes] *************************************************
2019-03-20 13:12:25,252 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:25,265 p=12211 u=student |  TASK [openshift_persistent_volumes : include_tasks] ************************************************************
2019-03-20 13:12:25,298 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_persistent_volumes/tasks/pvc.yml for master.lab.example.com
2019-03-20 13:12:25,312 p=12211 u=student |  TASK [openshift_persistent_volumes : Deploy PersistentVolumeClaim definitions] *********************************
2019-03-20 13:12:25,951 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:25,963 p=12211 u=student |  TASK [openshift_persistent_volumes : Create PersistentVolumeClaims] ********************************************
2019-03-20 13:12:26,478 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:26,489 p=12211 u=student |  TASK [openshift_persistent_volumes : Delete temp directory] ****************************************************
2019-03-20 13:12:26,837 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:26,845 p=12211 u=student |  PLAY [Create Hosted Resources - openshift_default_storage_class] ***********************************************
2019-03-20 13:12:26,856 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:12:27,455 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:27,489 p=12211 u=student |  TASK [openshift_default_storage_class : Ensure storageclass object] ********************************************
2019-03-20 13:12:27,507 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:27,513 p=12211 u=student |  PLAY [Create Hosted Resources - openshift projects] ************************************************************
2019-03-20 13:12:27,524 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:12:28,120 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:28,155 p=12211 u=student |  TASK [openshift_hosted : Create default projects] **************************************************************
2019-03-20 13:12:29,192 p=12211 u=student |  changed: [master.lab.example.com] => (item={'value': {u'default_node_selector': u''}, 'key': u'default'})
2019-03-20 13:12:30,281 p=12211 u=student |  changed: [master.lab.example.com] => (item={'value': {u'default_node_selector': u''}, 'key': u'logging'})
2019-03-20 13:12:31,373 p=12211 u=student |  changed: [master.lab.example.com] => (item={'value': {u'default_node_selector': u''}, 'key': u'openshift-infra'})
2019-03-20 13:12:31,385 p=12211 u=student |  TASK [openshift_hosted : Create additional projects] ***********************************************************
2019-03-20 13:12:31,409 p=12211 u=student |  PLAY [Create Hosted Resources - router] ************************************************************************
2019-03-20 13:12:31,420 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:12:32,016 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:32,052 p=12211 u=student |  TASK [openshift_hosted : Add iptables allow rules] *************************************************************
2019-03-20 13:12:32,081 p=12211 u=student |  TASK [openshift_hosted : Remove iptables rules] ****************************************************************
2019-03-20 13:12:32,111 p=12211 u=student |  TASK [openshift_hosted : Add firewalld allow rules] ************************************************************
2019-03-20 13:12:32,142 p=12211 u=student |  TASK [openshift_hosted : Remove firewalld allow rules] *********************************************************
2019-03-20 13:12:32,173 p=12211 u=student |  TASK [openshift_hosted : Retrieve list of openshift nodes matching router selector] ****************************
2019-03-20 13:12:32,705 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:32,723 p=12211 u=student |  TASK [openshift_hosted : set_fact replicas] ********************************************************************
2019-03-20 13:12:32,769 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:32,784 p=12211 u=student |  TASK [openshift_hosted : Get the certificate contents for router] **********************************************
2019-03-20 13:12:32,823 p=12211 u=student |  TASK [openshift_hosted : generate a default wildcard router certificate] ***************************************
2019-03-20 13:12:33,769 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {}, u'replicas': u'2', u'serviceaccount': u'router', u'namespace': u'default', u'stats_port': 1936, u'edits': [{u'action': u'put', u'key': u'spec.strategy.rollingParams.intervalSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.rollingParams.updatePeriodSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.activeDeadlineSeconds', u'value': 21600}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'selector': u'region=infra', u'ports': [u'80:80', u'443:443']})
2019-03-20 13:12:33,786 p=12211 u=student |  TASK [openshift_hosted : set the openshift_hosted_router_certificate] ******************************************
2019-03-20 13:12:33,854 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:33,866 p=12211 u=student |  TASK [openshift_hosted : Create the router service account(s)] *************************************************
2019-03-20 13:12:34,754 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {u'certfile': u'/etc/origin/master/openshift-router.crt', u'keyfile': u'/etc/origin/master/openshift-router.key', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'serviceaccount': u'router', u'namespace': u'default', u'stats_port': 1936, u'edits': [{u'action': u'put', u'key': u'spec.strategy.rollingParams.intervalSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.rollingParams.updatePeriodSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.activeDeadlineSeconds', u'value': 21600}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'selector': u'region=infra', u'ports': [u'80:80', u'443:443']})
2019-03-20 13:12:34,770 p=12211 u=student |  TASK [openshift_hosted : Grant the router service account(s) access to the appropriate scc] ********************
2019-03-20 13:12:35,456 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {u'certfile': u'/etc/origin/master/openshift-router.crt', u'keyfile': u'/etc/origin/master/openshift-router.key', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'serviceaccount': u'router', u'namespace': u'default', u'stats_port': 1936, u'edits': [{u'action': u'put', u'key': u'spec.strategy.rollingParams.intervalSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.rollingParams.updatePeriodSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.activeDeadlineSeconds', u'value': 21600}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'selector': u'region=infra', u'ports': [u'80:80', u'443:443']})
2019-03-20 13:12:35,469 p=12211 u=student |  TASK [openshift_hosted : Set additional permissions for router service account] ********************************
2019-03-20 13:12:36,208 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {u'certfile': u'/etc/origin/master/openshift-router.crt', u'keyfile': u'/etc/origin/master/openshift-router.key', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'serviceaccount': u'router', u'namespace': u'default', u'stats_port': 1936, u'edits': [{u'action': u'put', u'key': u'spec.strategy.rollingParams.intervalSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.rollingParams.updatePeriodSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.activeDeadlineSeconds', u'value': 21600}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'selector': u'region=infra', u'ports': [u'80:80', u'443:443']})
2019-03-20 13:12:36,223 p=12211 u=student |  TASK [openshift_hosted : Create OpenShift router] **************************************************************
2019-03-20 13:12:43,766 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {u'certfile': u'/etc/origin/master/openshift-router.crt', u'keyfile': u'/etc/origin/master/openshift-router.key', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'serviceaccount': u'router', u'namespace': u'default', u'stats_port': 1936, u'edits': [{u'action': u'put', u'key': u'spec.strategy.rollingParams.intervalSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.rollingParams.updatePeriodSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.activeDeadlineSeconds', u'value': 21600}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'selector': u'region=infra', u'ports': [u'80:80', u'443:443']})
2019-03-20 13:12:43,779 p=12211 u=student |  PLAY [Create Hosted Resources - registry] **********************************************************************
2019-03-20 13:12:43,799 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:12:44,470 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:44,511 p=12211 u=student |  TASK [openshift_hosted : Add iptables allow rules] *************************************************************
2019-03-20 13:12:44,563 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'5000/tcp', u'service': u'Docker Registry Port'}) 
2019-03-20 13:12:44,577 p=12211 u=student |  TASK [openshift_hosted : Remove iptables rules] ****************************************************************
2019-03-20 13:12:44,614 p=12211 u=student |  TASK [openshift_hosted : Add firewalld allow rules] ************************************************************
2019-03-20 13:12:44,676 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'5000/tcp', u'service': u'Docker Registry Port'}) 
2019-03-20 13:12:44,690 p=12211 u=student |  TASK [openshift_hosted : Remove firewalld allow rules] *********************************************************
2019-03-20 13:12:44,727 p=12211 u=student |  TASK [openshift_hosted : Retrieve list of openshift nodes matching registry selector] **************************
2019-03-20 13:12:45,332 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:45,358 p=12211 u=student |  TASK [openshift_hosted : set_fact l_node_count to number of nodes matching registry selector] ******************
2019-03-20 13:12:45,421 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:45,433 p=12211 u=student |  TASK [openshift_hosted : set_fact l_default_replicas when l_node_count == 0] ***********************************
2019-03-20 13:12:45,468 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:45,485 p=12211 u=student |  TASK [openshift_hosted : set_fact l_default_replicas when l_node_count > 0] ************************************
2019-03-20 13:12:45,550 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:45,565 p=12211 u=student |  TASK [openshift_hosted : set openshift_hosted facts] ***********************************************************
2019-03-20 13:12:45,636 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:45,653 p=12211 u=student |  TASK [openshift_hosted : Update registry environment variables when pushing via dns] ***************************
2019-03-20 13:12:45,704 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:45,722 p=12211 u=student |  TASK [openshift_hosted : Update registry proxy settings for dc/docker-registry] ********************************
2019-03-20 13:12:45,749 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:45,761 p=12211 u=student |  TASK [openshift_hosted : Create the registry service account] **************************************************
2019-03-20 13:12:46,776 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:46,789 p=12211 u=student |  TASK [openshift_hosted : Grant the registry service account access to the appropriate scc] *********************
2019-03-20 13:12:47,526 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:47,538 p=12211 u=student |  TASK [openshift_hosted : oc adm policy add-cluster-role-to-user system:registry system:serviceaccount:default:registry] ***
2019-03-20 13:12:48,346 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:48,357 p=12211 u=student |  TASK [openshift_hosted : create the default registry service] **************************************************
2019-03-20 13:12:49,950 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:49,964 p=12211 u=student |  TASK [openshift_hosted : include_tasks] ************************************************************************
2019-03-20 13:12:50,032 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_hosted/tasks/secure.yml for master.lab.example.com
2019-03-20 13:12:50,049 p=12211 u=student |  TASK [openshift_hosted : Include reencrypt route configuration] ************************************************
2019-03-20 13:12:50,068 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:50,080 p=12211 u=student |  TASK [openshift_hosted : Include passthrough route configuration] **********************************************
2019-03-20 13:12:50,143 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_hosted/tasks/secure/passthrough.yml for master.lab.example.com
2019-03-20 13:12:50,160 p=12211 u=student |  TASK [openshift_hosted : Configure self-signed certificate file paths] *****************************************
2019-03-20 13:12:50,210 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:50,222 p=12211 u=student |  TASK [openshift_hosted : Configure provided certificate file paths] ********************************************
2019-03-20 13:12:50,246 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:50,258 p=12211 u=student |  TASK [openshift_hosted : Configure provided ca certificate file path] ******************************************
2019-03-20 13:12:50,281 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:50,293 p=12211 u=student |  TASK [openshift_hosted : Retrieve provided certificate files] **************************************************
2019-03-20 13:12:50,328 p=12211 u=student |  TASK [openshift_hosted : Configure a passthrough route for docker-registry] ************************************
2019-03-20 13:12:51,731 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:51,745 p=12211 u=student |  TASK [openshift_hosted : Fetch the docker-registry route] ******************************************************
2019-03-20 13:12:52,275 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:52,287 p=12211 u=student |  TASK [openshift_hosted : Retrieve registry service for the clusterip] ******************************************
2019-03-20 13:12:52,806 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:52,819 p=12211 u=student |  TASK [openshift_hosted : Generate self-signed docker-registry certificates] ************************************
2019-03-20 13:12:53,546 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:53,562 p=12211 u=student |  TASK [openshift_hosted : Retrieve certificate files to generate certificate bundle] ****************************
2019-03-20 13:12:53,994 p=12211 u=student |  ok: [master.lab.example.com] => (item=/etc/origin/master/registry.crt)
2019-03-20 13:12:54,396 p=12211 u=student |  ok: [master.lab.example.com] => (item=/etc/origin/master/ca.crt)
2019-03-20 13:12:54,411 p=12211 u=student |  TASK [openshift_hosted : Generate certificate bundle] **********************************************************
2019-03-20 13:12:55,195 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:55,214 p=12211 u=student |  TASK [openshift_hosted : Reset the certificate path to use the bundle] *****************************************
2019-03-20 13:12:55,262 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:55,279 p=12211 u=student |  TASK [openshift_hosted : Create the secret for the registry certificates] **************************************
2019-03-20 13:12:56,346 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:12:56,359 p=12211 u=student |  TASK [openshift_hosted : Add the secret to the registry's pod service accounts] ********************************
2019-03-20 13:12:57,851 p=12211 u=student |  changed: [master.lab.example.com] => (item=registry)
2019-03-20 13:12:59,031 p=12211 u=student |  changed: [master.lab.example.com] => (item=default)
2019-03-20 13:12:59,043 p=12211 u=student |  TASK [openshift_hosted : Set facts for secure registry] ********************************************************
2019-03-20 13:12:59,084 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:59,099 p=12211 u=student |  TASK [openshift_hosted : Detect if there has been certificate changes] *****************************************
2019-03-20 13:12:59,145 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:59,157 p=12211 u=student |  TASK [openshift_hosted : Update openshift_hosted facts with secure registry variables] *************************
2019-03-20 13:12:59,204 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:59,216 p=12211 u=student |  TASK [openshift_hosted : include_tasks] ************************************************************************
2019-03-20 13:12:59,239 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:59,250 p=12211 u=student |  TASK [openshift_hosted : Update openshift_hosted facts for persistent volumes] *********************************
2019-03-20 13:12:59,297 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:12:59,308 p=12211 u=student |  TASK [openshift_hosted : include_tasks] ************************************************************************
2019-03-20 13:12:59,329 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:12:59,341 p=12211 u=student |  TASK [openshift_hosted : Create OpenShift registry] ************************************************************
2019-03-20 13:13:01,023 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:13:01,029 p=12211 u=student |  PLAY [Poll for hosted pod deployments] *************************************************************************
2019-03-20 13:13:01,041 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:13:01,849 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:13:01,920 p=12211 u=student |  TASK [openshift_hosted : setup registry list] ******************************************************************
2019-03-20 13:13:01,965 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:13:01,977 p=12211 u=student |  TASK [openshift_hosted : Ensure OpenShift pod correctly rolls out (best-effort today)] *************************
2019-03-20 13:13:46,052 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {u'keyfile': u'/etc/origin/master/openshift-router.key', u'certfile': u'/etc/origin/master/openshift-router.crt', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'namespace': u'default', u'serviceaccount': u'router', u'selector': u'region=infra', u'edits': [{u'action': u'put', u'value': 1, u'key': u'spec.strategy.rollingParams.intervalSeconds'}, {u'action': u'put', u'value': 1, u'key': u'spec.strategy.rollingParams.updatePeriodSeconds'}, {u'action': u'put', u'value': 21600, u'key': u'spec.strategy.activeDeadlineSeconds'}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'stats_port': 1936, u'ports': [u'80:80', u'443:443']})
2019-03-20 13:13:46,065 p=12211 u=student |  TASK [openshift_hosted : Determine the latest version of the OpenShift pod deployment] *************************
2019-03-20 13:13:46,579 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {u'keyfile': u'/etc/origin/master/openshift-router.key', u'certfile': u'/etc/origin/master/openshift-router.crt', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'namespace': u'default', u'serviceaccount': u'router', u'selector': u'region=infra', u'edits': [{u'action': u'put', u'value': 1, u'key': u'spec.strategy.rollingParams.intervalSeconds'}, {u'action': u'put', u'value': 1, u'key': u'spec.strategy.rollingParams.updatePeriodSeconds'}, {u'action': u'put', u'value': 21600, u'key': u'spec.strategy.activeDeadlineSeconds'}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'stats_port': 1936, u'ports': [u'80:80', u'443:443']})
2019-03-20 13:13:46,596 p=12211 u=student |  TASK [openshift_hosted : Poll for OpenShift pod deployment success] ********************************************
2019-03-20 13:13:47,137 p=12211 u=student |  changed: [master.lab.example.com] => (item=[{u'name': u'router', u'certificate': {u'certfile': u'/etc/origin/master/openshift-router.crt', u'keyfile': u'/etc/origin/master/openshift-router.key', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'namespace': u'default', u'serviceaccount': u'router', u'selector': u'region=infra', u'edits': [{u'action': u'put', u'key': u'spec.strategy.rollingParams.intervalSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.rollingParams.updatePeriodSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.activeDeadlineSeconds', u'value': 21600}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'stats_port': 1936, u'ports': [u'80:80', u'443:443']}, {'_ansible_parsed': True, 'stderr_lines': [], u'cmd': [u'oc', u'get', u'deploymentconfig', u'router', u'--namespace', u'default', u'--config', u'/etc/origin/master/admin.kubeconfig', u'-o', u'jsonpath={ .status.latestVersion }'], u'end': u'2019-03-20 13:13:46.554151', '_ansible_no_log': False, u'stdout': u'1', '_ansible_item_result': True, u'changed': True, 'item': {u'name': u'router', u'certificate': {u'keyfile': u'/etc/origin/master/openshift-router.key', u'certfile': u'/etc/origin/master/openshift-router.crt', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'namespace': u'default', u'serviceaccount': u'router', u'stats_port': 1936, u'edits': [{u'action': u'put', u'value': 1, u'key': u'spec.strategy.rollingParams.intervalSeconds'}, {u'action': u'put', u'value': 1, u'key': u'spec.strategy.rollingParams.updatePeriodSeconds'}, {u'action': u'put', u'value': 21600, u'key': u'spec.strategy.activeDeadlineSeconds'}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'selector': u'region=infra', u'ports': [u'80:80', u'443:443']}, u'delta': u'0:00:00.168419', u'stderr': u'', u'rc': 0, u'invocation': {u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': False, u'_raw_params': u"oc get deploymentconfig router --namespace default --config /etc/origin/master/admin.kubeconfig -o jsonpath='{ .status.latestVersion }'", u'removes': None, u'creates': None, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'1'], u'start': u'2019-03-20 13:13:46.385732', '_ansible_ignore_errors': None, 'failed': False}])
2019-03-20 13:13:47,158 p=12211 u=student |  TASK [openshift_hosted : Ensure OpenShift pod correctly rolls out (best-effort today)] *************************
2019-03-20 13:13:53,733 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'namespace': u'default', u'name': u'docker-registry'})
2019-03-20 13:13:53,745 p=12211 u=student |  TASK [openshift_hosted : Determine the latest version of the OpenShift pod deployment] *************************
2019-03-20 13:13:54,274 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'namespace': u'default', u'name': u'docker-registry'})
2019-03-20 13:13:54,287 p=12211 u=student |  TASK [openshift_hosted : Poll for OpenShift pod deployment success] ********************************************
2019-03-20 13:13:54,823 p=12211 u=student |  changed: [master.lab.example.com] => (item=[{u'namespace': u'default', u'name': u'docker-registry'}, {'_ansible_parsed': True, 'stderr_lines': [], u'cmd': [u'oc', u'get', u'deploymentconfig', u'docker-registry', u'--namespace', u'default', u'--config', u'/etc/origin/master/admin.kubeconfig', u'-o', u'jsonpath={ .status.latestVersion }'], u'end': u'2019-03-20 13:13:54.250608', '_ansible_no_log': False, u'stdout': u'1', '_ansible_item_result': True, u'changed': True, 'item': {u'namespace': u'default', u'name': u'docker-registry'}, u'delta': u'0:00:00.176198', u'stderr': u'', u'rc': 0, u'invocation': {u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': False, u'_raw_params': u"oc get deploymentconfig docker-registry --namespace default --config /etc/origin/master/admin.kubeconfig -o jsonpath='{ .status.latestVersion }'", u'removes': None, u'creates': None, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'1'], u'start': u'2019-03-20 13:13:54.074410', '_ansible_ignore_errors': None, 'failed': False}])
2019-03-20 13:13:54,833 p=12211 u=student |  PLAY [Poll for hosted pod deployments] *************************************************************************
2019-03-20 13:13:54,843 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:13:55,458 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:13:55,503 p=12211 u=student |  TASK [openshift_hosted : include_tasks] ************************************************************************
2019-03-20 13:13:55,539 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:13:55,549 p=12211 u=student |  PLAY [Create Hosted Resources - cockpit-ui] ********************************************************************
2019-03-20 13:13:55,567 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:13:56,759 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:13:56,798 p=12211 u=student |  TASK [cockpit-ui : fetch the docker-registry route] ************************************************************
2019-03-20 13:13:57,429 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:13:57,441 p=12211 u=student |  TASK [cockpit-ui : Create passthrough route for registry-console] **********************************************
2019-03-20 13:13:58,525 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:13:58,537 p=12211 u=student |  TASK [cockpit-ui : Create temp directory for kubeconfig] *******************************************************
2019-03-20 13:13:59,000 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:13:59,011 p=12211 u=student |  TASK [cockpit-ui : set_fact] ***********************************************************************************
2019-03-20 13:13:59,169 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:13:59,180 p=12211 u=student |  TASK [cockpit-ui : Copy the admin client config(s)] ************************************************************
2019-03-20 13:13:59,619 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:13:59,631 p=12211 u=student |  TASK [cockpit-ui : Deploy registry-console] ********************************************************************
2019-03-20 13:14:00,344 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:14:00,359 p=12211 u=student |  TASK [cockpit-ui : Delete temp directory] **********************************************************************
2019-03-20 13:14:00,764 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:00,773 p=12211 u=student |  PLAY [Install docker gc] ***************************************************************************************
2019-03-20 13:14:00,791 p=12211 u=student |  TASK [openshift_master : Retrieve list of schedulable nodes matching selector] *********************************
2019-03-20 13:14:00,813 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:00,832 p=12211 u=student |  TASK [openshift_master : Ensure that docker-gc daemonset has nodes to run on] **********************************
2019-03-20 13:14:00,854 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:00,869 p=12211 u=student |  TASK [openshift_docker_gc : Create docker-gc tempdir] **********************************************************
2019-03-20 13:14:00,892 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:00,905 p=12211 u=student |  TASK [openshift_docker_gc : Add dockergc as priviledged] *******************************************************
2019-03-20 13:14:00,927 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:00,939 p=12211 u=student |  TASK [openshift_docker_gc : Create dockergc DaemonSet] *********************************************************
2019-03-20 13:14:00,957 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:00,971 p=12211 u=student |  TASK [openshift_docker_gc : Apply dockergc DaemonSet] **********************************************************
2019-03-20 13:14:00,991 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:01,003 p=12211 u=student |  TASK [openshift_docker_gc : Remove temp directory] *************************************************************
2019-03-20 13:14:01,023 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:01,031 p=12211 u=student |  PLAY [Hosted Install Checkpoint End] ***************************************************************************
2019-03-20 13:14:01,043 p=12211 u=student |  TASK [Set Hosted install 'Complete'] ***************************************************************************
2019-03-20 13:14:01,221 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:14:01,228 p=12211 u=student |  PLAY [Web Console Install Checkpoint Start] ********************************************************************
2019-03-20 13:14:01,237 p=12211 u=student |  TASK [Set Web Console install 'In Progress'] *******************************************************************
2019-03-20 13:14:01,397 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:14:01,407 p=12211 u=student |  PLAY [Web Console] *********************************************************************************************
2019-03-20 13:14:01,424 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:14:02,355 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:02,394 p=12211 u=student |  TASK [debug] ***************************************************************************************************
2019-03-20 13:14:02,548 p=12211 u=student |  ok: [master.lab.example.com] => {
    "msg": true
}
2019-03-20 13:14:02,561 p=12211 u=student |  TASK [openshift_web_console : include_tasks] *******************************************************************
2019-03-20 13:14:02,637 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_web_console/tasks/install.yml for master.lab.example.com
2019-03-20 13:14:02,656 p=12211 u=student |  TASK [openshift_web_console : Ensure openshift-web-console project exists] *************************************
2019-03-20 13:14:04,855 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:14:04,867 p=12211 u=student |  TASK [openshift_web_console : Make temp directory for web console templates] ***********************************
2019-03-20 13:14:05,317 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:05,330 p=12211 u=student |  TASK [openshift_web_console : Copy admin client config] ********************************************************
2019-03-20 13:14:05,890 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:05,903 p=12211 u=student |  TASK [openshift_web_console : Copy web console templates to temp directory] ************************************
2019-03-20 13:14:06,867 p=12211 u=student |  changed: [master.lab.example.com] => (item=console-template.yaml)
2019-03-20 13:14:07,750 p=12211 u=student |  changed: [master.lab.example.com] => (item=console-config.yaml)
2019-03-20 13:14:07,765 p=12211 u=student |  TASK [openshift_web_console : Read the existing web console config map] ****************************************
2019-03-20 13:14:08,884 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:08,902 p=12211 u=student |  TASK [openshift_web_console : set_fact] ************************************************************************
2019-03-20 13:14:09,059 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:09,074 p=12211 u=student |  TASK [openshift_web_console : Copy the existing web console config to temp directory] **************************
2019-03-20 13:14:09,093 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:09,110 p=12211 u=student |  TASK [openshift_web_console : Read existing assetConfig in master-config.yaml] *********************************
2019-03-20 13:14:09,779 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:09,792 p=12211 u=student |  TASK [openshift_web_console : set_fact] ************************************************************************
2019-03-20 13:14:09,987 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:10,002 p=12211 u=student |  TASK [openshift_web_console : set_fact] ************************************************************************
2019-03-20 13:14:10,166 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:10,177 p=12211 u=student |  TASK [openshift_web_console : Set web console config properties from inventory variables] **********************
2019-03-20 13:14:10,745 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:14:10,759 p=12211 u=student |  TASK [openshift_web_console : Migrate assetConfig from master-config.yaml] *************************************
2019-03-20 13:14:10,784 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:10,796 p=12211 u=student |  TASK [openshift_web_console : slurp] ***************************************************************************
2019-03-20 13:14:11,310 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:11,322 p=12211 u=student |  TASK [openshift_web_console : Apply the web console template file] *********************************************
2019-03-20 13:14:12,318 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:14:12,334 p=12211 u=student |  TASK [openshift_web_console : Pause for the web console deployment to start] ***********************************
2019-03-20 13:14:12,364 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:12,378 p=12211 u=student |  TASK [openshift_web_console : Verify that the web console is running] ******************************************
2019-03-20 13:14:13,918 p=12211 u=student |  FAILED - RETRYING: Verify that the web console is running (60 retries left).
2019-03-20 13:14:25,525 p=12211 u=student |  FAILED - RETRYING: Verify that the web console is running (59 retries left).
2019-03-20 13:14:36,954 p=12211 u=student |  FAILED - RETRYING: Verify that the web console is running (58 retries left).
2019-03-20 13:14:47,311 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:47,323 p=12211 u=student |  TASK [openshift_web_console : Check status in the openshift-web-console namespace] *****************************
2019-03-20 13:14:47,341 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:47,353 p=12211 u=student |  TASK [openshift_web_console : debug] ***************************************************************************
2019-03-20 13:14:47,372 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:47,383 p=12211 u=student |  TASK [openshift_web_console : Get pods in the openshift-web-console namespace] *********************************
2019-03-20 13:14:47,401 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:47,413 p=12211 u=student |  TASK [openshift_web_console : debug] ***************************************************************************
2019-03-20 13:14:47,431 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:47,441 p=12211 u=student |  TASK [openshift_web_console : Get events in the openshift-web-console namespace] *******************************
2019-03-20 13:14:47,459 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:47,469 p=12211 u=student |  TASK [openshift_web_console : debug] ***************************************************************************
2019-03-20 13:14:47,487 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:47,499 p=12211 u=student |  TASK [openshift_web_console : Get console pod logs] ************************************************************
2019-03-20 13:14:47,518 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:47,529 p=12211 u=student |  TASK [openshift_web_console : debug] ***************************************************************************
2019-03-20 13:14:47,548 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:47,559 p=12211 u=student |  TASK [openshift_web_console : Remove temp directory] ***********************************************************
2019-03-20 13:14:48,020 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:48,032 p=12211 u=student |  TASK [openshift_web_console : Report console errors] ***********************************************************
2019-03-20 13:14:48,051 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,063 p=12211 u=student |  TASK [openshift_web_console : include_tasks] *******************************************************************
2019-03-20 13:14:48,087 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,093 p=12211 u=student |  PLAY [Web Console Install Checkpoint End] **********************************************************************
2019-03-20 13:14:48,102 p=12211 u=student |  TASK [Set Web Console install 'Complete'] **********************************************************************
2019-03-20 13:14:48,256 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:14:48,264 p=12211 u=student |  PLAY [Metrics Install Checkpoint Start] ************************************************************************
2019-03-20 13:14:48,272 p=12211 u=student |  TASK [Set Metrics install 'In Progress'] ***********************************************************************
2019-03-20 13:14:48,293 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:14:48,300 p=12211 u=student |  PLAY [OpenShift Metrics] ***************************************************************************************
2019-03-20 13:14:48,312 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:14:48,331 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,346 p=12211 u=student |  TASK [openshift_metrics : command] *****************************************************************************
2019-03-20 13:14:48,365 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,376 p=12211 u=student |  TASK [openshift_metrics : Check that python-passlib is available on the control host] **************************
2019-03-20 13:14:48,395 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,406 p=12211 u=student |  TASK [openshift_metrics : Set default image variables based on openshift_deployment_type] **********************
2019-03-20 13:14:48,427 p=12211 u=student |  skipping: [master.lab.example.com] => (item=/usr/share/ansible/openshift-ansible/roles/openshift_metrics/vars/openshift-enterprise.yml) 
2019-03-20 13:14:48,439 p=12211 u=student |  TASK [openshift_metrics : Set metrics image facts] *************************************************************
2019-03-20 13:14:48,459 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,469 p=12211 u=student |  TASK [openshift_metrics : Create temp directory for doing work in on target] ***********************************
2019-03-20 13:14:48,486 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,497 p=12211 u=student |  TASK [openshift_metrics : Create temp directory for all our templates] *****************************************
2019-03-20 13:14:48,515 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,531 p=12211 u=student |  TASK [openshift_metrics : Create temp directory local on control node] *****************************************
2019-03-20 13:14:48,550 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,562 p=12211 u=student |  TASK [openshift_metrics : Copy the admin client config(s)] *****************************************************
2019-03-20 13:14:48,583 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,597 p=12211 u=student |  TASK [openshift_metrics : include_tasks] ***********************************************************************
2019-03-20 13:14:48,615 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,628 p=12211 u=student |  TASK [openshift_metrics : include_tasks] ***********************************************************************
2019-03-20 13:14:48,649 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,661 p=12211 u=student |  TASK [openshift_metrics : include_tasks] ***********************************************************************
2019-03-20 13:14:48,683 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,701 p=12211 u=student |  TASK [openshift_metrics : Delete temp directory] ***************************************************************
2019-03-20 13:14:48,723 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:48,731 p=12211 u=student |  PLAY [OpenShift Metrics] ***************************************************************************************
2019-03-20 13:14:48,731 p=12211 u=student |  skipping: no hosts matched
2019-03-20 13:14:48,734 p=12211 u=student |  PLAY [Metrics Install Checkpoint End] **************************************************************************
2019-03-20 13:14:48,743 p=12211 u=student |  TASK [Set Metrics install 'Complete'] **************************************************************************
2019-03-20 13:14:48,901 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:14:48,906 p=12211 u=student |  PLAY [Logging Install Checkpoint Start] ************************************************************************
2019-03-20 13:14:48,912 p=12211 u=student |  TASK [Set Logging install 'In Progress'] ***********************************************************************
2019-03-20 13:14:48,930 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:14:48,936 p=12211 u=student |  PLAY [Update vm.max_map_count for ES 5.x] **********************************************************************
2019-03-20 13:14:48,944 p=12211 u=student |  TASK [Checking vm max_map_count value] *************************************************************************
2019-03-20 13:14:48,992 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:14:49,011 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,012 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:14:49,012 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:14:49,020 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:14:49,027 p=12211 u=student |  TASK [stat] ****************************************************************************************************
2019-03-20 13:14:49,077 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:14:49,090 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,090 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:14:49,092 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:14:49,107 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:14:49,116 p=12211 u=student |  TASK [Check for current value of vm.max_map_count in 99-elasticsearch.conf] ************************************
2019-03-20 13:14:49,205 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:14:49,206 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,207 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:14:49,214 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:14:49,225 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:14:49,232 p=12211 u=student |  TASK [Updating vm.max_map_count value] *************************************************************************
2019-03-20 13:14:49,278 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:14:49,324 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,325 p=12211 u=student |  skipping: [node1.lab.example.com]
2019-03-20 13:14:49,326 p=12211 u=student |  skipping: [node2.lab.example.com]
2019-03-20 13:14:49,333 p=12211 u=student |  skipping: [services.lab.example.com]
2019-03-20 13:14:49,340 p=12211 u=student |  PLAY [OpenShift Aggregated Logging] ****************************************************************************
2019-03-20 13:14:49,352 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:14:49,369 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,381 p=12211 u=student |  TASK [openshift_logging : fail] ********************************************************************************
2019-03-20 13:14:49,399 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,411 p=12211 u=student |  TASK [openshift_logging : assert] ******************************************************************************
2019-03-20 13:14:49,430 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,442 p=12211 u=student |  TASK [openshift_logging : Create temp directory for doing work in] *********************************************
2019-03-20 13:14:49,461 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,473 p=12211 u=student |  TASK [openshift_logging : debug] *******************************************************************************
2019-03-20 13:14:49,493 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,509 p=12211 u=student |  TASK [openshift_logging : Create local temp directory for doing work in] ***************************************
2019-03-20 13:14:49,528 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,540 p=12211 u=student |  TASK [openshift_logging : include_tasks] ***********************************************************************
2019-03-20 13:14:49,559 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,572 p=12211 u=student |  TASK [openshift_logging : include_tasks] ***********************************************************************
2019-03-20 13:14:49,592 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,611 p=12211 u=student |  TASK [openshift_logging : Cleaning up local temp dir] **********************************************************
2019-03-20 13:14:49,633 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,638 p=12211 u=student |  PLAY [Update Master configs] ***********************************************************************************
2019-03-20 13:14:49,638 p=12211 u=student |  skipping: no hosts matched
2019-03-20 13:14:49,641 p=12211 u=student |  PLAY [Logging Install Checkpoint End] **************************************************************************
2019-03-20 13:14:49,652 p=12211 u=student |  TASK [Set Logging install 'Complete'] **************************************************************************
2019-03-20 13:14:49,671 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:14:49,677 p=12211 u=student |  PLAY [Prometheus Install Checkpoint Start] *********************************************************************
2019-03-20 13:14:49,686 p=12211 u=student |  TASK [Set Prometheus install 'In Progress'] ********************************************************************
2019-03-20 13:14:49,704 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:14:49,712 p=12211 u=student |  PLAY [OpenShift Prometheus] ************************************************************************************
2019-03-20 13:14:49,725 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:14:49,744 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,758 p=12211 u=student |  TASK [openshift_prometheus : Set default image variables based on openshift_deployment_type] *******************
2019-03-20 13:14:49,788 p=12211 u=student |  skipping: [master.lab.example.com] => (item=/usr/share/ansible/openshift-ansible/roles/openshift_prometheus/vars/openshift-enterprise.yml) 
2019-03-20 13:14:49,803 p=12211 u=student |  TASK [openshift_prometheus : Create temp directory for doing work in on target] ********************************
2019-03-20 13:14:49,829 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,841 p=12211 u=student |  TASK [openshift_prometheus : set_fact] *************************************************************************
2019-03-20 13:14:49,864 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,876 p=12211 u=student |  TASK [openshift_prometheus : Create templates subdirectory] ****************************************************
2019-03-20 13:14:49,900 p=12211 u=student |  skipping: [master.lab.example.com] => (item=templates) 
2019-03-20 13:14:49,912 p=12211 u=student |  TASK [openshift_prometheus : include_tasks] ********************************************************************
2019-03-20 13:14:49,940 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,950 p=12211 u=student |  TASK [openshift_prometheus : include_tasks] ********************************************************************
2019-03-20 13:14:49,968 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:49,980 p=12211 u=student |  TASK [openshift_prometheus : include_tasks] ********************************************************************
2019-03-20 13:14:49,999 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:50,010 p=12211 u=student |  TASK [openshift_prometheus : Delete temp directory] ************************************************************
2019-03-20 13:14:50,028 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:50,034 p=12211 u=student |  PLAY [Prometheus Install Checkpoint End] ***********************************************************************
2019-03-20 13:14:50,043 p=12211 u=student |  TASK [Set Prometheus install 'Complete'] ***********************************************************************
2019-03-20 13:14:50,061 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:14:50,067 p=12211 u=student |  PLAY [Service Catalog Install Checkpoint Start] ****************************************************************
2019-03-20 13:14:50,076 p=12211 u=student |  TASK [Set Service Catalog install 'In Progress'] ***************************************************************
2019-03-20 13:14:50,125 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:14:50,132 p=12211 u=student |  PLAY [Service Catalog] *****************************************************************************************
2019-03-20 13:14:50,144 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:14:50,846 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:50,885 p=12211 u=student |  TASK [openshift_service_catalog : include_tasks] ***************************************************************
2019-03-20 13:14:50,950 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_service_catalog/tasks/install.yml for master.lab.example.com
2019-03-20 13:14:50,963 p=12211 u=student |  TASK [openshift_service_catalog : Create temp directory for doing work in] *************************************
2019-03-20 13:14:51,278 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:51,291 p=12211 u=student |  TASK [openshift_service_catalog : Set default image variables based on openshift_deployment_type] **************
2019-03-20 13:14:51,335 p=12211 u=student |  ok: [master.lab.example.com] => (item=/usr/share/ansible/openshift-ansible/roles/openshift_service_catalog/vars/openshift-enterprise.yml)
2019-03-20 13:14:51,348 p=12211 u=student |  TASK [openshift_service_catalog : Set service_catalog image facts] *********************************************
2019-03-20 13:14:51,392 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:51,404 p=12211 u=student |  TASK [openshift_service_catalog : Set Service Catalog namespace] ***********************************************
2019-03-20 13:14:52,719 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:14:52,730 p=12211 u=student |  TASK [openshift_service_catalog : Waiting for netnamespace kube-service-catalog to be ready] *******************
2019-03-20 13:14:52,753 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:52,766 p=12211 u=student |  TASK [openshift_service_catalog : Make kube-service-catalog project network global] ****************************
2019-03-20 13:14:52,790 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:14:52,802 p=12211 u=student |  TASK [openshift_service_catalog : include_tasks] ***************************************************************
2019-03-20 13:14:52,849 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_service_catalog/tasks/generate_certs.yml for master.lab.example.com
2019-03-20 13:14:52,864 p=12211 u=student |  TASK [openshift_service_catalog : Create service catalog cert directory] ***************************************
2019-03-20 13:14:53,186 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:53,199 p=12211 u=student |  TASK [openshift_service_catalog : set_fact] ********************************************************************
2019-03-20 13:14:53,237 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:53,249 p=12211 u=student |  TASK [openshift_service_catalog : Generate signing cert] *******************************************************
2019-03-20 13:14:53,834 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:14:53,845 p=12211 u=student |  TASK [openshift_service_catalog : Delete old apiserver.crt] ****************************************************
2019-03-20 13:14:54,176 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:54,188 p=12211 u=student |  TASK [openshift_service_catalog : Delete old apiserver.key] ****************************************************
2019-03-20 13:14:54,516 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:54,530 p=12211 u=student |  TASK [openshift_service_catalog : Generating server keys] ******************************************************
2019-03-20 13:14:55,277 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:14:55,290 p=12211 u=student |  TASK [openshift_service_catalog : Create apiserver-ssl secret] *************************************************
2019-03-20 13:14:55,989 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:14:56,000 p=12211 u=student |  TASK [openshift_service_catalog : Create service-catalog-ssl secret] *******************************************
2019-03-20 13:14:56,806 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:14:56,818 p=12211 u=student |  TASK [openshift_service_catalog : slurp] ***********************************************************************
2019-03-20 13:14:57,126 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:14:57,140 p=12211 u=student |  TASK [openshift_service_catalog : Create api service] **********************************************************
2019-03-20 13:14:58,119 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:14:58,130 p=12211 u=student |  TASK [openshift_service_catalog : copy] ************************************************************************
2019-03-20 13:14:58,742 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:14:58,754 p=12211 u=student |  TASK [openshift_service_catalog : oc_obj] **********************************************************************
2019-03-20 13:14:59,645 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:14:59,659 p=12211 u=student |  TASK [openshift_service_catalog : oc_process] ******************************************************************
2019-03-20 13:15:08,834 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:08,847 p=12211 u=student |  TASK [openshift_service_catalog : copy] ************************************************************************
2019-03-20 13:15:09,461 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:09,473 p=12211 u=student |  TASK [openshift_service_catalog : oc_obj] **********************************************************************
2019-03-20 13:15:10,399 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:10,411 p=12211 u=student |  TASK [openshift_service_catalog : oc_process] ******************************************************************
2019-03-20 13:15:12,446 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:12,457 p=12211 u=student |  TASK [openshift_service_catalog : copy] ************************************************************************
2019-03-20 13:15:13,087 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:13,101 p=12211 u=student |  TASK [openshift_service_catalog : Apply Service Catalog cluster roles] *****************************************
2019-03-20 13:15:13,654 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:13,669 p=12211 u=student |  TASK [openshift_service_catalog : oc_adm_policy_user] **********************************************************
2019-03-20 13:15:14,401 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:14,413 p=12211 u=student |  TASK [openshift_service_catalog : Set SA cluster-role] *********************************************************
2019-03-20 13:15:15,177 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:15,189 p=12211 u=student |  TASK [openshift_service_catalog : Checking for master.etcd-ca.crt] *********************************************
2019-03-20 13:15:15,521 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:15:15,533 p=12211 u=student |  TASK [openshift_service_catalog : template] ********************************************************************
2019-03-20 13:15:16,169 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:16,181 p=12211 u=student |  TASK [openshift_service_catalog : Set Service Catalog API Server daemonset] ************************************
2019-03-20 13:15:17,118 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:17,130 p=12211 u=student |  TASK [openshift_service_catalog : Set Service Catalog API Server service] **************************************
2019-03-20 13:15:18,239 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:18,251 p=12211 u=student |  TASK [openshift_service_catalog : template] ********************************************************************
2019-03-20 13:15:18,872 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:18,883 p=12211 u=student |  TASK [openshift_service_catalog : Set Service Catalog API Server route] ****************************************
2019-03-20 13:15:19,791 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:19,804 p=12211 u=student |  TASK [openshift_service_catalog : template] ********************************************************************
2019-03-20 13:15:20,410 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:20,422 p=12211 u=student |  TASK [openshift_service_catalog : Set Controller Manager deployment] *******************************************
2019-03-20 13:15:21,331 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:21,343 p=12211 u=student |  TASK [openshift_service_catalog : include_tasks] ***************************************************************
2019-03-20 13:15:21,387 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_service_catalog/tasks/start_api_server.yml for master.lab.example.com
2019-03-20 13:15:21,407 p=12211 u=student |  TASK [openshift_service_catalog : Label master.lab.example.com for APIServer and controller deployment] ********
2019-03-20 13:15:22,164 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:22,175 p=12211 u=student |  TASK [openshift_service_catalog : wait for api server to be ready] *********************************************
2019-03-20 13:15:23,956 p=12211 u=student |  FAILED - RETRYING: wait for api server to be ready (60 retries left).
2019-03-20 13:15:34,367 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:15:34,379 p=12211 u=student |  TASK [openshift_service_catalog : Delete temp directory] *******************************************************
2019-03-20 13:15:34,710 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:15:34,723 p=12211 u=student |  TASK [openshift_service_catalog : include_tasks] ***************************************************************
2019-03-20 13:15:34,745 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:15:34,757 p=12211 u=student |  TASK [ansible_service_broker : include_tasks] ******************************************************************
2019-03-20 13:15:34,842 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/ansible_service_broker/tasks/install.yml for master.lab.example.com
2019-03-20 13:15:34,853 p=12211 u=student |  TASK [ansible_service_broker : Set default image variables based on deployment type] ***************************
2019-03-20 13:15:34,896 p=12211 u=student |  ok: [master.lab.example.com] => (item=/usr/share/ansible/openshift-ansible/roles/ansible_service_broker/vars/openshift-enterprise.yml)
2019-03-20 13:15:34,913 p=12211 u=student |  TASK [ansible_service_broker : set ansible_service_broker facts] ***********************************************
2019-03-20 13:15:34,963 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:15:34,976 p=12211 u=student |  TASK [ansible_service_broker : set ansible-service-broker image facts using set prefix and tag] ****************
2019-03-20 13:15:35,019 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:15:35,030 p=12211 u=student |  TASK [ansible_service_broker : include_tasks] ******************************************************************
2019-03-20 13:15:35,069 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/ansible_service_broker/tasks/validate_facts.yml for master.lab.example.com
2019-03-20 13:15:35,086 p=12211 u=student |  TASK [ansible_service_broker : validate Dockerhub registry settings] *******************************************
2019-03-20 13:15:35,107 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:15:35,120 p=12211 u=student |  TASK [ansible_service_broker : validate RHCC registry settings] ************************************************
2019-03-20 13:15:35,142 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:15:35,154 p=12211 u=student |  TASK [ansible_service_broker : include_tasks] ******************************************************************
2019-03-20 13:15:35,204 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/ansible_service_broker/tasks/generate_certs.yml for master.lab.example.com
2019-03-20 13:15:35,228 p=12211 u=student |  TASK [ansible_service_broker : Create ansible-service-broker cert directory] ***********************************
2019-03-20 13:15:35,649 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:35,662 p=12211 u=student |  TASK [ansible_service_broker : Create self signing ca cert] ****************************************************
2019-03-20 13:15:37,214 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:37,225 p=12211 u=student |  TASK [ansible_service_broker : Create self signed client cert] *************************************************
2019-03-20 13:15:37,791 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'creates': u'/etc/origin/ansible-service-broker/client.key', u'cmd': u'openssl genrsa -out /etc/origin/ansible-service-broker/client.key 2048'})
2019-03-20 13:15:38,110 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'creates': u'/etc/origin/ansible-service-broker/client.csr', u'cmd': u'openssl req -new -key /etc/origin/ansible-service-broker/client.key -out /etc/origin/ansible-service-broker/client.csr -subj "/CN=client"'})
2019-03-20 13:15:38,434 p=12211 u=student |  changed: [master.lab.example.com] => (item={u'creates': u'/etc/origin/ansible-service-broker/client.pem', u'cmd': u'openssl x509 -req -in /etc/origin/ansible-service-broker/client.csr -CA /etc/origin/ansible-service-broker/cert.pem -CAkey /etc/origin/ansible-service-broker/key.pem -CAcreateserial -out /etc/origin/ansible-service-broker/client.pem -days 1024'})
2019-03-20 13:15:38,447 p=12211 u=student |  TASK [ansible_service_broker : set_fact] ***********************************************************************
2019-03-20 13:15:38,585 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:15:38,600 p=12211 u=student |  TASK [ansible_service_broker : Read in certs for etcd] *********************************************************
2019-03-20 13:15:39,026 p=12211 u=student |  ok: [master.lab.example.com] => (item=cert.pem)
2019-03-20 13:15:39,314 p=12211 u=student |  ok: [master.lab.example.com] => (item=client.pem)
2019-03-20 13:15:39,611 p=12211 u=student |  ok: [master.lab.example.com] => (item=client.key)
2019-03-20 13:15:39,624 p=12211 u=student |  TASK [ansible_service_broker : set_fact] ***********************************************************************
2019-03-20 13:15:39,780 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:15:39,794 p=12211 u=student |  TASK [ansible_service_broker : create openshift-ansible-service-broker project] ********************************
2019-03-20 13:15:41,000 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:41,011 p=12211 u=student |  TASK [ansible_service_broker : create ansible-service-broker serviceaccount] ***********************************
2019-03-20 13:15:42,034 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:42,045 p=12211 u=student |  TASK [ansible_service_broker : create ansible-service-broker client serviceaccount] ****************************
2019-03-20 13:15:43,088 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:43,100 p=12211 u=student |  TASK [ansible_service_broker : Create asb-auth cluster role] ***************************************************
2019-03-20 13:15:44,276 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:44,288 p=12211 u=student |  TASK [ansible_service_broker : Create asb-access cluster role] *************************************************
2019-03-20 13:15:45,469 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:45,480 p=12211 u=student |  TASK [ansible_service_broker : Bind admin cluster-role to asb serviceaccount] **********************************
2019-03-20 13:15:46,315 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:46,326 p=12211 u=student |  TASK [ansible_service_broker : Bind auth cluster role to asb service account] **********************************
2019-03-20 13:15:47,227 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:47,237 p=12211 u=student |  TASK [ansible_service_broker : Bind asb-access role to asb-client service account] *****************************
2019-03-20 13:15:48,100 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:48,112 p=12211 u=student |  TASK [ansible_service_broker : create asb-client token secret] *************************************************
2019-03-20 13:15:49,123 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:49,136 p=12211 u=student |  TASK [ansible_service_broker : Create etcd-auth secret] ********************************************************
2019-03-20 13:15:49,935 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:49,947 p=12211 u=student |  TASK [ansible_service_broker : Create broker-etcd-auth secret] *************************************************
2019-03-20 13:15:50,772 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:50,785 p=12211 u=student |  TASK [ansible_service_broker : oc_secret] **********************************************************************
2019-03-20 13:15:51,399 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:15:51,412 p=12211 u=student |  TASK [ansible_service_broker : set_fact] ***********************************************************************
2019-03-20 13:15:51,543 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:15:51,555 p=12211 u=student |  TASK [ansible_service_broker : create ansible-service-broker service] ******************************************
2019-03-20 13:15:52,879 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:52,890 p=12211 u=student |  TASK [ansible_service_broker : create asb-etcd service] ********************************************************
2019-03-20 13:15:54,302 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:54,313 p=12211 u=student |  TASK [ansible_service_broker : create route for ansible-service-broker service] ********************************
2019-03-20 13:15:55,642 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:55,655 p=12211 u=student |  TASK [ansible_service_broker : create persistent volume claim for etcd] ****************************************
2019-03-20 13:15:57,011 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:57,023 p=12211 u=student |  TASK [ansible_service_broker : Set Ansible Service Broker deployment config] ***********************************
2019-03-20 13:15:58,071 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:58,084 p=12211 u=student |  TASK [ansible_service_broker : Search for existing Ansible Service Broker etcd deployment config] **************
2019-03-20 13:15:58,777 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:15:58,790 p=12211 u=student |  TASK [ansible_service_broker : Create asb-etcd deployment config] **********************************************
2019-03-20 13:15:59,817 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:15:59,830 p=12211 u=student |  TASK [ansible_service_broker : set auth name and type facts if needed] *****************************************
2019-03-20 13:15:59,854 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:15:59,866 p=12211 u=student |  TASK [ansible_service_broker : Create config map for ansible-service-broker] ***********************************
2019-03-20 13:16:00,915 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:16:00,927 p=12211 u=student |  TASK [ansible_service_broker : oc_secret] **********************************************************************
2019-03-20 13:16:00,955 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:00,968 p=12211 u=student |  TASK [ansible_service_broker : Create the Broker resource in the catalog] **************************************
2019-03-20 13:16:01,901 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:16:01,914 p=12211 u=student |  TASK [ansible_service_broker : include_tasks] ******************************************************************
2019-03-20 13:16:01,935 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:01,948 p=12211 u=student |  TASK [template_service_broker : include_tasks] *****************************************************************
2019-03-20 13:16:02,014 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/template_service_broker/tasks/install.yml for master.lab.example.com
2019-03-20 13:16:02,025 p=12211 u=student |  TASK [openshift_master : Retrieve list of schedulable nodes matching selector] *********************************
2019-03-20 13:16:02,646 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:16:02,667 p=12211 u=student |  TASK [openshift_master : Ensure that Template Service Broker has nodes to run on] ******************************
2019-03-20 13:16:02,720 p=12211 u=student |  ok: [master.lab.example.com] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2019-03-20 13:16:02,732 p=12211 u=student |  TASK [template_service_broker : include_tasks] *****************************************************************
2019-03-20 13:16:02,786 p=12211 u=student |  included: /usr/share/ansible/openshift-ansible/roles/template_service_broker/tasks/deploy.yml for master.lab.example.com
2019-03-20 13:16:02,804 p=12211 u=student |  TASK [template_service_broker : oc_project] ********************************************************************
2019-03-20 13:16:04,251 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:16:04,265 p=12211 u=student |  TASK [template_service_broker : command] ***********************************************************************
2019-03-20 13:16:04,659 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:16:04,674 p=12211 u=student |  TASK [template_service_broker : Copy admin client config] ******************************************************
2019-03-20 13:16:05,164 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:16:05,183 p=12211 u=student |  TASK [template_service_broker : copy] **************************************************************************
2019-03-20 13:16:06,071 p=12211 u=student |  changed: [master.lab.example.com] => (item=apiserver-template.yaml)
2019-03-20 13:16:06,891 p=12211 u=student |  changed: [master.lab.example.com] => (item=rbac-template.yaml)
2019-03-20 13:16:07,553 p=12211 u=student |  changed: [master.lab.example.com] => (item=template-service-broker-registration.yaml)
2019-03-20 13:16:08,334 p=12211 u=student |  changed: [master.lab.example.com] => (item=apiserver-config.yaml)
2019-03-20 13:16:08,349 p=12211 u=student |  TASK [template_service_broker : yedit] *************************************************************************
2019-03-20 13:16:08,779 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:16:08,793 p=12211 u=student |  TASK [template_service_broker : slurp] *************************************************************************
2019-03-20 13:16:09,143 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:16:09,157 p=12211 u=student |  TASK [template_service_broker : Apply template file] ***********************************************************
2019-03-20 13:16:10,236 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:16:10,252 p=12211 u=student |  TASK [template_service_broker : Reconcile with RBAC file] ******************************************************
2019-03-20 13:16:12,412 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:16:12,430 p=12211 u=student |  TASK [template_service_broker : Verify that TSB is running] ****************************************************
2019-03-20 13:16:13,953 p=12211 u=student |  FAILED - RETRYING: Verify that TSB is running (60 retries left).
2019-03-20 13:16:25,271 p=12211 u=student |  FAILED - RETRYING: Verify that TSB is running (59 retries left).
2019-03-20 13:16:35,618 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:16:35,632 p=12211 u=student |  TASK [template_service_broker : slurp] *************************************************************************
2019-03-20 13:16:35,967 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:16:35,979 p=12211 u=student |  TASK [template_service_broker : Register TSB with broker] ******************************************************
2019-03-20 13:16:36,731 p=12211 u=student |  changed: [master.lab.example.com]
2019-03-20 13:16:36,746 p=12211 u=student |  TASK [template_service_broker : file] **************************************************************************
2019-03-20 13:16:37,102 p=12211 u=student |  ok: [master.lab.example.com]
2019-03-20 13:16:37,116 p=12211 u=student |  TASK [template_service_broker : include_tasks] *****************************************************************
2019-03-20 13:16:37,136 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,143 p=12211 u=student |  PLAY [Service Catalog Install Checkpoint End] ******************************************************************
2019-03-20 13:16:37,153 p=12211 u=student |  TASK [Set Service Catalog install 'Complete'] ******************************************************************
2019-03-20 13:16:37,201 p=12211 u=student |  ok: [workstation.lab.example.com]
2019-03-20 13:16:37,209 p=12211 u=student |  PLAY [Management Install Checkpoint Start] *********************************************************************
2019-03-20 13:16:37,218 p=12211 u=student |  TASK [Set Management install 'In Progress'] ********************************************************************
2019-03-20 13:16:37,236 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:16:37,242 p=12211 u=student |  PLAY [Setup CFME] **********************************************************************************************
2019-03-20 13:16:37,254 p=12211 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-20 13:16:37,273 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,285 p=12211 u=student |  TASK [Create a temporary place to evaluate the PV templates] ***************************************************
2019-03-20 13:16:37,302 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,314 p=12211 u=student |  TASK [openshift_management : Run pre-install Management validation checks] *************************************
2019-03-20 13:16:37,331 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,342 p=12211 u=student |  TASK [openshift_manageiq : Add Management Infrastructure project] **********************************************
2019-03-20 13:16:37,364 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,375 p=12211 u=student |  TASK [openshift_manageiq : Create Admin and Image Inspector Service Account] ***********************************
2019-03-20 13:16:37,401 p=12211 u=student |  skipping: [master.lab.example.com] => (item=management-admin) 
2019-03-20 13:16:37,406 p=12211 u=student |  skipping: [master.lab.example.com] => (item=inspector-admin) 
2019-03-20 13:16:37,418 p=12211 u=student |  TASK [openshift_manageiq : Create manageiq cluster role] *******************************************************
2019-03-20 13:16:37,439 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,449 p=12211 u=student |  TASK [openshift_manageiq : Create Hawkular Metrics Admin Cluster Role] *****************************************
2019-03-20 13:16:37,466 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,478 p=12211 u=student |  TASK [openshift_manageiq : Configure role/user permissions] ****************************************************
2019-03-20 13:16:37,503 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'role', u'resource_name': u'admin', u'user': u'management-admin'}) 
2019-03-20 13:16:37,510 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'role', u'resource_name': u'admin', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-20 13:16:37,518 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'management-infra-admin', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-20 13:16:37,525 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'cluster-reader', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-20 13:16:37,534 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'scc', u'resource_name': u'privileged', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-20 13:16:37,539 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'system:image-puller', u'user': u'system:serviceaccount:management-infra:inspector-admin'}) 
2019-03-20 13:16:37,544 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'scc', u'resource_name': u'privileged', u'user': u'system:serviceaccount:management-infra:inspector-admin'}) 
2019-03-20 13:16:37,553 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'self-provisioner', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-20 13:16:37,561 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'hawkular-metrics-admin', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-20 13:16:37,574 p=12211 u=student |  TASK [openshift_manageiq : Configure 3_2 role/user permissions] ************************************************
2019-03-20 13:16:37,602 p=12211 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'system:image-auditor', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-20 13:16:37,616 p=12211 u=student |  TASK [openshift_management : Ensure the Management 'openshift-management' namespace exists] ********************
2019-03-20 13:16:37,639 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,652 p=12211 u=student |  TASK [openshift_management : Create and Authorize Management Accounts] *****************************************
2019-03-20 13:16:37,672 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,691 p=12211 u=student |  TASK [openshift_management : Determine the correct NFS host if required] ***************************************
2019-03-20 13:16:37,711 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,724 p=12211 u=student |  TASK [openshift_management : Create required NFS exports for Management app storage] ***************************
2019-03-20 13:16:37,744 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,757 p=12211 u=student |  TASK [openshift_management : Note Storage Type -  External NFS] ************************************************
2019-03-20 13:16:37,776 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,788 p=12211 u=student |  TASK [openshift_management : Note Storage Type - Cloud Provider] ***********************************************
2019-03-20 13:16:37,806 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,819 p=12211 u=student |  TASK [openshift_management : Note Storage Type - Preconfigured] ************************************************
2019-03-20 13:16:37,837 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,849 p=12211 u=student |  TASK [openshift_management : Install the Management app and PV templates] **************************************
2019-03-20 13:16:37,868 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,882 p=12211 u=student |  TASK [openshift_management : Create the required App and DB PVs using nfs] *************************************
2019-03-20 13:16:37,902 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,915 p=12211 u=student |  TASK [openshift_management : Note the correct ext-db template name] ********************************************
2019-03-20 13:16:37,932 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,944 p=12211 u=student |  TASK [openshift_management : Note the correct podified db template name] ***************************************
2019-03-20 13:16:37,966 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:37,977 p=12211 u=student |  TASK [openshift_management : Ensure the Management App is created] *********************************************
2019-03-20 13:16:37,996 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:38,010 p=12211 u=student |  TASK [openshift_management : Wait for the app to come up. May take several minutes, 30s check intervals, 30 retries] ***
2019-03-20 13:16:38,030 p=12211 u=student |  skipping: [master.lab.example.com]
2019-03-20 13:16:38,037 p=12211 u=student |  PLAY [Management Install Checkpoint End] ***********************************************************************
2019-03-20 13:16:38,046 p=12211 u=student |  TASK [Set Management install 'Complete'] ***********************************************************************
2019-03-20 13:16:38,066 p=12211 u=student |  skipping: [workstation.lab.example.com]
2019-03-20 13:16:38,068 p=12211 u=student |  PLAY RECAP *****************************************************************************************************
2019-03-20 13:16:38,069 p=12211 u=student |  localhost                  : ok=13   changed=0    unreachable=0    failed=0   
2019-03-20 13:16:38,069 p=12211 u=student |  master.lab.example.com     : ok=600  changed=250  unreachable=0    failed=0   
2019-03-20 13:16:38,069 p=12211 u=student |  node1.lab.example.com      : ok=133  changed=51   unreachable=0    failed=0   
2019-03-20 13:16:38,069 p=12211 u=student |  node2.lab.example.com      : ok=133  changed=52   unreachable=0    failed=0   
2019-03-20 13:16:38,069 p=12211 u=student |  services.lab.example.com   : ok=31   changed=8    unreachable=0    failed=0   
2019-03-20 13:16:38,069 p=12211 u=student |  workstation.lab.example.com : ok=21   changed=0    unreachable=0    failed=0   
2019-03-20 13:16:38,070 p=12211 u=student |  INSTALLER STATUS ***********************************************************************************************
2019-03-20 13:16:38,072 p=12211 u=student |  Initialization             : Complete (0:00:15)
2019-03-20 13:16:38,072 p=12211 u=student |  Health Check               : Complete (0:00:13)
2019-03-20 13:16:38,072 p=12211 u=student |  etcd Install               : Complete (0:00:41)
2019-03-20 13:16:38,073 p=12211 u=student |  NFS Install                : Complete (0:00:10)
2019-03-20 13:16:38,073 p=12211 u=student |  Master Install             : Complete (0:01:36)
2019-03-20 13:16:38,073 p=12211 u=student |  Master Additional Install  : Complete (0:00:45)
2019-03-20 13:16:38,073 p=12211 u=student |  Node Install               : Complete (0:02:09)
2019-03-20 13:16:38,074 p=12211 u=student |  Hosted Install             : Complete (0:01:39)
2019-03-20 13:16:38,074 p=12211 u=student |  Web Console Install        : Complete (0:00:47)
2019-03-20 13:16:38,074 p=12211 u=student |  Service Catalog Install    : Complete (0:01:47)
2019-03-23 14:26:59,114 p=3366 u=student |  PLAY [Initialization Checkpoint Start] *************************************************************************
2019-03-23 14:26:59,128 p=3366 u=student |  TASK [Set install initialization 'In Progress'] ****************************************************************
2019-03-23 14:26:59,167 p=3366 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:26:59,174 p=3366 u=student |  PLAY [Populate config host groups] *****************************************************************************
2019-03-23 14:26:59,181 p=3366 u=student |  TASK [Load group name mapping variables] ***********************************************************************
2019-03-23 14:26:59,200 p=3366 u=student |  ok: [localhost]
2019-03-23 14:26:59,206 p=3366 u=student |  TASK [Evaluate groups - g_etcd_hosts or g_new_etcd_hosts required] *********************************************
2019-03-23 14:26:59,224 p=3366 u=student |  skipping: [localhost]
2019-03-23 14:26:59,230 p=3366 u=student |  TASK [Evaluate groups - g_master_hosts or g_new_master_hosts required] *****************************************
2019-03-23 14:26:59,248 p=3366 u=student |  skipping: [localhost]
2019-03-23 14:26:59,253 p=3366 u=student |  TASK [Evaluate groups - g_node_hosts or g_new_node_hosts required] *********************************************
2019-03-23 14:26:59,271 p=3366 u=student |  skipping: [localhost]
2019-03-23 14:26:59,275 p=3366 u=student |  TASK [Evaluate groups - g_lb_hosts required] *******************************************************************
2019-03-23 14:26:59,292 p=3366 u=student |  skipping: [localhost]
2019-03-23 14:26:59,296 p=3366 u=student |  TASK [Evaluate groups - g_nfs_hosts required] ******************************************************************
2019-03-23 14:26:59,313 p=3366 u=student |  skipping: [localhost]
2019-03-23 14:26:59,317 p=3366 u=student |  TASK [Evaluate groups - g_nfs_hosts is single host] ************************************************************
2019-03-23 14:26:59,331 p=3366 u=student |  skipping: [localhost]
2019-03-23 14:26:59,335 p=3366 u=student |  TASK [Evaluate groups - g_glusterfs_hosts required] ************************************************************
2019-03-23 14:26:59,350 p=3366 u=student |  skipping: [localhost]
2019-03-23 14:26:59,354 p=3366 u=student |  TASK [Evaluate groups - Fail if no etcd hosts group is defined] ************************************************
2019-03-23 14:26:59,369 p=3366 u=student |  skipping: [localhost]
2019-03-23 14:26:59,373 p=3366 u=student |  TASK [Evaluate oo_all_hosts] ***********************************************************************************
2019-03-23 14:26:59,413 p=3366 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:26:59,420 p=3366 u=student |  ok: [localhost] => (item=node1.lab.example.com)
2019-03-23 14:26:59,426 p=3366 u=student |  ok: [localhost] => (item=node2.lab.example.com)
2019-03-23 14:26:59,431 p=3366 u=student |  ok: [localhost] => (item=services.lab.example.com)
2019-03-23 14:26:59,436 p=3366 u=student |  TASK [Evaluate oo_masters] *************************************************************************************
2019-03-23 14:26:59,463 p=3366 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:26:59,469 p=3366 u=student |  TASK [Evaluate oo_first_master] ********************************************************************************
2019-03-23 14:26:59,492 p=3366 u=student |  ok: [localhost]
2019-03-23 14:26:59,496 p=3366 u=student |  TASK [Evaluate oo_new_etcd_to_config] **************************************************************************
2019-03-23 14:26:59,513 p=3366 u=student |  TASK [Evaluate oo_masters_to_config] ***************************************************************************
2019-03-23 14:26:59,538 p=3366 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:26:59,543 p=3366 u=student |  TASK [Evaluate oo_etcd_to_config] ******************************************************************************
2019-03-23 14:26:59,567 p=3366 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:26:59,573 p=3366 u=student |  TASK [Evaluate oo_first_etcd] **********************************************************************************
2019-03-23 14:26:59,596 p=3366 u=student |  ok: [localhost]
2019-03-23 14:26:59,600 p=3366 u=student |  TASK [Evaluate oo_etcd_hosts_to_upgrade] ***********************************************************************
2019-03-23 14:26:59,621 p=3366 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:26:59,626 p=3366 u=student |  TASK [Evaluate oo_etcd_hosts_to_backup] ************************************************************************
2019-03-23 14:26:59,648 p=3366 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:26:59,654 p=3366 u=student |  TASK [Evaluate oo_nodes_to_config] *****************************************************************************
2019-03-23 14:26:59,682 p=3366 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:26:59,689 p=3366 u=student |  ok: [localhost] => (item=node1.lab.example.com)
2019-03-23 14:26:59,693 p=3366 u=student |  ok: [localhost] => (item=node2.lab.example.com)
2019-03-23 14:26:59,699 p=3366 u=student |  TASK [Add master to oo_nodes_to_config] ************************************************************************
2019-03-23 14:26:59,718 p=3366 u=student |  skipping: [localhost] => (item=master.lab.example.com) 
2019-03-23 14:26:59,722 p=3366 u=student |  TASK [Evaluate oo_lb_to_config] ********************************************************************************
2019-03-23 14:26:59,739 p=3366 u=student |  TASK [Evaluate oo_nfs_to_config] *******************************************************************************
2019-03-23 14:26:59,764 p=3366 u=student |  ok: [localhost] => (item=services.lab.example.com)
2019-03-23 14:26:59,769 p=3366 u=student |  TASK [Evaluate oo_glusterfs_to_config] *************************************************************************
2019-03-23 14:26:59,789 p=3366 u=student |  TASK [Evaluate oo_etcd_to_migrate] *****************************************************************************
2019-03-23 14:26:59,813 p=3366 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:26:59,819 p=3366 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_lb_to_config

2019-03-23 14:26:59,821 p=3366 u=student |  PLAY [Ensure that all non-node hosts are accessible] ***********************************************************
2019-03-23 14:26:59,827 p=3366 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:27:00,877 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:00,922 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:00,939 p=3366 u=student |  PLAY [Initialize basic host facts] *****************************************************************************
2019-03-23 14:27:00,948 p=3366 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:27:01,584 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:01,625 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:01,890 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:01,911 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:01,929 p=3366 u=student |  TASK [openshift_sanitize_inventory : include_tasks] ************************************************************
2019-03-23 14:27:02,007 p=3366 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_sanitize_inventory/tasks/deprecations.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com, services.lab.example.com
2019-03-23 14:27:02,060 p=3366 u=student |  TASK [openshift_sanitize_inventory : Check for usage of deprecated variables] **********************************
2019-03-23 14:27:02,131 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:02,158 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:02,179 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:02,190 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:02,200 p=3366 u=student |  TASK [openshift_sanitize_inventory : debug] ********************************************************************
2019-03-23 14:27:02,243 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:02,244 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:02,244 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:02,250 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:02,260 p=3366 u=student |  TASK [openshift_sanitize_inventory : set_stats] ****************************************************************
2019-03-23 14:27:02,299 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:02,300 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:02,303 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:02,307 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:02,315 p=3366 u=student |  TASK [openshift_sanitize_inventory : Assign deprecated variables to correct counterparts] **********************
2019-03-23 14:27:02,424 p=3366 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_sanitize_inventory/tasks/__deprecations_logging.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com, services.lab.example.com
2019-03-23 14:27:02,440 p=3366 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_sanitize_inventory/tasks/__deprecations_metrics.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com, services.lab.example.com
2019-03-23 14:27:02,451 p=3366 u=student |  TASK [openshift_sanitize_inventory : conditional_set_fact] *****************************************************
2019-03-23 14:27:02,509 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:02,540 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:02,546 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:02,562 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:02,571 p=3366 u=student |  TASK [openshift_sanitize_inventory : set_fact] *****************************************************************
2019-03-23 14:27:02,625 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:02,640 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:02,651 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:02,664 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:02,673 p=3366 u=student |  TASK [openshift_sanitize_inventory : conditional_set_fact] *****************************************************
2019-03-23 14:27:02,741 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:02,764 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:02,771 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:02,785 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:02,793 p=3366 u=student |  TASK [openshift_sanitize_inventory : Standardize on latest variable names] *************************************
2019-03-23 14:27:02,826 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:02,864 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:02,868 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:02,868 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:02,877 p=3366 u=student |  TASK [openshift_sanitize_inventory : Normalize openshift_release] **********************************************
2019-03-23 14:27:02,940 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:02,941 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:02,949 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:02,963 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:02,971 p=3366 u=student |  TASK [openshift_sanitize_inventory : Abort when openshift_release is invalid] **********************************
2019-03-23 14:27:03,004 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:03,004 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:03,012 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:03,018 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:03,026 p=3366 u=student |  TASK [openshift_sanitize_inventory : include_tasks] ************************************************************
2019-03-23 14:27:03,069 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:03,069 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:03,069 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:03,072 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:03,081 p=3366 u=student |  TASK [openshift_sanitize_inventory : Ensure clusterid is set along with the cloudprovider] *********************
2019-03-23 14:27:03,116 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:03,117 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:03,125 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:03,132 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:03,141 p=3366 u=student |  TASK [openshift_sanitize_inventory : Ensure ansible_service_broker_remove and ansible_service_broker_install are mutually exclusive] ***
2019-03-23 14:27:03,166 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:03,189 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:03,190 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:03,196 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:03,205 p=3366 u=student |  TASK [openshift_sanitize_inventory : Ensure template_service_broker_remove and template_service_broker_install are mutually exclusive] ***
2019-03-23 14:27:03,243 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:03,244 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:03,250 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:03,261 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:03,270 p=3366 u=student |  TASK [openshift_sanitize_inventory : Ensure that all requires vsphere configuration variables are set] *********
2019-03-23 14:27:03,309 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:03,310 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:03,314 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:03,322 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:03,330 p=3366 u=student |  TASK [openshift_sanitize_inventory : Ensure removed web console extension variables are not set] ***************
2019-03-23 14:27:03,372 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:03,373 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:03,375 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:03,376 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:03,384 p=3366 u=student |  TASK [openshift_sanitize_inventory : Ensure that web console port matches API server port] *********************
2019-03-23 14:27:03,433 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:03,434 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:03,434 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:03,436 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:03,444 p=3366 u=student |  TASK [Detecting Operating System from ostree_booted] ***********************************************************
2019-03-23 14:27:03,899 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:03,910 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:03,944 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:03,955 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:03,963 p=3366 u=student |  TASK [set openshift_deployment_type if unset] ******************************************************************
2019-03-23 14:27:03,984 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:04,000 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:04,001 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:04,006 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:04,014 p=3366 u=student |  TASK [initialize_facts set fact openshift_is_atomic and openshift_is_containerized] ****************************
2019-03-23 14:27:04,072 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:04,077 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:04,084 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:04,105 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:04,113 p=3366 u=student |  TASK [Set use_crio to True if cri-o rpm is requested] **********************************************************
2019-03-23 14:27:04,158 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:04,158 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:04,159 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:04,168 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:04,176 p=3366 u=student |  TASK [Determine Atomic Host Docker Version] ********************************************************************
2019-03-23 14:27:04,221 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:04,222 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:04,222 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:04,226 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:04,237 p=3366 u=student |  TASK [assert atomic host docker version is 1.12 or later] ******************************************************
2019-03-23 14:27:04,283 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:04,284 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:04,284 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:04,289 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:04,297 p=3366 u=student |  PLAY [Initialize special first-master variables] ***************************************************************
2019-03-23 14:27:04,305 p=3366 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:27:04,758 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:04,774 p=3366 u=student |  TASK [stat] ****************************************************************************************************
2019-03-23 14:27:05,046 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:05,056 p=3366 u=student |  TASK [slurp] ***************************************************************************************************
2019-03-23 14:27:05,075 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:05,084 p=3366 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-23 14:27:05,105 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:05,117 p=3366 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-23 14:27:05,152 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:05,157 p=3366 u=student |  PLAY [Disable web console if required] *************************************************************************
2019-03-23 14:27:05,166 p=3366 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-23 14:27:05,183 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:05,192 p=3366 u=student |  PLAY [Install packages necessary for installer] ****************************************************************
2019-03-23 14:27:05,200 p=3366 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:27:05,890 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:05,936 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:05,960 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:05,974 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:05,990 p=3366 u=student |  TASK [Ensure openshift-ansible installer package deps are installed] *******************************************
2019-03-23 14:27:06,773 p=3366 u=student |  ok: [node1.lab.example.com] => (item=iproute)
2019-03-23 14:27:06,904 p=3366 u=student |  ok: [node2.lab.example.com] => (item=iproute)
2019-03-23 14:27:06,986 p=3366 u=student |  ok: [services.lab.example.com] => (item=iproute)
2019-03-23 14:27:07,029 p=3366 u=student |  ok: [master.lab.example.com] => (item=iproute)
2019-03-23 14:27:07,432 p=3366 u=student |  ok: [node1.lab.example.com] => (item=dbus-python)
2019-03-23 14:27:07,634 p=3366 u=student |  ok: [node2.lab.example.com] => (item=dbus-python)
2019-03-23 14:27:07,657 p=3366 u=student |  ok: [services.lab.example.com] => (item=dbus-python)
2019-03-23 14:27:07,695 p=3366 u=student |  ok: [master.lab.example.com] => (item=dbus-python)
2019-03-23 14:27:08,068 p=3366 u=student |  ok: [node1.lab.example.com] => (item=PyYAML)
2019-03-23 14:27:08,233 p=3366 u=student |  ok: [services.lab.example.com] => (item=PyYAML)
2019-03-23 14:27:08,239 p=3366 u=student |  ok: [node2.lab.example.com] => (item=PyYAML)
2019-03-23 14:27:08,263 p=3366 u=student |  ok: [master.lab.example.com] => (item=PyYAML)
2019-03-23 14:27:08,704 p=3366 u=student |  ok: [node1.lab.example.com] => (item=python-ipaddress)
2019-03-23 14:27:08,783 p=3366 u=student |  ok: [services.lab.example.com] => (item=python-ipaddress)
2019-03-23 14:27:08,936 p=3366 u=student |  ok: [node2.lab.example.com] => (item=python-ipaddress)
2019-03-23 14:27:08,959 p=3366 u=student |  ok: [master.lab.example.com] => (item=python-ipaddress)
2019-03-23 14:27:09,326 p=3366 u=student |  ok: [node1.lab.example.com] => (item=yum-utils)
2019-03-23 14:27:09,367 p=3366 u=student |  ok: [services.lab.example.com] => (item=yum-utils)
2019-03-23 14:27:09,515 p=3366 u=student |  ok: [master.lab.example.com] => (item=yum-utils)
2019-03-23 14:27:09,518 p=3366 u=student |  ok: [node2.lab.example.com] => (item=yum-utils)
2019-03-23 14:27:09,526 p=3366 u=student |  TASK [Ensure various deps for running system containers are installed] *****************************************
2019-03-23 14:27:09,568 p=3366 u=student |  skipping: [master.lab.example.com] => (item=atomic) 
2019-03-23 14:27:09,584 p=3366 u=student |  skipping: [master.lab.example.com] => (item=ostree) 
2019-03-23 14:27:09,584 p=3366 u=student |  skipping: [master.lab.example.com] => (item=runc) 
2019-03-23 14:27:09,612 p=3366 u=student |  skipping: [node1.lab.example.com] => (item=atomic) 
2019-03-23 14:27:09,617 p=3366 u=student |  skipping: [node1.lab.example.com] => (item=ostree) 
2019-03-23 14:27:09,618 p=3366 u=student |  skipping: [node1.lab.example.com] => (item=runc) 
2019-03-23 14:27:09,634 p=3366 u=student |  skipping: [node2.lab.example.com] => (item=atomic) 
2019-03-23 14:27:09,637 p=3366 u=student |  skipping: [services.lab.example.com] => (item=atomic) 
2019-03-23 14:27:09,640 p=3366 u=student |  skipping: [node2.lab.example.com] => (item=ostree) 
2019-03-23 14:27:09,640 p=3366 u=student |  skipping: [node2.lab.example.com] => (item=runc) 
2019-03-23 14:27:09,645 p=3366 u=student |  skipping: [services.lab.example.com] => (item=ostree) 
2019-03-23 14:27:09,654 p=3366 u=student |  skipping: [services.lab.example.com] => (item=runc) 
2019-03-23 14:27:09,663 p=3366 u=student |  PLAY [Initialize cluster facts] ********************************************************************************
2019-03-23 14:27:09,671 p=3366 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:27:10,328 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:10,360 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:10,403 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:10,428 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:10,445 p=3366 u=student |  TASK [Gather Cluster facts] ************************************************************************************
2019-03-23 14:27:11,570 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:11,739 p=3366 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:27:11,761 p=3366 u=student |  changed: [master.lab.example.com]
2019-03-23 14:27:11,770 p=3366 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:27:11,779 p=3366 u=student |  TASK [Set fact of no_proxy_internal_hostnames] *****************************************************************
2019-03-23 14:27:11,834 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:11,835 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:11,836 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:11,842 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:11,850 p=3366 u=student |  TASK [Initialize openshift.node.sdn_mtu] ***********************************************************************
2019-03-23 14:27:12,777 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:12,825 p=3366 u=student |  changed: [master.lab.example.com]
2019-03-23 14:27:12,835 p=3366 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:27:12,915 p=3366 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:27:12,924 p=3366 u=student |  PLAY [Determine openshift_version to configure on first master] ************************************************
2019-03-23 14:27:12,932 p=3366 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:27:12,947 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:12,955 p=3366 u=student |  TASK [include_role] ********************************************************************************************
2019-03-23 14:27:12,970 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:12,978 p=3366 u=student |  TASK [debug] ***************************************************************************************************
2019-03-23 14:27:12,992 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:13,002 p=3366 u=student |  PLAY [Set openshift_version for etcd, node, and master hosts] **************************************************
2019-03-23 14:27:13,002 p=3366 u=student |  skipping: no hosts matched
2019-03-23 14:27:13,004 p=3366 u=student |  PLAY [Ensure the requested version packages are available.] ****************************************************
2019-03-23 14:27:13,005 p=3366 u=student |  skipping: no hosts matched
2019-03-23 14:27:13,008 p=3366 u=student |  PLAY [Verify Requirements] *************************************************************************************
2019-03-23 14:27:13,016 p=3366 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:27:13,494 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:13,513 p=3366 u=student |  TASK [Run variable sanity checks] ******************************************************************************
2019-03-23 14:27:13,720 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:13,724 p=3366 u=student |  PLAY [Initialization Checkpoint End] ***************************************************************************
2019-03-23 14:27:13,730 p=3366 u=student |  TASK [Set install initialization 'Complete'] *******************************************************************
2019-03-23 14:27:13,766 p=3366 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:27:13,772 p=3366 u=student |  PLAY [Validate node hostnames] *********************************************************************************
2019-03-23 14:27:13,780 p=3366 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:27:14,387 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:14,405 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:14,424 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:14,442 p=3366 u=student |  TASK [Query DNS for IP address of master.lab.example.com] ******************************************************
2019-03-23 14:27:14,909 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:14,917 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:14,920 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:14,928 p=3366 u=student |  TASK [Validate openshift_hostname when defined] ****************************************************************
2019-03-23 14:27:14,959 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:14,963 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:14,969 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:14,978 p=3366 u=student |  TASK [Validate openshift_ip exists on node when defined] *******************************************************
2019-03-23 14:27:15,006 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:15,011 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:15,016 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:15,025 p=3366 u=student |  PLAY [Setup yum repositories for all hosts] ********************************************************************
2019-03-23 14:27:15,035 p=3366 u=student |  TASK [rhel_subscribe : fail] ***********************************************************************************
2019-03-23 14:27:15,088 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:15,089 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:15,089 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:15,091 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:15,100 p=3366 u=student |  TASK [rhel_subscribe : Install Red Hat Subscription manager] ***************************************************
2019-03-23 14:27:15,153 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:15,154 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:15,154 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:15,165 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:15,176 p=3366 u=student |  TASK [rhel_subscribe : Is host already registered?] ************************************************************
2019-03-23 14:27:15,220 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:15,230 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:15,230 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:15,240 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:15,249 p=3366 u=student |  TASK [rhel_subscribe : Register host] **************************************************************************
2019-03-23 14:27:15,296 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:15,297 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:15,302 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:15,314 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:15,322 p=3366 u=student |  TASK [rhel_subscribe : fail] ***********************************************************************************
2019-03-23 14:27:15,348 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:15,362 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:15,371 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:15,379 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:15,387 p=3366 u=student |  TASK [rhel_subscribe : Determine if OpenShift Pool Already Attached] *******************************************
2019-03-23 14:27:15,413 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:15,441 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:15,442 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:15,442 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:15,450 p=3366 u=student |  TASK [rhel_subscribe : Attach to OpenShift Pool] ***************************************************************
2019-03-23 14:27:15,488 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:15,488 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:15,504 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:15,507 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:15,516 p=3366 u=student |  TASK [rhel_subscribe : include_tasks] **************************************************************************
2019-03-23 14:27:15,541 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:15,568 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:15,568 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:15,568 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:15,577 p=3366 u=student |  TASK [openshift_repos : openshift_repos detect ostree] *********************************************************
2019-03-23 14:27:15,952 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:15,990 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:16,002 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:16,009 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:16,019 p=3366 u=student |  TASK [openshift_repos : Ensure libselinux-python is installed] *************************************************
2019-03-23 14:27:16,642 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:16,725 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:16,741 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:16,744 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:16,753 p=3366 u=student |  TASK [openshift_repos : Remove openshift_additional.repo file] *************************************************
2019-03-23 14:27:17,307 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:17,330 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:17,347 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:17,354 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:17,363 p=3366 u=student |  TASK [openshift_repos : Create any additional repos that are defined] ******************************************
2019-03-23 14:27:17,417 p=3366 u=student |  TASK [openshift_repos : include_tasks] *************************************************************************
2019-03-23 14:27:17,466 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:17,467 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:17,474 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:17,492 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:17,501 p=3366 u=student |  TASK [openshift_repos : include_tasks] *************************************************************************
2019-03-23 14:27:17,534 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:17,566 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:17,569 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:17,569 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:17,578 p=3366 u=student |  TASK [openshift_repos : Ensure clean repo cache in the event repos have been changed manually] *****************
2019-03-23 14:27:17,649 p=3366 u=student |  changed: [master.lab.example.com] => {
    "msg": "First run of openshift_repos"
}
2019-03-23 14:27:17,651 p=3366 u=student |  changed: [node1.lab.example.com] => {
    "msg": "First run of openshift_repos"
}
2019-03-23 14:27:17,664 p=3366 u=student |  changed: [node2.lab.example.com] => {
    "msg": "First run of openshift_repos"
}
2019-03-23 14:27:17,683 p=3366 u=student |  changed: [services.lab.example.com] => {
    "msg": "First run of openshift_repos"
}
2019-03-23 14:27:17,691 p=3366 u=student |  TASK [openshift_repos : Record that openshift_repos already ran] ***********************************************
2019-03-23 14:27:17,753 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:17,765 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:17,773 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:17,792 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:17,793 p=3366 u=student |  RUNNING HANDLER [openshift_repos : refresh cache] **************************************************************
2019-03-23 14:27:18,414 p=3366 u=student |  changed: [master.lab.example.com]
2019-03-23 14:27:18,486 p=3366 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:27:18,496 p=3366 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:27:18,541 p=3366 u=student |  changed: [services.lab.example.com]
2019-03-23 14:27:18,550 p=3366 u=student |  PLAY [Configure os_firewall] ***********************************************************************************
2019-03-23 14:27:18,559 p=3366 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:27:19,346 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:19,384 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:19,403 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:19,480 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:19,497 p=3366 u=student |  TASK [os_firewall : Detecting Atomic Host Operating System] ****************************************************
2019-03-23 14:27:19,928 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:19,934 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:19,961 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:19,985 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:19,993 p=3366 u=student |  TASK [os_firewall : Set fact r_os_firewall_is_atomic] **********************************************************
2019-03-23 14:27:20,053 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:20,057 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:20,066 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:20,090 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:20,100 p=3366 u=student |  TASK [os_firewall : include_tasks] *****************************************************************************
2019-03-23 14:27:20,203 p=3366 u=student |  included: /usr/share/ansible/openshift-ansible/roles/os_firewall/tasks/firewalld.yml for master.lab.example.com, services.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:27:20,214 p=3366 u=student |  TASK [os_firewall : Fail - Firewalld is not supported on Atomic Host] ******************************************
2019-03-23 14:27:20,259 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:20,259 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:20,259 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:20,267 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:20,276 p=3366 u=student |  TASK [os_firewall : Install firewalld packages] ****************************************************************
2019-03-23 14:27:20,867 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:20,889 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:21,010 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:21,032 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:21,041 p=3366 u=student |  TASK [os_firewall : Ensure iptables services are not enabled] **************************************************
2019-03-23 14:27:21,706 p=3366 u=student |  ok: [services.lab.example.com] => (item=iptables)
2019-03-23 14:27:21,784 p=3366 u=student |  changed: [node1.lab.example.com] => (item=iptables)
2019-03-23 14:27:21,847 p=3366 u=student |  changed: [master.lab.example.com] => (item=iptables)
2019-03-23 14:27:21,866 p=3366 u=student |  changed: [node2.lab.example.com] => (item=iptables)
2019-03-23 14:27:22,166 p=3366 u=student |  ok: [services.lab.example.com] => (item=ip6tables)
2019-03-23 14:27:22,307 p=3366 u=student |  changed: [node1.lab.example.com] => (item=ip6tables)
2019-03-23 14:27:22,332 p=3366 u=student |  changed: [master.lab.example.com] => (item=ip6tables)
2019-03-23 14:27:22,350 p=3366 u=student |  changed: [node2.lab.example.com] => (item=ip6tables)
2019-03-23 14:27:22,370 p=3366 u=student |  TASK [os_firewall : Wait 10 seconds after disabling iptables] **************************************************
2019-03-23 14:27:22,400 p=3366 u=student |  Pausing for 10 seconds
2019-03-23 14:27:22,400 p=3366 u=student |  (ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
2019-03-23 14:27:32,403 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:32,411 p=3366 u=student |  TASK [os_firewall : Start and enable firewalld service] ********************************************************
2019-03-23 14:27:32,926 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:32,932 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:32,942 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:32,953 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:32,964 p=3366 u=student |  TASK [os_firewall : need to pause here, otherwise the firewalld service starting can sometimes cause ssh to fail] ***
2019-03-23 14:27:32,981 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:32,989 p=3366 u=student |  TASK [os_firewall : Restart polkitd] ***************************************************************************
2019-03-23 14:27:33,033 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:33,034 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:33,034 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:33,036 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:33,045 p=3366 u=student |  TASK [os_firewall : Wait for polkit action to have been created] ***********************************************
2019-03-23 14:27:33,486 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:33,517 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:33,568 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:33,569 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:33,577 p=3366 u=student |  TASK [os_firewall : include_tasks] *****************************************************************************
2019-03-23 14:27:33,599 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:33,612 p=3366 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:27:33,622 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:33,627 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:33,636 p=3366 u=student |  PLAY [create oo_hosts_containerized_managed_true host group] ***************************************************
2019-03-23 14:27:33,642 p=3366 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:27:34,098 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:34,115 p=3366 u=student |  TASK [group_by] ************************************************************************************************
2019-03-23 14:27:34,154 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:34,163 p=3366 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_hosts_containerized_managed_true

2019-03-23 14:27:34,168 p=3366 u=student |  PLAY [oo_nodes_to_config:oo_hosts_containerized_managed_true] **************************************************
2019-03-23 14:27:34,179 p=3366 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:27:34,802 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:34,822 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:34,840 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:34,859 p=3366 u=student |  TASK [container_runtime : Setup the docker-storage for overlay] ************************************************
2019-03-23 14:27:34,888 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:34,889 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:34,897 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:34,906 p=3366 u=student |  PLAY [create oo_hosts_containerized_managed_true host group] ***************************************************
2019-03-23 14:27:34,913 p=3366 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:27:35,385 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:35,400 p=3366 u=student |  TASK [group_by] ************************************************************************************************
2019-03-23 14:27:35,430 p=3366 u=student |  ok: [services.lab.example.com]
2019-03-23 14:27:35,442 p=3366 u=student |  PLAY [oo_nodes_to_config:oo_hosts_containerized_managed_true] **************************************************
2019-03-23 14:27:35,454 p=3366 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:27:36,047 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:36,093 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:36,121 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:36,142 p=3366 u=student |  TASK [openshift_excluder : Install excluders] ******************************************************************
2019-03-23 14:27:36,232 p=3366 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/install.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:27:36,244 p=3366 u=student |  TASK [openshift_excluder : Install docker excluder - yum] ******************************************************
2019-03-23 14:27:42,524 p=3366 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:27:43,087 p=3366 u=student |  changed: [master.lab.example.com]
2019-03-23 14:27:43,190 p=3366 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:27:43,198 p=3366 u=student |  TASK [openshift_excluder : Install docker excluder - dnf] ******************************************************
2019-03-23 14:27:43,242 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:43,250 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:43,257 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:43,268 p=3366 u=student |  TASK [openshift_excluder : Install openshift excluder - yum] ***************************************************
2019-03-23 14:27:43,306 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:43,311 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:43,315 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:43,325 p=3366 u=student |  TASK [openshift_excluder : Install openshift excluder - dnf] ***************************************************
2019-03-23 14:27:43,357 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:43,362 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:43,370 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:43,378 p=3366 u=student |  TASK [openshift_excluder : set_fact] ***************************************************************************
2019-03-23 14:27:43,425 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:43,442 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:43,454 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:43,463 p=3366 u=student |  TASK [openshift_excluder : Enable excluders] *******************************************************************
2019-03-23 14:27:43,545 p=3366 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/exclude.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:27:43,560 p=3366 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-23 14:27:43,939 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:43,941 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:43,944 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:43,953 p=3366 u=student |  TASK [openshift_excluder : Enable docker excluder] *************************************************************
2019-03-23 14:27:44,377 p=3366 u=student |  changed: [master.lab.example.com]
2019-03-23 14:27:44,439 p=3366 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:27:44,452 p=3366 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:27:44,460 p=3366 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-23 14:27:44,802 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:44,855 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:44,867 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:44,876 p=3366 u=student |  TASK [openshift_excluder : Enable openshift excluder] **********************************************************
2019-03-23 14:27:44,903 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:44,904 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:44,911 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:44,920 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:45,001 p=3366 u=student |  included: /usr/share/ansible/openshift-ansible/roles/container_runtime/tasks/common/pre.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:27:45,014 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:45,040 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:45,041 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:45,049 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:45,059 p=3366 u=student |  TASK [container_runtime : Add enterprise registry, if necessary] ***********************************************
2019-03-23 14:27:45,112 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:45,145 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:45,156 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:45,166 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:45,205 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:45,211 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:45,215 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:45,226 p=3366 u=student |  TASK [container_runtime : Get current installed Docker version] ************************************************
2019-03-23 14:27:45,798 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:45,903 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:45,905 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:45,914 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:45,996 p=3366 u=student |  included: /usr/share/ansible/openshift-ansible/roles/container_runtime/tasks/docker_sanity.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:27:46,011 p=3366 u=student |  TASK [container_runtime : Error out if Docker pre-installed but too old] ***************************************
2019-03-23 14:27:46,046 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:46,047 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:46,052 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:46,062 p=3366 u=student |  TASK [container_runtime : Error out if requested Docker is too old] ********************************************
2019-03-23 14:27:46,091 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:46,100 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:46,108 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:46,120 p=3366 u=student |  TASK [container_runtime : Fail if Docker version requested but downgrade is required] **************************
2019-03-23 14:27:46,155 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:46,163 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:46,169 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:46,179 p=3366 u=student |  TASK [container_runtime : Error out if attempting to upgrade Docker across the 1.10 boundary] ******************
2019-03-23 14:27:46,219 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:46,220 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:46,232 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:46,242 p=3366 u=student |  TASK [container_runtime : Install Docker] **********************************************************************
2019-03-23 14:27:46,285 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:46,285 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:46,301 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:46,310 p=3366 u=student |  TASK [container_runtime : Ensure docker.service.d directory exists] ********************************************
2019-03-23 14:27:46,337 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:46,348 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:46,356 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:46,365 p=3366 u=student |  TASK [container_runtime : Configure Docker service unit file] **************************************************
2019-03-23 14:27:46,393 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:46,401 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:46,410 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:46,420 p=3366 u=student |  TASK [container_runtime : stat] ********************************************************************************
2019-03-23 14:27:46,797 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:46,808 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:46,813 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:46,822 p=3366 u=student |  TASK [container_runtime : Set registry params] *****************************************************************
2019-03-23 14:27:47,369 p=3366 u=student |  changed: [node1.lab.example.com] => (item={u'reg_conf_var': u'ADD_REGISTRY', u'reg_flag': u'--add-registry', u'reg_fact_val': [u'registry.lab.example.com', u'registry.access.redhat.com']})
2019-03-23 14:27:47,424 p=3366 u=student |  changed: [node2.lab.example.com] => (item={u'reg_conf_var': u'ADD_REGISTRY', u'reg_flag': u'--add-registry', u'reg_fact_val': [u'registry.lab.example.com', u'registry.access.redhat.com']})
2019-03-23 14:27:47,431 p=3366 u=student |  changed: [master.lab.example.com] => (item={u'reg_conf_var': u'ADD_REGISTRY', u'reg_flag': u'--add-registry', u'reg_fact_val': [u'registry.lab.example.com', u'registry.access.redhat.com']})
2019-03-23 14:27:47,754 p=3366 u=student |  changed: [node1.lab.example.com] => (item={u'reg_conf_var': u'BLOCK_REGISTRY', u'reg_flag': u'--block-registry', u'reg_fact_val': [u'registry.access.redhat.com', u'docker.io']})
2019-03-23 14:27:47,755 p=3366 u=student |  skipping: [node1.lab.example.com] => (item={u'reg_conf_var': u'INSECURE_REGISTRY', u'reg_flag': u'--insecure-registry', u'reg_fact_val': []}) 
2019-03-23 14:27:47,765 p=3366 u=student |  changed: [master.lab.example.com] => (item={u'reg_conf_var': u'BLOCK_REGISTRY', u'reg_flag': u'--block-registry', u'reg_fact_val': [u'registry.access.redhat.com', u'docker.io']})
2019-03-23 14:27:47,766 p=3366 u=student |  changed: [node2.lab.example.com] => (item={u'reg_conf_var': u'BLOCK_REGISTRY', u'reg_flag': u'--block-registry', u'reg_fact_val': [u'registry.access.redhat.com', u'docker.io']})
2019-03-23 14:27:47,767 p=3366 u=student |  skipping: [node2.lab.example.com] => (item={u'reg_conf_var': u'INSECURE_REGISTRY', u'reg_flag': u'--insecure-registry', u'reg_fact_val': []}) 
2019-03-23 14:27:47,773 p=3366 u=student |  skipping: [master.lab.example.com] => (item={u'reg_conf_var': u'INSECURE_REGISTRY', u'reg_flag': u'--insecure-registry', u'reg_fact_val': []}) 
2019-03-23 14:27:47,785 p=3366 u=student |  TASK [container_runtime : Place additional/blocked/insecure registries in /etc/containers/registries.conf] *****
2019-03-23 14:27:47,810 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:47,820 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:47,827 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:47,836 p=3366 u=student |  TASK [container_runtime : Set Proxy Settings] ******************************************************************
2019-03-23 14:27:47,900 p=3366 u=student |  skipping: [master.lab.example.com] => (item={u'reg_conf_var': u'HTTP_PROXY', u'reg_fact_val': u''}) 
2019-03-23 14:27:47,920 p=3366 u=student |  skipping: [node1.lab.example.com] => (item={u'reg_conf_var': u'HTTP_PROXY', u'reg_fact_val': u''}) 
2019-03-23 14:27:47,933 p=3366 u=student |  skipping: [node1.lab.example.com] => (item={u'reg_conf_var': u'HTTPS_PROXY', u'reg_fact_val': u''}) 
2019-03-23 14:27:47,934 p=3366 u=student |  skipping: [node1.lab.example.com] => (item={u'reg_conf_var': u'NO_PROXY', u'reg_fact_val': u''}) 
2019-03-23 14:27:47,935 p=3366 u=student |  skipping: [master.lab.example.com] => (item={u'reg_conf_var': u'HTTPS_PROXY', u'reg_fact_val': u''}) 
2019-03-23 14:27:47,936 p=3366 u=student |  skipping: [master.lab.example.com] => (item={u'reg_conf_var': u'NO_PROXY', u'reg_fact_val': u''}) 
2019-03-23 14:27:47,954 p=3366 u=student |  skipping: [node2.lab.example.com] => (item={u'reg_conf_var': u'HTTP_PROXY', u'reg_fact_val': u''}) 
2019-03-23 14:27:47,963 p=3366 u=student |  skipping: [node2.lab.example.com] => (item={u'reg_conf_var': u'HTTPS_PROXY', u'reg_fact_val': u''}) 
2019-03-23 14:27:47,979 p=3366 u=student |  skipping: [node2.lab.example.com] => (item={u'reg_conf_var': u'NO_PROXY', u'reg_fact_val': u''}) 
2019-03-23 14:27:47,990 p=3366 u=student |  TASK [container_runtime : Set various Docker options] **********************************************************
2019-03-23 14:27:48,386 p=3366 u=student |  changed: [master.lab.example.com]
2019-03-23 14:27:48,402 p=3366 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:27:48,414 p=3366 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:27:48,423 p=3366 u=student |  TASK [container_runtime : stat] ********************************************************************************
2019-03-23 14:27:48,769 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:48,807 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:48,812 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:48,821 p=3366 u=student |  TASK [container_runtime : Configure Docker Network OPTIONS] ****************************************************
2019-03-23 14:27:49,218 p=3366 u=student |  changed: [master.lab.example.com]
2019-03-23 14:27:49,243 p=3366 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:27:49,259 p=3366 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:27:49,269 p=3366 u=student |  TASK [container_runtime : Detect if docker is already started] *************************************************
2019-03-23 14:27:49,640 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:49,654 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:49,677 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:49,687 p=3366 u=student |  TASK [container_runtime : Start the Docker service] ************************************************************
2019-03-23 14:27:50,146 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:50,164 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:50,173 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:50,187 p=3366 u=student |  TASK [container_runtime : set_fact] ****************************************************************************
2019-03-23 14:27:50,229 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:50,253 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:50,270 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:50,281 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:50,375 p=3366 u=student |  included: /usr/share/ansible/openshift-ansible/roles/container_runtime/tasks/common/post.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:27:50,390 p=3366 u=student |  TASK [container_runtime : Ensure /var/lib/containers exists] ***************************************************
2019-03-23 14:27:50,761 p=3366 u=student |  changed: [master.lab.example.com]
2019-03-23 14:27:50,762 p=3366 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:27:50,763 p=3366 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:27:50,772 p=3366 u=student |  TASK [container_runtime : Fix SELinux Permissions on /var/lib/containers] **************************************
2019-03-23 14:27:51,165 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:51,172 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:51,178 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:51,179 p=3366 u=student |  RUNNING HANDLER [container_runtime : restart container runtime] ************************************************
2019-03-23 14:27:54,369 p=3366 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:27:54,558 p=3366 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:27:54,574 p=3366 u=student |  changed: [master.lab.example.com]
2019-03-23 14:27:54,586 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:54,732 p=3366 u=student |  included: /usr/share/ansible/openshift-ansible/roles/container_runtime/tasks/registry_auth.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:27:54,745 p=3366 u=student |  TASK [container_runtime : Check for credentials file for registry auth] ****************************************
2019-03-23 14:27:54,776 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:54,777 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:54,782 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:54,792 p=3366 u=student |  TASK [container_runtime : Create credentials for docker cli registry auth] *************************************
2019-03-23 14:27:54,824 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:54,825 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:54,833 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:54,843 p=3366 u=student |  TASK [container_runtime : Create credentials for docker cli registry auth (alternative)] ***********************
2019-03-23 14:27:54,876 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:54,877 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:54,881 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:54,890 p=3366 u=student |  TASK [container_runtime : stat the docker data dir] ************************************************************
2019-03-23 14:27:55,334 p=3366 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:27:55,335 p=3366 u=student |  ok: [master.lab.example.com]
2019-03-23 14:27:55,338 p=3366 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:27:55,346 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:55,377 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:55,377 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:55,383 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:55,393 p=3366 u=student |  TASK [container_runtime : Fail quickly if openshift_docker_options are set] ************************************
2019-03-23 14:27:55,427 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:55,428 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:55,434 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:55,442 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:55,473 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:55,473 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:55,481 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:55,490 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:55,524 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:55,524 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:55,532 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:55,541 p=3366 u=student |  TASK [container_runtime : Install Docker so we can use the client] *********************************************
2019-03-23 14:27:55,574 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:55,575 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:55,582 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:55,591 p=3366 u=student |  TASK [container_runtime : Disable Docker] **********************************************************************
2019-03-23 14:27:55,619 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:55,626 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:55,633 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:55,642 p=3366 u=student |  TASK [container_runtime : Ensure proxies are in the atomic.conf] ***********************************************
2019-03-23 14:27:55,675 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:55,675 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:55,681 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:55,690 p=3366 u=student |  TASK [container_runtime : debug] *******************************************************************************
2019-03-23 14:27:55,723 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:55,723 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:55,731 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:55,740 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:55,775 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:55,776 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:55,781 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:55,790 p=3366 u=student |  TASK [container_runtime : Pre-pull Container Engine System Container image] ************************************
2019-03-23 14:27:55,818 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:55,822 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:55,831 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:55,839 p=3366 u=student |  TASK [container_runtime : Ensure container-engine.service.d directory exists] **********************************
2019-03-23 14:27:55,873 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:55,874 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:55,880 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:55,890 p=3366 u=student |  TASK [container_runtime : Ensure /etc/docker directory exists] *************************************************
2019-03-23 14:27:55,921 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:55,922 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:55,929 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:55,938 p=3366 u=student |  TASK [container_runtime : Install Container Engine System Container] *******************************************
2019-03-23 14:27:55,967 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:55,969 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:55,981 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:55,990 p=3366 u=student |  TASK [container_runtime : Configure Container Engine Service File] *********************************************
2019-03-23 14:27:56,022 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,023 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,030 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,039 p=3366 u=student |  TASK [container_runtime : Configure Container Engine] **********************************************************
2019-03-23 14:27:56,074 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,075 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,088 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,098 p=3366 u=student |  TASK [container_runtime : Start the Container Engine service] **************************************************
2019-03-23 14:27:56,129 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,137 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,144 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,154 p=3366 u=student |  TASK [container_runtime : set_fact] ****************************************************************************
2019-03-23 14:27:56,191 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,192 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,197 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,207 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:56,244 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,244 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,254 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,264 p=3366 u=student |  TASK [container_runtime : Check we are not using node as a Docker container with CRI-O] ************************
2019-03-23 14:27:56,298 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,299 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,307 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,317 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:56,349 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,350 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,356 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,366 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:56,395 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,396 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,405 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,415 p=3366 u=student |  TASK [container_runtime : Check that overlay is in the kernel] *************************************************
2019-03-23 14:27:56,448 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,449 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,455 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,464 p=3366 u=student |  TASK [container_runtime : Add overlay to modprobe.d] ***********************************************************
2019-03-23 14:27:56,493 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,497 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,503 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,512 p=3366 u=student |  TASK [container_runtime : Manually modprobe overlay into the kernel] *******************************************
2019-03-23 14:27:56,547 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,547 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,553 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,563 p=3366 u=student |  TASK [container_runtime : Enable and start systemd-modules-load] ***********************************************
2019-03-23 14:27:56,598 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,599 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,603 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,613 p=3366 u=student |  TASK [container_runtime : Ensure proxies are in the atomic.conf] ***********************************************
2019-03-23 14:27:56,644 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,644 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,651 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,661 p=3366 u=student |  TASK [container_runtime : debug] *******************************************************************************
2019-03-23 14:27:56,693 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,693 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,700 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,710 p=3366 u=student |  TASK [container_runtime : Pre-pull CRI-O System Container image] ***********************************************
2019-03-23 14:27:56,739 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,740 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,748 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,757 p=3366 u=student |  TASK [container_runtime : Install CRI-O System Container] ******************************************************
2019-03-23 14:27:56,785 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,787 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,798 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,807 p=3366 u=student |  TASK [container_runtime : Remove CRI-O default configuration files] ********************************************
2019-03-23 14:27:56,843 p=3366 u=student |  skipping: [master.lab.example.com] => (item=/etc/cni/net.d/200-loopback.conf) 
2019-03-23 14:27:56,844 p=3366 u=student |  skipping: [master.lab.example.com] => (item=/etc/cni/net.d/100-crio-bridge.conf) 
2019-03-23 14:27:56,847 p=3366 u=student |  skipping: [node1.lab.example.com] => (item=/etc/cni/net.d/200-loopback.conf) 
2019-03-23 14:27:56,847 p=3366 u=student |  skipping: [node1.lab.example.com] => (item=/etc/cni/net.d/100-crio-bridge.conf) 
2019-03-23 14:27:56,851 p=3366 u=student |  skipping: [node2.lab.example.com] => (item=/etc/cni/net.d/200-loopback.conf) 
2019-03-23 14:27:56,855 p=3366 u=student |  skipping: [node2.lab.example.com] => (item=/etc/cni/net.d/100-crio-bridge.conf) 
2019-03-23 14:27:56,864 p=3366 u=student |  TASK [container_runtime : Create the CRI-O configuration] ******************************************************
2019-03-23 14:27:56,896 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,896 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,903 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,912 p=3366 u=student |  TASK [container_runtime : Ensure CNI configuration directory exists] *******************************************
2019-03-23 14:27:56,942 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:56,942 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:56,951 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:56,960 p=3366 u=student |  TASK [container_runtime : Add iptables allow rules] ************************************************************
2019-03-23 14:27:56,993 p=3366 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-23 14:27:57,001 p=3366 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-23 14:27:57,007 p=3366 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-23 14:27:57,017 p=3366 u=student |  TASK [container_runtime : Remove iptables rules] ***************************************************************
2019-03-23 14:27:57,067 p=3366 u=student |  TASK [container_runtime : Add firewalld allow rules] ***********************************************************
2019-03-23 14:27:57,109 p=3366 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-23 14:27:57,110 p=3366 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-23 14:27:57,124 p=3366 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-23 14:27:57,137 p=3366 u=student |  TASK [container_runtime : Remove firewalld allow rules] ********************************************************
2019-03-23 14:27:57,196 p=3366 u=student |  TASK [container_runtime : Configure the CNI network] ***********************************************************
2019-03-23 14:27:57,226 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,234 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,242 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,253 p=3366 u=student |  TASK [container_runtime : Create /etc/sysconfig/crio-storage] **************************************************
2019-03-23 14:27:57,289 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,290 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,296 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,307 p=3366 u=student |  TASK [container_runtime : Create /etc/sysconfig/crio-network] **************************************************
2019-03-23 14:27:57,335 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,339 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,348 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,357 p=3366 u=student |  TASK [container_runtime : Start the CRI-O service] *************************************************************
2019-03-23 14:27:57,390 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,391 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,400 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,409 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:57,438 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,445 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,450 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,459 p=3366 u=student |  TASK [container_runtime : Fail if Atomic Host since this is an rpm request] ************************************
2019-03-23 14:27:57,487 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,492 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,500 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,510 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:57,538 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,546 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,550 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,560 p=3366 u=student |  TASK [container_runtime : Check that overlay is in the kernel] *************************************************
2019-03-23 14:27:57,591 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,592 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,599 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,608 p=3366 u=student |  TASK [container_runtime : Add overlay to modprobe.d] ***********************************************************
2019-03-23 14:27:57,641 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,642 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,650 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,658 p=3366 u=student |  TASK [container_runtime : Manually modprobe overlay into the kernel] *******************************************
2019-03-23 14:27:57,689 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,690 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,698 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,707 p=3366 u=student |  TASK [container_runtime : Enable and start systemd-modules-load] ***********************************************
2019-03-23 14:27:57,738 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,742 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,747 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,758 p=3366 u=student |  TASK [container_runtime : Install cri-o] ***********************************************************************
2019-03-23 14:27:57,789 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,790 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,798 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,807 p=3366 u=student |  TASK [container_runtime : Remove CRI-O default configuration files] ********************************************
2019-03-23 14:27:57,844 p=3366 u=student |  skipping: [master.lab.example.com] => (item=/etc/cni/net.d/200-loopback.conf) 
2019-03-23 14:27:57,845 p=3366 u=student |  skipping: [master.lab.example.com] => (item=/etc/cni/net.d/100-crio-bridge.conf) 
2019-03-23 14:27:57,850 p=3366 u=student |  skipping: [node1.lab.example.com] => (item=/etc/cni/net.d/200-loopback.conf) 
2019-03-23 14:27:57,851 p=3366 u=student |  skipping: [node1.lab.example.com] => (item=/etc/cni/net.d/100-crio-bridge.conf) 
2019-03-23 14:27:57,854 p=3366 u=student |  skipping: [node2.lab.example.com] => (item=/etc/cni/net.d/200-loopback.conf) 
2019-03-23 14:27:57,857 p=3366 u=student |  skipping: [node2.lab.example.com] => (item=/etc/cni/net.d/100-crio-bridge.conf) 
2019-03-23 14:27:57,867 p=3366 u=student |  TASK [container_runtime : Create the CRI-O configuration] ******************************************************
2019-03-23 14:27:57,899 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,900 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,907 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,916 p=3366 u=student |  TASK [container_runtime : Ensure CNI configuration directory exists] *******************************************
2019-03-23 14:27:57,952 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:57,953 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:57,960 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:57,969 p=3366 u=student |  TASK [container_runtime : Add iptables allow rules] ************************************************************
2019-03-23 14:27:58,015 p=3366 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-23 14:27:58,016 p=3366 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-23 14:27:58,018 p=3366 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-23 14:27:58,028 p=3366 u=student |  TASK [container_runtime : Remove iptables rules] ***************************************************************
2019-03-23 14:27:58,079 p=3366 u=student |  TASK [container_runtime : Add firewalld allow rules] ***********************************************************
2019-03-23 14:27:58,126 p=3366 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-23 14:27:58,127 p=3366 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-23 14:27:58,135 p=3366 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'10010/tcp', u'service': u'crio'}) 
2019-03-23 14:27:58,145 p=3366 u=student |  TASK [container_runtime : Remove firewalld allow rules] ********************************************************
2019-03-23 14:27:58,199 p=3366 u=student |  TASK [container_runtime : Configure the CNI network] ***********************************************************
2019-03-23 14:27:58,234 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:58,235 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:58,243 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:58,254 p=3366 u=student |  TASK [container_runtime : Create /etc/sysconfig/crio-network] **************************************************
2019-03-23 14:27:58,289 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:58,290 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:58,299 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:58,308 p=3366 u=student |  TASK [container_runtime : Start the CRI-O service] *************************************************************
2019-03-23 14:27:58,341 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:58,341 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:58,347 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:58,356 p=3366 u=student |  TASK [container_runtime : include_tasks] ***********************************************************************
2019-03-23 14:27:58,388 p=3366 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:27:58,389 p=3366 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:27:58,395 p=3366 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:27:58,397 p=3366 u=student |  PLAY RECAP *****************************************************************************************************
2019-03-23 14:27:58,397 p=3366 u=student |  localhost                  : ok=12   changed=0    unreachable=0    failed=0   
2019-03-23 14:27:58,397 p=3366 u=student |  master.lab.example.com     : ok=67   changed=12   unreachable=0    failed=0   
2019-03-23 14:27:58,397 p=3366 u=student |  node1.lab.example.com      : ok=60   changed=12   unreachable=0    failed=0   
2019-03-23 14:27:58,397 p=3366 u=student |  node2.lab.example.com      : ok=60   changed=12   unreachable=0    failed=0   
2019-03-23 14:27:58,397 p=3366 u=student |  services.lab.example.com   : ok=36   changed=2    unreachable=0    failed=0   
2019-03-23 14:27:58,398 p=3366 u=student |  workstation.lab.example.com : ok=2    changed=0    unreachable=0    failed=0   
2019-03-23 14:27:58,398 p=3366 u=student |  INSTALLER STATUS ***********************************************************************************************
2019-03-23 14:27:58,401 p=3366 u=student |  Initialization             : Complete (0:00:14)
2019-03-23 14:28:18,457 p=5597 u=student |  PLAY [Initialization Checkpoint Start] *************************************************************************
2019-03-23 14:28:18,468 p=5597 u=student |  TASK [Set install initialization 'In Progress'] ****************************************************************
2019-03-23 14:28:18,509 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:28:18,515 p=5597 u=student |  PLAY [Populate config host groups] *****************************************************************************
2019-03-23 14:28:18,522 p=5597 u=student |  TASK [Load group name mapping variables] ***********************************************************************
2019-03-23 14:28:18,542 p=5597 u=student |  ok: [localhost]
2019-03-23 14:28:18,548 p=5597 u=student |  TASK [Evaluate groups - g_etcd_hosts or g_new_etcd_hosts required] *********************************************
2019-03-23 14:28:18,569 p=5597 u=student |  skipping: [localhost]
2019-03-23 14:28:18,573 p=5597 u=student |  TASK [Evaluate groups - g_master_hosts or g_new_master_hosts required] *****************************************
2019-03-23 14:28:18,593 p=5597 u=student |  skipping: [localhost]
2019-03-23 14:28:18,598 p=5597 u=student |  TASK [Evaluate groups - g_node_hosts or g_new_node_hosts required] *********************************************
2019-03-23 14:28:18,616 p=5597 u=student |  skipping: [localhost]
2019-03-23 14:28:18,621 p=5597 u=student |  TASK [Evaluate groups - g_lb_hosts required] *******************************************************************
2019-03-23 14:28:18,638 p=5597 u=student |  skipping: [localhost]
2019-03-23 14:28:18,643 p=5597 u=student |  TASK [Evaluate groups - g_nfs_hosts required] ******************************************************************
2019-03-23 14:28:18,660 p=5597 u=student |  skipping: [localhost]
2019-03-23 14:28:18,664 p=5597 u=student |  TASK [Evaluate groups - g_nfs_hosts is single host] ************************************************************
2019-03-23 14:28:18,682 p=5597 u=student |  skipping: [localhost]
2019-03-23 14:28:18,686 p=5597 u=student |  TASK [Evaluate groups - g_glusterfs_hosts required] ************************************************************
2019-03-23 14:28:18,704 p=5597 u=student |  skipping: [localhost]
2019-03-23 14:28:18,708 p=5597 u=student |  TASK [Evaluate groups - Fail if no etcd hosts group is defined] ************************************************
2019-03-23 14:28:18,726 p=5597 u=student |  skipping: [localhost]
2019-03-23 14:28:18,731 p=5597 u=student |  TASK [Evaluate oo_all_hosts] ***********************************************************************************
2019-03-23 14:28:18,775 p=5597 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:28:18,780 p=5597 u=student |  ok: [localhost] => (item=node1.lab.example.com)
2019-03-23 14:28:18,785 p=5597 u=student |  ok: [localhost] => (item=node2.lab.example.com)
2019-03-23 14:28:18,792 p=5597 u=student |  ok: [localhost] => (item=services.lab.example.com)
2019-03-23 14:28:18,799 p=5597 u=student |  TASK [Evaluate oo_masters] *************************************************************************************
2019-03-23 14:28:18,828 p=5597 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:28:18,834 p=5597 u=student |  TASK [Evaluate oo_first_master] ********************************************************************************
2019-03-23 14:28:18,861 p=5597 u=student |  ok: [localhost]
2019-03-23 14:28:18,865 p=5597 u=student |  TASK [Evaluate oo_new_etcd_to_config] **************************************************************************
2019-03-23 14:28:18,887 p=5597 u=student |  TASK [Evaluate oo_masters_to_config] ***************************************************************************
2019-03-23 14:28:18,915 p=5597 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:28:18,922 p=5597 u=student |  TASK [Evaluate oo_etcd_to_config] ******************************************************************************
2019-03-23 14:28:18,950 p=5597 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:28:18,955 p=5597 u=student |  TASK [Evaluate oo_first_etcd] **********************************************************************************
2019-03-23 14:28:18,982 p=5597 u=student |  ok: [localhost]
2019-03-23 14:28:18,987 p=5597 u=student |  TASK [Evaluate oo_etcd_hosts_to_upgrade] ***********************************************************************
2019-03-23 14:28:19,012 p=5597 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:28:19,019 p=5597 u=student |  TASK [Evaluate oo_etcd_hosts_to_backup] ************************************************************************
2019-03-23 14:28:19,044 p=5597 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:28:19,051 p=5597 u=student |  TASK [Evaluate oo_nodes_to_config] *****************************************************************************
2019-03-23 14:28:19,087 p=5597 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:28:19,093 p=5597 u=student |  ok: [localhost] => (item=node1.lab.example.com)
2019-03-23 14:28:19,100 p=5597 u=student |  ok: [localhost] => (item=node2.lab.example.com)
2019-03-23 14:28:19,107 p=5597 u=student |  TASK [Add master to oo_nodes_to_config] ************************************************************************
2019-03-23 14:28:19,134 p=5597 u=student |  skipping: [localhost] => (item=master.lab.example.com) 
2019-03-23 14:28:19,140 p=5597 u=student |  TASK [Evaluate oo_lb_to_config] ********************************************************************************
2019-03-23 14:28:19,164 p=5597 u=student |  TASK [Evaluate oo_nfs_to_config] *******************************************************************************
2019-03-23 14:28:19,197 p=5597 u=student |  ok: [localhost] => (item=services.lab.example.com)
2019-03-23 14:28:19,203 p=5597 u=student |  TASK [Evaluate oo_glusterfs_to_config] *************************************************************************
2019-03-23 14:28:19,228 p=5597 u=student |  TASK [Evaluate oo_etcd_to_migrate] *****************************************************************************
2019-03-23 14:28:19,258 p=5597 u=student |  ok: [localhost] => (item=master.lab.example.com)
2019-03-23 14:28:19,268 p=5597 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_lb_to_config

2019-03-23 14:28:19,270 p=5597 u=student |  PLAY [Ensure that all non-node hosts are accessible] ***********************************************************
2019-03-23 14:28:19,278 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:28:20,025 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:20,048 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:20,076 p=5597 u=student |  PLAY [Initialize basic host facts] *****************************************************************************
2019-03-23 14:28:20,085 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:28:20,804 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:20,854 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:20,895 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:20,915 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:20,936 p=5597 u=student |  TASK [openshift_sanitize_inventory : include_tasks] ************************************************************
2019-03-23 14:28:21,019 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_sanitize_inventory/tasks/deprecations.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com, services.lab.example.com
2019-03-23 14:28:21,039 p=5597 u=student |  TASK [openshift_sanitize_inventory : Check for usage of deprecated variables] **********************************
2019-03-23 14:28:21,152 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:21,153 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:21,169 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:21,171 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:21,180 p=5597 u=student |  TASK [openshift_sanitize_inventory : debug] ********************************************************************
2019-03-23 14:28:21,224 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:21,225 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:21,230 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:21,238 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:21,249 p=5597 u=student |  TASK [openshift_sanitize_inventory : set_stats] ****************************************************************
2019-03-23 14:28:21,293 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:21,294 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:21,298 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:21,306 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:21,315 p=5597 u=student |  TASK [openshift_sanitize_inventory : Assign deprecated variables to correct counterparts] **********************
2019-03-23 14:28:21,431 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_sanitize_inventory/tasks/__deprecations_logging.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com, services.lab.example.com
2019-03-23 14:28:21,444 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_sanitize_inventory/tasks/__deprecations_metrics.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com, services.lab.example.com
2019-03-23 14:28:21,454 p=5597 u=student |  TASK [openshift_sanitize_inventory : conditional_set_fact] *****************************************************
2019-03-23 14:28:21,541 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:21,541 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:21,560 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:21,577 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:21,586 p=5597 u=student |  TASK [openshift_sanitize_inventory : set_fact] *****************************************************************
2019-03-23 14:28:21,636 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:21,667 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:21,672 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:21,684 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:21,693 p=5597 u=student |  TASK [openshift_sanitize_inventory : conditional_set_fact] *****************************************************
2019-03-23 14:28:21,751 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:21,785 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:21,793 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:21,815 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:21,824 p=5597 u=student |  TASK [openshift_sanitize_inventory : Standardize on latest variable names] *************************************
2019-03-23 14:28:21,888 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:21,894 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:21,900 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:21,915 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:21,924 p=5597 u=student |  TASK [openshift_sanitize_inventory : Normalize openshift_release] **********************************************
2019-03-23 14:28:21,984 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:21,992 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:22,004 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:22,018 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:22,027 p=5597 u=student |  TASK [openshift_sanitize_inventory : Abort when openshift_release is invalid] **********************************
2019-03-23 14:28:22,073 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:22,074 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:22,082 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:22,083 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:22,092 p=5597 u=student |  TASK [openshift_sanitize_inventory : include_tasks] ************************************************************
2019-03-23 14:28:22,141 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:22,142 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:22,146 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:22,154 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:22,163 p=5597 u=student |  TASK [openshift_sanitize_inventory : Ensure clusterid is set along with the cloudprovider] *********************
2019-03-23 14:28:22,212 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:22,213 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:22,216 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:22,226 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:22,237 p=5597 u=student |  TASK [openshift_sanitize_inventory : Ensure ansible_service_broker_remove and ansible_service_broker_install are mutually exclusive] ***
2019-03-23 14:28:22,291 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:22,292 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:22,293 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:22,294 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:22,305 p=5597 u=student |  TASK [openshift_sanitize_inventory : Ensure template_service_broker_remove and template_service_broker_install are mutually exclusive] ***
2019-03-23 14:28:22,332 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:22,351 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:22,352 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:22,358 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:22,367 p=5597 u=student |  TASK [openshift_sanitize_inventory : Ensure that all requires vsphere configuration variables are set] *********
2019-03-23 14:28:22,415 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:22,416 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:22,416 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:22,419 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:22,429 p=5597 u=student |  TASK [openshift_sanitize_inventory : Ensure removed web console extension variables are not set] ***************
2019-03-23 14:28:22,455 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:22,471 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:22,473 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:22,485 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:22,495 p=5597 u=student |  TASK [openshift_sanitize_inventory : Ensure that web console port matches API server port] *********************
2019-03-23 14:28:22,522 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:22,545 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:22,549 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:22,553 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:22,561 p=5597 u=student |  TASK [Detecting Operating System from ostree_booted] ***********************************************************
2019-03-23 14:28:23,034 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:23,055 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:23,060 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:23,073 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:23,082 p=5597 u=student |  TASK [set openshift_deployment_type if unset] ******************************************************************
2019-03-23 14:28:23,127 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:23,128 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:23,132 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:23,141 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:23,151 p=5597 u=student |  TASK [initialize_facts set fact openshift_is_atomic and openshift_is_containerized] ****************************
2019-03-23 14:28:23,221 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:23,228 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:23,238 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:23,258 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:23,267 p=5597 u=student |  TASK [Set use_crio to True if cri-o rpm is requested] **********************************************************
2019-03-23 14:28:23,311 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:23,312 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:23,314 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:23,326 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:23,334 p=5597 u=student |  TASK [Determine Atomic Host Docker Version] ********************************************************************
2019-03-23 14:28:23,377 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:23,377 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:23,378 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:23,387 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:23,396 p=5597 u=student |  TASK [assert atomic host docker version is 1.12 or later] ******************************************************
2019-03-23 14:28:23,443 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:23,444 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:23,445 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:23,447 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:23,453 p=5597 u=student |  PLAY [Initialize special first-master variables] ***************************************************************
2019-03-23 14:28:23,460 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:28:23,919 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:23,941 p=5597 u=student |  TASK [stat] ****************************************************************************************************
2019-03-23 14:28:24,245 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:24,254 p=5597 u=student |  TASK [slurp] ***************************************************************************************************
2019-03-23 14:28:24,274 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:24,283 p=5597 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-23 14:28:24,303 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:24,312 p=5597 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-23 14:28:24,344 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:24,351 p=5597 u=student |  PLAY [Disable web console if required] *************************************************************************
2019-03-23 14:28:24,360 p=5597 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-23 14:28:24,376 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:24,385 p=5597 u=student |  PLAY [Install packages necessary for installer] ****************************************************************
2019-03-23 14:28:24,394 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:28:24,433 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:24,434 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:24,442 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:24,446 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:24,455 p=5597 u=student |  TASK [Ensure openshift-ansible installer package deps are installed] *******************************************
2019-03-23 14:28:24,522 p=5597 u=student |  skipping: [master.lab.example.com] => (item=iproute) 
2019-03-23 14:28:24,523 p=5597 u=student |  skipping: [master.lab.example.com] => (item=dbus-python) 
2019-03-23 14:28:24,523 p=5597 u=student |  skipping: [master.lab.example.com] => (item=PyYAML) 
2019-03-23 14:28:24,524 p=5597 u=student |  skipping: [master.lab.example.com] => (item=python-ipaddress) 
2019-03-23 14:28:24,524 p=5597 u=student |  skipping: [master.lab.example.com] => (item=yum-utils) 
2019-03-23 14:28:24,526 p=5597 u=student |  skipping: [node2.lab.example.com] => (item=iproute) 
2019-03-23 14:28:24,526 p=5597 u=student |  skipping: [node2.lab.example.com] => (item=dbus-python) 
2019-03-23 14:28:24,526 p=5597 u=student |  skipping: [node2.lab.example.com] => (item=PyYAML) 
2019-03-23 14:28:24,527 p=5597 u=student |  skipping: [node2.lab.example.com] => (item=python-ipaddress) 
2019-03-23 14:28:24,531 p=5597 u=student |  skipping: [node2.lab.example.com] => (item=yum-utils) 
2019-03-23 14:28:24,539 p=5597 u=student |  skipping: [node1.lab.example.com] => (item=iproute) 
2019-03-23 14:28:24,540 p=5597 u=student |  skipping: [node1.lab.example.com] => (item=dbus-python) 
2019-03-23 14:28:24,540 p=5597 u=student |  skipping: [node1.lab.example.com] => (item=PyYAML) 
2019-03-23 14:28:24,541 p=5597 u=student |  skipping: [node1.lab.example.com] => (item=python-ipaddress) 
2019-03-23 14:28:24,547 p=5597 u=student |  skipping: [services.lab.example.com] => (item=iproute) 
2019-03-23 14:28:24,547 p=5597 u=student |  skipping: [node1.lab.example.com] => (item=yum-utils) 
2019-03-23 14:28:24,549 p=5597 u=student |  skipping: [services.lab.example.com] => (item=dbus-python) 
2019-03-23 14:28:24,550 p=5597 u=student |  skipping: [services.lab.example.com] => (item=PyYAML) 
2019-03-23 14:28:24,553 p=5597 u=student |  skipping: [services.lab.example.com] => (item=python-ipaddress) 
2019-03-23 14:28:24,560 p=5597 u=student |  skipping: [services.lab.example.com] => (item=yum-utils) 
2019-03-23 14:28:24,568 p=5597 u=student |  TASK [Ensure various deps for running system containers are installed] *****************************************
2019-03-23 14:28:24,624 p=5597 u=student |  skipping: [master.lab.example.com] => (item=atomic) 
2019-03-23 14:28:24,624 p=5597 u=student |  skipping: [master.lab.example.com] => (item=ostree) 
2019-03-23 14:28:24,625 p=5597 u=student |  skipping: [master.lab.example.com] => (item=runc) 
2019-03-23 14:28:24,626 p=5597 u=student |  skipping: [node1.lab.example.com] => (item=atomic) 
2019-03-23 14:28:24,627 p=5597 u=student |  skipping: [node1.lab.example.com] => (item=ostree) 
2019-03-23 14:28:24,627 p=5597 u=student |  skipping: [node1.lab.example.com] => (item=runc) 
2019-03-23 14:28:24,634 p=5597 u=student |  skipping: [node2.lab.example.com] => (item=atomic) 
2019-03-23 14:28:24,634 p=5597 u=student |  skipping: [node2.lab.example.com] => (item=ostree) 
2019-03-23 14:28:24,634 p=5597 u=student |  skipping: [node2.lab.example.com] => (item=runc) 
2019-03-23 14:28:24,637 p=5597 u=student |  skipping: [services.lab.example.com] => (item=atomic) 
2019-03-23 14:28:24,638 p=5597 u=student |  skipping: [services.lab.example.com] => (item=ostree) 
2019-03-23 14:28:24,638 p=5597 u=student |  skipping: [services.lab.example.com] => (item=runc) 
2019-03-23 14:28:24,647 p=5597 u=student |  PLAY [Initialize cluster facts] ********************************************************************************
2019-03-23 14:28:24,655 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:28:25,332 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:25,369 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:25,397 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:25,415 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:25,437 p=5597 u=student |  TASK [Gather Cluster facts] ************************************************************************************
2019-03-23 14:28:26,515 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:26,707 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:26,742 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:26,769 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:26,779 p=5597 u=student |  TASK [Set fact of no_proxy_internal_hostnames] *****************************************************************
2019-03-23 14:28:26,818 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:26,819 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:26,821 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:26,830 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:26,839 p=5597 u=student |  TASK [Initialize openshift.node.sdn_mtu] ***********************************************************************
2019-03-23 14:28:27,661 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:27,795 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:27,846 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:27,858 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:27,868 p=5597 u=student |  PLAY [Determine openshift_version to configure on first master] ************************************************
2019-03-23 14:28:27,875 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:28:28,364 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:28,385 p=5597 u=student |  TASK [include_role] ********************************************************************************************
2019-03-23 14:28:28,443 p=5597 u=student |  TASK [openshift_version : Use openshift.common.version fact as version to configure if already installed] ******
2019-03-23 14:28:28,481 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:28,490 p=5597 u=student |  TASK [openshift_version : include_tasks] ***********************************************************************
2019-03-23 14:28:28,521 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_version/tasks/first_master_rpm_version.yml for master.lab.example.com
2019-03-23 14:28:28,529 p=5597 u=student |  TASK [openshift_version : Set rpm version to configure if openshift_pkg_version specified] *********************
2019-03-23 14:28:28,545 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:28,553 p=5597 u=student |  TASK [openshift_version : Set openshift_version for rpm installation] ******************************************
2019-03-23 14:28:28,581 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_version/tasks/check_available_rpms.yml for master.lab.example.com
2019-03-23 14:28:28,592 p=5597 u=student |  TASK [openshift_version : Get available atomic-openshift version] **********************************************
2019-03-23 14:28:29,387 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:29,397 p=5597 u=student |  TASK [openshift_version : fail] ********************************************************************************
2019-03-23 14:28:29,413 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:29,422 p=5597 u=student |  TASK [openshift_version : set_fact] ****************************************************************************
2019-03-23 14:28:29,437 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:29,446 p=5597 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-23 14:28:29,479 p=5597 u=student |  ok: [master.lab.example.com] => {
    "msg": "openshift_pkg_version was not defined. Falling back to -3.9.14"
}
2019-03-23 14:28:29,487 p=5597 u=student |  TASK [openshift_version : set_fact] ****************************************************************************
2019-03-23 14:28:29,521 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:29,530 p=5597 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-23 14:28:29,547 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:29,556 p=5597 u=student |  TASK [openshift_version : set_fact] ****************************************************************************
2019-03-23 14:28:29,573 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:29,582 p=5597 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-23 14:28:29,698 p=5597 u=student |  ok: [master.lab.example.com] => {
    "openshift_release": "3.9"
}
2019-03-23 14:28:29,706 p=5597 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-23 14:28:29,820 p=5597 u=student |  ok: [master.lab.example.com] => {
    "openshift_image_tag": "v3.9.14"
}
2019-03-23 14:28:29,829 p=5597 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-23 14:28:29,944 p=5597 u=student |  ok: [master.lab.example.com] => {
    "openshift_pkg_version": "-3.9.14"
}
2019-03-23 14:28:29,953 p=5597 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-23 14:28:30,071 p=5597 u=student |  ok: [master.lab.example.com] => {
    "openshift_version": "3.9.14"
}
2019-03-23 14:28:30,080 p=5597 u=student |  TASK [debug] ***************************************************************************************************
2019-03-23 14:28:30,213 p=5597 u=student |  ok: [master.lab.example.com] => {
    "msg": "openshift_pkg_version set to -3.9.14"
}
2019-03-23 14:28:30,226 p=5597 u=student |  PLAY [Set openshift_version for etcd, node, and master hosts] **************************************************
2019-03-23 14:28:30,235 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:28:30,864 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:30,889 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:30,910 p=5597 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-23 14:28:31,050 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:31,064 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:31,076 p=5597 u=student |  PLAY [Ensure the requested version packages are available.] ****************************************************
2019-03-23 14:28:31,084 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:28:31,750 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:31,771 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:31,792 p=5597 u=student |  TASK [include_role] ********************************************************************************************
2019-03-23 14:28:31,859 p=5597 u=student |  TASK [openshift_version : Check openshift_version for rpm installation] ****************************************
2019-03-23 14:28:31,901 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_version/tasks/check_available_rpms.yml for node1.lab.example.com, node2.lab.example.com
2019-03-23 14:28:31,911 p=5597 u=student |  TASK [openshift_version : Get available atomic-openshift version] **********************************************
2019-03-23 14:28:32,593 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:32,597 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:32,604 p=5597 u=student |  TASK [openshift_version : fail] ********************************************************************************
2019-03-23 14:28:32,629 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:32,639 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:32,646 p=5597 u=student |  TASK [openshift_version : Fail if rpm version and docker image version are different] **************************
2019-03-23 14:28:32,667 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:32,676 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:32,684 p=5597 u=student |  TASK [openshift_version : For an RPM install, abort when the release requested does not match the available version.] ***
2019-03-23 14:28:32,730 p=5597 u=student |  ok: [node1.lab.example.com] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2019-03-23 14:28:32,738 p=5597 u=student |  ok: [node2.lab.example.com] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2019-03-23 14:28:32,746 p=5597 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-23 14:28:32,781 p=5597 u=student |  ok: [node1.lab.example.com] => {
    "openshift_release": "3.9"
}
2019-03-23 14:28:32,791 p=5597 u=student |  ok: [node2.lab.example.com] => {
    "openshift_release": "3.9"
}
2019-03-23 14:28:32,798 p=5597 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-23 14:28:32,833 p=5597 u=student |  ok: [node1.lab.example.com] => {
    "openshift_image_tag": "v3.9.14"
}
2019-03-23 14:28:32,845 p=5597 u=student |  ok: [node2.lab.example.com] => {
    "openshift_image_tag": "v3.9.14"
}
2019-03-23 14:28:32,852 p=5597 u=student |  TASK [openshift_version : debug] *******************************************************************************
2019-03-23 14:28:32,886 p=5597 u=student |  ok: [node1.lab.example.com] => {
    "openshift_pkg_version": "-3.9.14"
}
2019-03-23 14:28:32,897 p=5597 u=student |  ok: [node2.lab.example.com] => {
    "openshift_pkg_version": "-3.9.14"
}
2019-03-23 14:28:32,903 p=5597 u=student |  PLAY [Verify Requirements] *************************************************************************************
2019-03-23 14:28:32,911 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:28:33,418 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:33,440 p=5597 u=student |  TASK [Run variable sanity checks] ******************************************************************************
2019-03-23 14:28:33,653 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:33,658 p=5597 u=student |  PLAY [Initialization Checkpoint End] ***************************************************************************
2019-03-23 14:28:33,663 p=5597 u=student |  TASK [Set install initialization 'Complete'] *******************************************************************
2019-03-23 14:28:33,706 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:28:33,712 p=5597 u=student |  PLAY [Health Check Checkpoint Start] ***************************************************************************
2019-03-23 14:28:33,719 p=5597 u=student |  TASK [Set Health Check 'In Progress'] **************************************************************************
2019-03-23 14:28:33,763 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:28:33,770 p=5597 u=student |  PLAY [OpenShift Health Checks] *********************************************************************************
2019-03-23 14:28:33,779 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:28:34,517 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:28:34,549 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:34,567 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:34,587 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:28:34,614 p=5597 u=student |  TASK [Run health checks (install) - EL] ************************************************************************
2019-03-23 14:28:34,704 p=5597 u=student |  CHECK [docker_storage : node1.lab.example.com] *****************************************************************
2019-03-23 14:28:34,704 p=5597 u=student |  CHECK [docker_storage : services.lab.example.com] **************************************************************
2019-03-23 14:28:34,704 p=5597 u=student |  CHECK [disk_availability : services.lab.example.com] ***********************************************************
2019-03-23 14:28:34,704 p=5597 u=student |  CHECK [disk_availability : node1.lab.example.com] **************************************************************
2019-03-23 14:28:34,704 p=5597 u=student |  CHECK [package_availability : services.lab.example.com] ********************************************************
2019-03-23 14:28:34,704 p=5597 u=student |  CHECK [package_availability : node1.lab.example.com] ***********************************************************
2019-03-23 14:28:34,707 p=5597 u=student |  CHECK [docker_storage : node2.lab.example.com] *****************************************************************
2019-03-23 14:28:34,707 p=5597 u=student |  CHECK [disk_availability : node2.lab.example.com] **************************************************************
2019-03-23 14:28:34,707 p=5597 u=student |  CHECK [package_availability : node2.lab.example.com] ***********************************************************
2019-03-23 14:28:34,710 p=5597 u=student |  CHECK [docker_storage : master.lab.example.com] ****************************************************************
2019-03-23 14:28:34,710 p=5597 u=student |  CHECK [disk_availability : master.lab.example.com] *************************************************************
2019-03-23 14:28:34,710 p=5597 u=student |  CHECK [package_availability : master.lab.example.com] **********************************************************
2019-03-23 14:28:36,432 p=5597 u=student |  CHECK [package_version : node1.lab.example.com] ****************************************************************
2019-03-23 14:28:36,548 p=5597 u=student |  CHECK [package_version : master.lab.example.com] ***************************************************************
2019-03-23 14:28:36,556 p=5597 u=student |  CHECK [package_version : node2.lab.example.com] ****************************************************************
2019-03-23 14:28:37,283 p=5597 u=student |  CHECK [docker_image_availability : node1.lab.example.com] ******************************************************
2019-03-23 14:28:37,389 p=5597 u=student |  CHECK [docker_image_availability : master.lab.example.com] *****************************************************
2019-03-23 14:28:37,420 p=5597 u=student |  CHECK [docker_image_availability : node2.lab.example.com] ******************************************************
2019-03-23 14:28:39,926 p=5597 u=student |  CHECK [package_version : services.lab.example.com] *************************************************************
2019-03-23 14:28:39,927 p=5597 u=student |  CHECK [docker_image_availability : services.lab.example.com] ***************************************************
2019-03-23 14:28:39,927 p=5597 u=student |  CHECK [memory_availability : services.lab.example.com] *********************************************************
2019-03-23 14:28:39,932 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:28:47,257 p=5597 u=student |  CHECK [memory_availability : node1.lab.example.com] ************************************************************
2019-03-23 14:28:47,262 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:28:47,880 p=5597 u=student |  CHECK [memory_availability : node2.lab.example.com] ************************************************************
2019-03-23 14:28:47,883 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:28:48,242 p=5597 u=student |  CHECK [memory_availability : master.lab.example.com] ***********************************************************
2019-03-23 14:28:48,246 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:28:48,256 p=5597 u=student |  TASK [Run health checks (install) - Fedora] ********************************************************************
2019-03-23 14:28:48,301 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:48,302 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:28:48,307 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:28:48,315 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:28:48,321 p=5597 u=student |  PLAY [Health Check Checkpoint End] *****************************************************************************
2019-03-23 14:28:48,327 p=5597 u=student |  TASK [Set Health Check 'Complete'] *****************************************************************************
2019-03-23 14:28:48,368 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:28:48,374 p=5597 u=student |  PLAY [etcd Install Checkpoint Start] ***************************************************************************
2019-03-23 14:28:48,380 p=5597 u=student |  TASK [Set etcd install 'In Progress'] **************************************************************************
2019-03-23 14:28:48,422 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:28:48,429 p=5597 u=student |  PLAY [Generate new etcd CA] ************************************************************************************
2019-03-23 14:28:48,441 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:28:48,922 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:48,944 p=5597 u=student |  TASK [openshift_clock : Determine if chrony is installed] ******************************************************
2019-03-23 14:28:49,293 p=5597 u=student |   [WARNING]: Consider using yum, dnf or zypper module rather than running rpm

2019-03-23 14:28:49,293 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:28:49,303 p=5597 u=student |  TASK [openshift_clock : Install ntp package] *******************************************************************
2019-03-23 14:28:49,322 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:49,332 p=5597 u=student |  TASK [openshift_clock : Start and enable ntpd/chronyd] *********************************************************
2019-03-23 14:28:49,659 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:28:49,680 p=5597 u=student |  TASK [openshift_etcd_facts : Check for CA indicator files] *****************************************************
2019-03-23 14:28:49,979 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/ca', u'master.lab.example.com'])
2019-03-23 14:28:50,279 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/generated_certs', u'master.lab.example.com'])
2019-03-23 14:28:50,291 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:28:50,330 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:50,340 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:28:50,374 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:50,383 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:28:50,400 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:50,409 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:28:50,445 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:50,455 p=5597 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-23 14:28:50,497 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/certificates/deploy_ca.yml for master.lab.example.com
2019-03-23 14:28:50,513 p=5597 u=student |  TASK [etcd : Install openssl] **********************************************************************************
2019-03-23 14:28:50,970 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:28:50,992 p=5597 u=student |  TASK [etcd : file] *********************************************************************************************
2019-03-23 14:28:51,499 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=/etc/etcd/ca/certs)
2019-03-23 14:28:51,770 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=/etc/etcd/ca/crl)
2019-03-23 14:28:52,047 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=/etc/etcd/ca/fragments)
2019-03-23 14:28:52,068 p=5597 u=student |  TASK [etcd : command] ******************************************************************************************
2019-03-23 14:28:52,396 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:28:52,414 p=5597 u=student |  TASK [etcd : template] *****************************************************************************************
2019-03-23 14:28:53,167 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:28:53,188 p=5597 u=student |  TASK [etcd : assemble] *****************************************************************************************
2019-03-23 14:28:53,656 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:28:53,673 p=5597 u=student |  TASK [etcd : Check etcd_ca_db exist] ***************************************************************************
2019-03-23 14:28:53,959 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:28:53,975 p=5597 u=student |  TASK [etcd : Touch etcd_ca_db file] ****************************************************************************
2019-03-23 14:28:54,293 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:28:54,311 p=5597 u=student |  TASK [etcd : copy] *********************************************************************************************
2019-03-23 14:28:54,866 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:28:54,883 p=5597 u=student |  TASK [etcd : Create etcd CA certificate] ***********************************************************************
2019-03-23 14:28:55,872 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:28:55,878 p=5597 u=student |  PLAY [Create etcd server certificates for etcd hosts] **********************************************************
2019-03-23 14:28:55,888 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:28:56,396 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:56,429 p=5597 u=student |  TASK [openshift_etcd_facts : Check for CA indicator files] *****************************************************
2019-03-23 14:28:56,734 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/ca', u'master.lab.example.com'])
2019-03-23 14:28:56,999 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/generated_certs', u'master.lab.example.com'])
2019-03-23 14:28:57,009 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:28:57,046 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:57,056 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:28:57,094 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:28:57,104 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:28:57,122 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:57,133 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:28:57,150 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:28:57,161 p=5597 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-23 14:28:57,196 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/ca.yml for master.lab.example.com
2019-03-23 14:28:57,207 p=5597 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-23 14:28:57,249 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/certificates/deploy_ca.yml for master.lab.example.com
2019-03-23 14:28:57,270 p=5597 u=student |  TASK [etcd : Install openssl] **********************************************************************************
2019-03-23 14:28:57,730 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:28:57,751 p=5597 u=student |  TASK [etcd : file] *********************************************************************************************
2019-03-23 14:28:58,053 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=/etc/etcd/ca/certs)
2019-03-23 14:28:58,443 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=/etc/etcd/ca/crl)
2019-03-23 14:28:58,725 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=/etc/etcd/ca/fragments)
2019-03-23 14:28:58,742 p=5597 u=student |  TASK [etcd : command] ******************************************************************************************
2019-03-23 14:28:59,031 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:28:59,048 p=5597 u=student |  TASK [etcd : template] *****************************************************************************************
2019-03-23 14:28:59,613 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:28:59,630 p=5597 u=student |  TASK [etcd : assemble] *****************************************************************************************
2019-03-23 14:28:59,922 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:28:59,939 p=5597 u=student |  TASK [etcd : Check etcd_ca_db exist] ***************************************************************************
2019-03-23 14:29:00,268 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:00,288 p=5597 u=student |  TASK [etcd : Touch etcd_ca_db file] ****************************************************************************
2019-03-23 14:29:00,308 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:00,326 p=5597 u=student |  TASK [etcd : copy] *********************************************************************************************
2019-03-23 14:29:00,622 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:00,639 p=5597 u=student |  TASK [etcd : Create etcd CA certificate] ***********************************************************************
2019-03-23 14:29:00,930 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:00,939 p=5597 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-23 14:29:00,992 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/certificates/fetch_server_certificates_from_ca.yml for master.lab.example.com
2019-03-23 14:29:01,002 p=5597 u=student |  TASK [etcd : Install etcd] *************************************************************************************
2019-03-23 14:29:04,904 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:04,914 p=5597 u=student |  TASK [etcd : Check status of etcd certificates] ****************************************************************
2019-03-23 14:29:05,255 p=5597 u=student |  ok: [master.lab.example.com] => (item=/etc/etcd/server.crt)
2019-03-23 14:29:05,543 p=5597 u=student |  ok: [master.lab.example.com] => (item=/etc/etcd/peer.crt)
2019-03-23 14:29:05,807 p=5597 u=student |  ok: [master.lab.example.com] => (item=/etc/etcd/ca.crt)
2019-03-23 14:29:05,817 p=5597 u=student |  TASK [etcd : set_fact] *****************************************************************************************
2019-03-23 14:29:05,854 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:05,871 p=5597 u=student |  TASK [etcd : Ensure generated_certs directory present] *********************************************************
2019-03-23 14:29:06,187 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:06,208 p=5597 u=student |  TASK [etcd : Create the server csr] ****************************************************************************
2019-03-23 14:29:06,582 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:06,600 p=5597 u=student |  TASK [etcd : Sign and create the server crt] *******************************************************************
2019-03-23 14:29:07,085 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:07,104 p=5597 u=student |  TASK [etcd : Create the peer csr] ******************************************************************************
2019-03-23 14:29:07,528 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:07,545 p=5597 u=student |  TASK [etcd : Sign and create the peer crt] *********************************************************************
2019-03-23 14:29:07,859 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:07,875 p=5597 u=student |  TASK [etcd : file] *********************************************************************************************
2019-03-23 14:29:08,190 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:08,210 p=5597 u=student |  TASK [etcd : Create a tarball of the etcd certs] ***************************************************************
2019-03-23 14:29:08,519 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:08,536 p=5597 u=student |  TASK [etcd : Retrieve etcd cert tarball] ***********************************************************************
2019-03-23 14:29:08,986 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:08,995 p=5597 u=student |  TASK [etcd : Ensure certificate directory exists] **************************************************************
2019-03-23 14:29:09,322 p=5597 u=student |  ok: [master.lab.example.com] => (item=/etc/etcd)
2019-03-23 14:29:09,333 p=5597 u=student |  TASK [etcd : Unarchive cert tarball] ***************************************************************************
2019-03-23 14:29:10,320 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:10,337 p=5597 u=student |  TASK [etcd : Create a tarball of the etcd ca certs] ************************************************************
2019-03-23 14:29:10,635 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:10,653 p=5597 u=student |  TASK [etcd : Retrieve etcd ca cert tarball] ********************************************************************
2019-03-23 14:29:10,947 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:10,958 p=5597 u=student |  TASK [etcd : Ensure ca directory exists] ***********************************************************************
2019-03-23 14:29:11,276 p=5597 u=student |  ok: [master.lab.example.com] => (item=/etc/etcd/ca)
2019-03-23 14:29:11,293 p=5597 u=student |  TASK [etcd : Delete temporary directory] ***********************************************************************
2019-03-23 14:29:11,468 p=5597 u=student |  ok: [master.lab.example.com -> localhost]
2019-03-23 14:29:11,477 p=5597 u=student |  TASK [etcd : Validate permissions on certificate files] ********************************************************
2019-03-23 14:29:11,784 p=5597 u=student |  changed: [master.lab.example.com] => (item=/etc/etcd/ca.crt)
2019-03-23 14:29:12,066 p=5597 u=student |  changed: [master.lab.example.com] => (item=/etc/etcd/server.crt)
2019-03-23 14:29:12,376 p=5597 u=student |  changed: [master.lab.example.com] => (item=/etc/etcd/server.key)
2019-03-23 14:29:12,387 p=5597 u=student |  TASK [etcd : Validate permissions on peer certificate files] ***************************************************
2019-03-23 14:29:12,708 p=5597 u=student |  ok: [master.lab.example.com] => (item=/etc/etcd/ca.crt)
2019-03-23 14:29:13,072 p=5597 u=student |  changed: [master.lab.example.com] => (item=/etc/etcd/peer.crt)
2019-03-23 14:29:13,387 p=5597 u=student |  changed: [master.lab.example.com] => (item=/etc/etcd/peer.key)
2019-03-23 14:29:13,398 p=5597 u=student |  TASK [etcd : Validate permissions on the config dir] ***********************************************************
2019-03-23 14:29:13,701 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:13,708 p=5597 u=student |  PLAY [Create etcd client certificates for master hosts] ********************************************************
2019-03-23 14:29:13,718 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:29:14,227 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:14,267 p=5597 u=student |  TASK [openshift_etcd_facts : Check for CA indicator files] *****************************************************
2019-03-23 14:29:14,578 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/ca', u'master.lab.example.com'])
2019-03-23 14:29:14,939 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/generated_certs', u'master.lab.example.com'])
2019-03-23 14:29:14,951 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:29:14,987 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:14,996 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:29:15,028 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:15,036 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:29:15,056 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:15,067 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:29:15,087 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:15,097 p=5597 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-23 14:29:15,160 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/certificates/fetch_client_certificates_from_ca.yml for master.lab.example.com
2019-03-23 14:29:15,180 p=5597 u=student |  TASK [etcd : Ensure CA certificate exists on etcd_ca_host] *****************************************************
2019-03-23 14:29:15,516 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:15,526 p=5597 u=student |  TASK [etcd : fail] *********************************************************************************************
2019-03-23 14:29:15,547 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:15,556 p=5597 u=student |  TASK [etcd : Check status of external etcd certificatees] ******************************************************
2019-03-23 14:29:15,859 p=5597 u=student |  ok: [master.lab.example.com] => (item=master.etcd-client.crt)
2019-03-23 14:29:16,144 p=5597 u=student |  ok: [master.lab.example.com] => (item=master.etcd-client.key)
2019-03-23 14:29:16,432 p=5597 u=student |  ok: [master.lab.example.com] => (item=master.etcd-ca.crt)
2019-03-23 14:29:16,442 p=5597 u=student |  TASK [etcd : set_fact] *****************************************************************************************
2019-03-23 14:29:16,479 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:16,496 p=5597 u=student |  TASK [etcd : Ensure generated_certs directory present] *********************************************************
2019-03-23 14:29:16,798 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:16,816 p=5597 u=student |  TASK [etcd : Create the client csr] ****************************************************************************
2019-03-23 14:29:17,214 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:17,233 p=5597 u=student |  TASK [etcd : Sign and create the client crt] *******************************************************************
2019-03-23 14:29:17,556 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:17,573 p=5597 u=student |  TASK [etcd : file] *********************************************************************************************
2019-03-23 14:29:17,870 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:17,888 p=5597 u=student |  TASK [etcd : Create a tarball of the etcd certs] ***************************************************************
2019-03-23 14:29:18,210 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:18,229 p=5597 u=student |  TASK [etcd : Retrieve the etcd cert tarballs] ******************************************************************
2019-03-23 14:29:18,536 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:18,545 p=5597 u=student |  TASK [etcd : Ensure certificate directory exists] **************************************************************
2019-03-23 14:29:18,844 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:18,854 p=5597 u=student |  TASK [etcd : Unarchive etcd cert tarballs] *********************************************************************
2019-03-23 14:29:19,666 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:19,681 p=5597 u=student |  TASK [etcd : Delete temporary directory] ***********************************************************************
2019-03-23 14:29:19,848 p=5597 u=student |  ok: [master.lab.example.com -> localhost]
2019-03-23 14:29:19,857 p=5597 u=student |  TASK [etcd : file] *********************************************************************************************
2019-03-23 14:29:20,177 p=5597 u=student |  changed: [master.lab.example.com] => (item=master.etcd-client.crt)
2019-03-23 14:29:20,476 p=5597 u=student |  changed: [master.lab.example.com] => (item=master.etcd-client.key)
2019-03-23 14:29:20,761 p=5597 u=student |  changed: [master.lab.example.com] => (item=master.etcd-ca.crt)
2019-03-23 14:29:20,769 p=5597 u=student |  PLAY [Configure etcd] ******************************************************************************************
2019-03-23 14:29:20,784 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:29:21,292 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:21,317 p=5597 u=student |  TASK [openshift_clock : Determine if chrony is installed] ******************************************************
2019-03-23 14:29:21,636 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:21,646 p=5597 u=student |  TASK [openshift_clock : Install ntp package] *******************************************************************
2019-03-23 14:29:21,665 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:21,675 p=5597 u=student |  TASK [openshift_clock : Start and enable ntpd/chronyd] *********************************************************
2019-03-23 14:29:21,989 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:22,009 p=5597 u=student |  TASK [openshift_etcd_facts : Check for CA indicator files] *****************************************************
2019-03-23 14:29:22,347 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/ca', u'master.lab.example.com'])
2019-03-23 14:29:22,705 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=[u'/etc/etcd/generated_certs', u'master.lab.example.com'])
2019-03-23 14:29:22,716 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:29:22,756 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:22,765 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:29:22,800 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:22,809 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:29:22,826 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:22,836 p=5597 u=student |  TASK [openshift_etcd_facts : set_fact] *************************************************************************
2019-03-23 14:29:22,854 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:22,863 p=5597 u=student |  TASK [etcd : Set hostname and ip facts] ************************************************************************
2019-03-23 14:29:22,896 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:22,906 p=5597 u=student |  TASK [etcd : Add iptables allow rules] *************************************************************************
2019-03-23 14:29:22,936 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'2379/tcp', u'service': u'etcd'}) 
2019-03-23 14:29:22,941 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'2380/tcp', u'service': u'etcd peering'}) 
2019-03-23 14:29:22,952 p=5597 u=student |  TASK [etcd : Remove iptables rules] ****************************************************************************
2019-03-23 14:29:22,976 p=5597 u=student |  TASK [etcd : Add firewalld allow rules] ************************************************************************
2019-03-23 14:29:23,718 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'port': u'2379/tcp', u'service': u'etcd'})
2019-03-23 14:29:24,261 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'port': u'2380/tcp', u'service': u'etcd peering'})
2019-03-23 14:29:24,272 p=5597 u=student |  TASK [etcd : Remove firewalld allow rules] *********************************************************************
2019-03-23 14:29:24,299 p=5597 u=student |  TASK [etcd : Install etcd] *************************************************************************************
2019-03-23 14:29:24,831 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:24,840 p=5597 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-23 14:29:24,874 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/drop_etcdctl.yml for master.lab.example.com
2019-03-23 14:29:24,885 p=5597 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-23 14:29:24,918 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/etcd/tasks/auxiliary/drop_etcdctl.yml for master.lab.example.com
2019-03-23 14:29:24,927 p=5597 u=student |  TASK [etcd : Install etcd for etcdctl] *************************************************************************
2019-03-23 14:29:25,403 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:25,413 p=5597 u=student |  TASK [etcd : Configure etcd profile.d aliases] *****************************************************************
2019-03-23 14:29:25,975 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:25,984 p=5597 u=student |  TASK [etcd : Pull etcd container] ******************************************************************************
2019-03-23 14:29:26,003 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:26,012 p=5597 u=student |  TASK [etcd : Install etcd container service file] **************************************************************
2019-03-23 14:29:26,031 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:26,040 p=5597 u=student |  TASK [etcd : Create configuration directory] *******************************************************************
2019-03-23 14:29:26,055 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:26,067 p=5597 u=student |  TASK [etcd : Copy service file for etcd instance] **************************************************************
2019-03-23 14:29:26,087 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:26,097 p=5597 u=student |  TASK [etcd : Create third party etcd service.d directory exists] ***********************************************
2019-03-23 14:29:26,113 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:26,124 p=5597 u=student |  TASK [etcd : Configure third part etcd service unit file] ******************************************************
2019-03-23 14:29:26,139 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:26,151 p=5597 u=student |  TASK [etcd : Ensure etcd datadir exists] ***********************************************************************
2019-03-23 14:29:26,172 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:26,182 p=5597 u=student |  TASK [etcd : Ensure etcd datadir ownership for thirdparty datadir] *********************************************
2019-03-23 14:29:26,203 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:26,214 p=5597 u=student |  TASK [etcd : command] ******************************************************************************************
2019-03-23 14:29:26,233 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:26,244 p=5597 u=student |  TASK [etcd : Disable system etcd when containerized] ***********************************************************
2019-03-23 14:29:26,265 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:26,277 p=5597 u=student |  TASK [etcd : Install etcd container service file] **************************************************************
2019-03-23 14:29:26,298 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:26,308 p=5597 u=student |  TASK [etcd : Install Etcd system container] ********************************************************************
2019-03-23 14:29:26,328 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:26,338 p=5597 u=student |  TASK [etcd : Validate permissions on the config dir] ***********************************************************
2019-03-23 14:29:26,720 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:26,731 p=5597 u=student |  TASK [etcd : Write etcd global config file] ********************************************************************
2019-03-23 14:29:27,359 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:27,367 p=5597 u=student |  TASK [etcd : Enable etcd] **************************************************************************************
2019-03-23 14:29:28,943 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:28,956 p=5597 u=student |  TASK [etcd : Set fact etcd_service_status_changed] *************************************************************
2019-03-23 14:29:28,989 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:28,998 p=5597 u=student |  TASK [nickhammond.logrotate : nickhammond.logrotate | Install logrotate] ***************************************
2019-03-23 14:29:29,476 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:29,486 p=5597 u=student |  TASK [nickhammond.logrotate : nickhammond.logrotate | Setup logrotate.d scripts] *******************************
2019-03-23 14:29:29,502 p=5597 u=student |  RUNNING HANDLER [etcd : restart etcd] **************************************************************************
2019-03-23 14:29:29,529 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:29,534 p=5597 u=student |  PLAY [etcd Install Checkpoint End] *****************************************************************************
2019-03-23 14:29:29,541 p=5597 u=student |  TASK [Set etcd install 'Complete'] *****************************************************************************
2019-03-23 14:29:29,584 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:29:29,590 p=5597 u=student |  PLAY [NFS Install Checkpoint Start] ****************************************************************************
2019-03-23 14:29:29,597 p=5597 u=student |  TASK [Set NFS install 'In Progress'] ***************************************************************************
2019-03-23 14:29:29,641 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:29:29,648 p=5597 u=student |  PLAY [Configure nfs] *******************************************************************************************
2019-03-23 14:29:29,658 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:29:30,234 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:29:30,256 p=5597 u=student |  TASK [openshift_storage_nfs : Add iptables allow rules] ********************************************************
2019-03-23 14:29:30,287 p=5597 u=student |  skipping: [services.lab.example.com] => (item={u'port': u'2049/tcp', u'service': u'nfs'}) 
2019-03-23 14:29:30,296 p=5597 u=student |  TASK [openshift_storage_nfs : Remove iptables rules] ***********************************************************
2019-03-23 14:29:30,319 p=5597 u=student |  TASK [openshift_storage_nfs : Add firewalld allow rules] *******************************************************
2019-03-23 14:29:30,926 p=5597 u=student |  ok: [services.lab.example.com] => (item={u'port': u'2049/tcp', u'service': u'nfs'})
2019-03-23 14:29:30,934 p=5597 u=student |  TASK [openshift_storage_nfs : Remove firewalld allow rules] ****************************************************
2019-03-23 14:29:30,958 p=5597 u=student |  TASK [openshift_storage_nfs : Install nfs-utils] ***************************************************************
2019-03-23 14:29:31,435 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:29:31,442 p=5597 u=student |  TASK [openshift_storage_nfs : Configure NFS] *******************************************************************
2019-03-23 14:29:31,897 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:29:31,905 p=5597 u=student |  TASK [openshift_storage_nfs : Restart nfs-config] **************************************************************
2019-03-23 14:29:31,924 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:29:31,931 p=5597 u=student |  TASK [openshift_storage_nfs : Ensure exports directory exists] *************************************************
2019-03-23 14:29:32,350 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:29:32,357 p=5597 u=student |  TASK [openshift_storage_nfs : Ensure export directories exist] *************************************************
2019-03-23 14:29:32,751 p=5597 u=student |  ok: [services.lab.example.com] => (item=/exports/registry)
2019-03-23 14:29:33,029 p=5597 u=student |  ok: [services.lab.example.com] => (item=/exports/metrics)
2019-03-23 14:29:33,339 p=5597 u=student |  ok: [services.lab.example.com] => (item=/exports/logging-es)
2019-03-23 14:29:33,619 p=5597 u=student |  ok: [services.lab.example.com] => (item=/exports/logging-es-ops)
2019-03-23 14:29:33,897 p=5597 u=student |  ok: [services.lab.example.com] => (item=/exports/etcd-vol2)
2019-03-23 14:29:34,196 p=5597 u=student |  ok: [services.lab.example.com] => (item=/exports/prometheus)
2019-03-23 14:29:34,497 p=5597 u=student |  ok: [services.lab.example.com] => (item=/exports/prometheus-alertmanager)
2019-03-23 14:29:34,770 p=5597 u=student |  ok: [services.lab.example.com] => (item=/exports/prometheus-alertbuffer)
2019-03-23 14:29:34,782 p=5597 u=student |  TASK [openshift_storage_nfs : Configure exports] ***************************************************************
2019-03-23 14:29:35,437 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:29:35,445 p=5597 u=student |  TASK [openshift_storage_nfs : register exports] ****************************************************************
2019-03-23 14:29:35,827 p=5597 u=student |  changed: [services.lab.example.com]
2019-03-23 14:29:35,835 p=5597 u=student |  TASK [openshift_storage_nfs : remove exports from /etc/exports] ************************************************
2019-03-23 14:29:36,145 p=5597 u=student |  ok: [services.lab.example.com] => (item="/exports/registry" *(rw,root_squash))
2019-03-23 14:29:36,531 p=5597 u=student |  ok: [services.lab.example.com] => (item="/exports/metrics" *(rw,root_squash))
2019-03-23 14:29:36,816 p=5597 u=student |  ok: [services.lab.example.com] => (item="/exports/logging-es" *(rw,root_squash))
2019-03-23 14:29:37,105 p=5597 u=student |  ok: [services.lab.example.com] => (item="/exports/logging-es-ops" *(rw,root_squash))
2019-03-23 14:29:37,416 p=5597 u=student |  ok: [services.lab.example.com] => (item="/exports/etcd-vol2" *(rw,root_squash,sync,no_wdelay))
2019-03-23 14:29:37,694 p=5597 u=student |  ok: [services.lab.example.com] => (item="/exports/prometheus" *(rw,root_squash))
2019-03-23 14:29:37,976 p=5597 u=student |  ok: [services.lab.example.com] => (item="/exports/prometheus-alertmanager" *(rw,root_squash))
2019-03-23 14:29:38,289 p=5597 u=student |  ok: [services.lab.example.com] => (item="/exports/prometheus-alertbuffer" *(rw,root_squash))
2019-03-23 14:29:38,300 p=5597 u=student |  TASK [openshift_storage_nfs : Enable and start services] *******************************************************
2019-03-23 14:29:38,615 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:29:38,627 p=5597 u=student |  TASK [openshift_storage_nfs : set_fact] ************************************************************************
2019-03-23 14:29:38,664 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:29:38,670 p=5597 u=student |  PLAY [NFS Install Checkpoint End] ******************************************************************************
2019-03-23 14:29:38,676 p=5597 u=student |  TASK [Set NFS install 'Complete'] ******************************************************************************
2019-03-23 14:29:38,816 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:29:38,822 p=5597 u=student |  PLAY [Load Balancer Install Checkpoint Start] ******************************************************************
2019-03-23 14:29:38,828 p=5597 u=student |  TASK [Set load balancer install 'In Progress'] *****************************************************************
2019-03-23 14:29:38,845 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:29:38,850 p=5597 u=student |  PLAY [Configure load balancers] ********************************************************************************
2019-03-23 14:29:38,851 p=5597 u=student |  skipping: no hosts matched
2019-03-23 14:29:38,853 p=5597 u=student |  PLAY [Load Balancer Install Checkpoint End] ********************************************************************
2019-03-23 14:29:38,860 p=5597 u=student |  TASK [Set load balancer install 'Complete'] ********************************************************************
2019-03-23 14:29:38,876 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:29:38,882 p=5597 u=student |  PLAY [Master Install Checkpoint Start] *************************************************************************
2019-03-23 14:29:38,889 p=5597 u=student |  TASK [Set Master install 'In Progress'] ************************************************************************
2019-03-23 14:29:39,018 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:29:39,025 p=5597 u=student |  PLAY [Create OpenShift certificates for master hosts] **********************************************************
2019-03-23 14:29:39,043 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:29:39,652 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:39,677 p=5597 u=student |  TASK [openshift_master_facts : Verify required variables are set] **********************************************
2019-03-23 14:29:39,694 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:39,704 p=5597 u=student |  TASK [openshift_master_facts : Set g_metrics_hostname] *********************************************************
2019-03-23 14:29:39,825 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:39,911 p=5597 u=student |  TASK [openshift_master_facts : set_fact] ***********************************************************************
2019-03-23 14:29:39,928 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:39,938 p=5597 u=student |  TASK [openshift_master_facts : Set master facts] ***************************************************************
2019-03-23 14:29:40,707 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:40,719 p=5597 u=student |  TASK [openshift_master_facts : Determine if scheduler config present] ******************************************
2019-03-23 14:29:41,009 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:41,018 p=5597 u=student |  TASK [openshift_master_facts : Set Default scheduler predicates and priorities] ********************************
2019-03-23 14:29:41,060 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:41,072 p=5597 u=student |  TASK [openshift_master_facts : Retrieve current scheduler config] **********************************************
2019-03-23 14:29:41,090 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:41,100 p=5597 u=student |  TASK [openshift_master_facts : Set openshift_master_scheduler_current_config] **********************************
2019-03-23 14:29:41,121 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:41,131 p=5597 u=student |  TASK [openshift_master_facts : Test if scheduler config is readable] *******************************************
2019-03-23 14:29:41,149 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:41,161 p=5597 u=student |  TASK [openshift_master_facts : Set current scheduler predicates and priorities] ********************************
2019-03-23 14:29:41,181 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:41,196 p=5597 u=student |  TASK [openshift_named_certificates : set_fact] *****************************************************************
2019-03-23 14:29:41,218 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:41,229 p=5597 u=student |  TASK [openshift_named_certificates : openshift_facts] **********************************************************
2019-03-23 14:29:41,930 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:41,942 p=5597 u=student |  TASK [openshift_named_certificates : Clear named certificates] *************************************************
2019-03-23 14:29:41,960 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:41,970 p=5597 u=student |  TASK [openshift_named_certificates : Ensure named certificate directory exists] ********************************
2019-03-23 14:29:42,288 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:42,300 p=5597 u=student |  TASK [openshift_named_certificates : Land named certificates] **************************************************
2019-03-23 14:29:42,328 p=5597 u=student |  TASK [openshift_named_certificates : Land named certificate keys] **********************************************
2019-03-23 14:29:42,354 p=5597 u=student |  TASK [openshift_named_certificates : Land named CA certificates] ***********************************************
2019-03-23 14:29:42,381 p=5597 u=student |  TASK [openshift_cli : Install clients] *************************************************************************
2019-03-23 14:29:42,885 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:42,895 p=5597 u=student |  TASK [openshift_cli : Pull CLI Image] **************************************************************************
2019-03-23 14:29:42,912 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:42,923 p=5597 u=student |  TASK [openshift_cli : Copy client binaries/symlinks out of CLI image for use on the host] **********************
2019-03-23 14:29:42,940 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:42,950 p=5597 u=student |  TASK [openshift_cli : Pull CLI Image] **************************************************************************
2019-03-23 14:29:42,967 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:42,977 p=5597 u=student |  TASK [openshift_cli : Copy client binaries/symlinks out of CLI image for use on the host] **********************
2019-03-23 14:29:42,994 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:43,003 p=5597 u=student |  TASK [openshift_cli : Reload facts to pick up installed OpenShift version] *************************************
2019-03-23 14:29:43,699 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:43,712 p=5597 u=student |  TASK [openshift_cli : Install bash completion for oc tools] ****************************************************
2019-03-23 14:29:44,187 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:44,198 p=5597 u=student |  TASK [openshift_ca : fail] *************************************************************************************
2019-03-23 14:29:44,219 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:44,233 p=5597 u=student |  TASK [openshift_ca : fail] *************************************************************************************
2019-03-23 14:29:44,253 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:44,276 p=5597 u=student |  TASK [openshift_ca : Install the base package for admin tooling] ***********************************************
2019-03-23 14:29:44,802 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:44,812 p=5597 u=student |  TASK [openshift_ca : Reload generated facts] *******************************************************************
2019-03-23 14:29:44,840 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:44,859 p=5597 u=student |  TASK [openshift_ca : Create openshift_ca_config_dir if it does not exist] **************************************
2019-03-23 14:29:45,173 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:45,197 p=5597 u=student |  TASK [openshift_ca : Determine if CA must be created] **********************************************************
2019-03-23 14:29:45,513 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=ca-bundle.crt)
2019-03-23 14:29:45,790 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=ca.crt)
2019-03-23 14:29:46,068 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=ca.key)
2019-03-23 14:29:46,082 p=5597 u=student |  TASK [openshift_ca : set_fact] *********************************************************************************
2019-03-23 14:29:46,124 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:46,135 p=5597 u=student |  TASK [openshift_ca : Retain original serviceaccount keys] ******************************************************
2019-03-23 14:29:46,163 p=5597 u=student |  skipping: [master.lab.example.com] => (item=/etc/origin/master/serviceaccounts.private.key) 
2019-03-23 14:29:46,168 p=5597 u=student |  skipping: [master.lab.example.com] => (item=/etc/origin/master/serviceaccounts.public.key) 
2019-03-23 14:29:46,196 p=5597 u=student |  TASK [openshift_ca : Deploy master ca certificate] *************************************************************
2019-03-23 14:29:46,222 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'dest': u'ca.crt', u'src': u''}) 
2019-03-23 14:29:46,229 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'dest': u'ca.key', u'src': u''}) 
2019-03-23 14:29:46,252 p=5597 u=student |  TASK [openshift_ca : Create ca serial] *************************************************************************
2019-03-23 14:29:46,276 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:46,287 p=5597 u=student |  TASK [openshift_ca : find] *************************************************************************************
2019-03-23 14:29:46,662 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:46,681 p=5597 u=student |  TASK [openshift_ca : Create the master certificates if they do not already exist] ******************************
2019-03-23 14:29:49,068 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:49,088 p=5597 u=student |  TASK [openshift_ca : command] **********************************************************************************
2019-03-23 14:29:49,412 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:49,425 p=5597 u=student |  TASK [openshift_ca : copy] *************************************************************************************
2019-03-23 14:29:49,460 p=5597 u=student |  TASK [openshift_ca : copy] *************************************************************************************
2019-03-23 14:29:49,751 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:49,769 p=5597 u=student |  TASK [openshift_ca : assemble] *********************************************************************************
2019-03-23 14:29:50,062 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:50,082 p=5597 u=student |  TASK [openshift_ca : Test local loopback context] **************************************************************
2019-03-23 14:29:50,559 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:50,579 p=5597 u=student |  TASK [openshift_ca : Create temp directory for loopback master client config] **********************************
2019-03-23 14:29:50,599 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:50,618 p=5597 u=student |  TASK [openshift_ca : Generate the loopback master client config] ***********************************************
2019-03-23 14:29:50,639 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:50,662 p=5597 u=student |  TASK [openshift_ca : Copy generated loopback master client config to master config dir] ************************
2019-03-23 14:29:50,682 p=5597 u=student |  skipping: [master.lab.example.com] => (item=openshift-master.crt) 
2019-03-23 14:29:50,688 p=5597 u=student |  skipping: [master.lab.example.com] => (item=openshift-master.key) 
2019-03-23 14:29:50,694 p=5597 u=student |  skipping: [master.lab.example.com] => (item=openshift-master.kubeconfig) 
2019-03-23 14:29:50,713 p=5597 u=student |  TASK [openshift_ca : Delete temp directory] ********************************************************************
2019-03-23 14:29:50,733 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:50,743 p=5597 u=student |  TASK [openshift_ca : Restore original serviceaccount keys] *****************************************************
2019-03-23 14:29:50,766 p=5597 u=student |  skipping: [master.lab.example.com] => (item=/etc/origin/master/serviceaccounts.private.key) 
2019-03-23 14:29:50,770 p=5597 u=student |  skipping: [master.lab.example.com] => (item=/etc/origin/master/serviceaccounts.public.key) 
2019-03-23 14:29:50,780 p=5597 u=student |  TASK [openshift_ca : Remove backup serviceaccount keys] ********************************************************
2019-03-23 14:29:50,802 p=5597 u=student |  skipping: [master.lab.example.com] => (item=/etc/origin/master/serviceaccounts.private.key) 
2019-03-23 14:29:50,805 p=5597 u=student |  skipping: [master.lab.example.com] => (item=/etc/origin/master/serviceaccounts.public.key) 
2019-03-23 14:29:50,815 p=5597 u=student |  TASK [openshift_master_certificates : Check status of master certificates] *************************************
2019-03-23 14:29:51,133 p=5597 u=student |  ok: [master.lab.example.com] => (item=admin.crt)
2019-03-23 14:29:51,431 p=5597 u=student |  ok: [master.lab.example.com] => (item=ca.crt)
2019-03-23 14:29:51,723 p=5597 u=student |  ok: [master.lab.example.com] => (item=ca-bundle.crt)
2019-03-23 14:29:52,004 p=5597 u=student |  ok: [master.lab.example.com] => (item=master.kubelet-client.crt)
2019-03-23 14:29:52,331 p=5597 u=student |  ok: [master.lab.example.com] => (item=master.proxy-client.crt)
2019-03-23 14:29:52,691 p=5597 u=student |  ok: [master.lab.example.com] => (item=master.server.crt)
2019-03-23 14:29:52,983 p=5597 u=student |  ok: [master.lab.example.com] => (item=openshift-master.crt)
2019-03-23 14:29:53,302 p=5597 u=student |  ok: [master.lab.example.com] => (item=service-signer.crt)
2019-03-23 14:29:53,322 p=5597 u=student |  TASK [openshift_master_certificates : set_fact] ****************************************************************
2019-03-23 14:29:53,359 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:53,378 p=5597 u=student |  TASK [openshift_master_certificates : Ensure the generated_configs directory present] **************************
2019-03-23 14:29:53,398 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:53,417 p=5597 u=student |  TASK [openshift_master_certificates : find] ********************************************************************
2019-03-23 14:29:53,703 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:29:53,726 p=5597 u=student |  TASK [openshift_master_certificates : Create the master server certificate] ************************************
2019-03-23 14:29:53,770 p=5597 u=student |  TASK [openshift_master_certificates : Generate the loopback master client config] ******************************
2019-03-23 14:29:53,837 p=5597 u=student |  TASK [openshift_master_certificates : file] ********************************************************************
2019-03-23 14:29:53,869 p=5597 u=student |  skipping: [master.lab.example.com] => (item=admin.crt) 
2019-03-23 14:29:53,876 p=5597 u=student |  skipping: [master.lab.example.com] => (item=admin.key) 
2019-03-23 14:29:53,882 p=5597 u=student |  skipping: [master.lab.example.com] => (item=admin.kubeconfig) 
2019-03-23 14:29:53,890 p=5597 u=student |  skipping: [master.lab.example.com] => (item=master.kubelet-client.crt) 
2019-03-23 14:29:53,896 p=5597 u=student |  skipping: [master.lab.example.com] => (item=master.kubelet-client.key) 
2019-03-23 14:29:53,904 p=5597 u=student |  skipping: [master.lab.example.com] => (item=master.proxy-client.crt) 
2019-03-23 14:29:53,910 p=5597 u=student |  skipping: [master.lab.example.com] => (item=master.proxy-client.key) 
2019-03-23 14:29:53,916 p=5597 u=student |  skipping: [master.lab.example.com] => (item=service-signer.crt) 
2019-03-23 14:29:53,923 p=5597 u=student |  skipping: [master.lab.example.com] => (item=service-signer.key) 
2019-03-23 14:29:53,930 p=5597 u=student |  skipping: [master.lab.example.com] => (item=ca.crt) 
2019-03-23 14:29:53,937 p=5597 u=student |  skipping: [master.lab.example.com] => (item=ca.key) 
2019-03-23 14:29:53,943 p=5597 u=student |  skipping: [master.lab.example.com] => (item=ca-bundle.crt) 
2019-03-23 14:29:53,950 p=5597 u=student |  skipping: [master.lab.example.com] => (item=client-ca-bundle.crt) 
2019-03-23 14:29:53,958 p=5597 u=student |  skipping: [master.lab.example.com] => (item=serviceaccounts.private.key) 
2019-03-23 14:29:53,963 p=5597 u=student |  skipping: [master.lab.example.com] => (item=serviceaccounts.public.key) 
2019-03-23 14:29:53,985 p=5597 u=student |  TASK [openshift_master_certificates : Remove generated etcd client certs when using external etcd] *************
2019-03-23 14:29:54,333 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=master.etcd-client.crt)
2019-03-23 14:29:54,625 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com] => (item=master.etcd-client.key)
2019-03-23 14:29:54,642 p=5597 u=student |  TASK [openshift_master_certificates : Create local temp directory for syncing certs] ***************************
2019-03-23 14:29:54,661 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:54,673 p=5597 u=student |  TASK [openshift_master_certificates : Chmod local temp directory for syncing certs] ****************************
2019-03-23 14:29:54,691 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:54,709 p=5597 u=student |  TASK [openshift_master_certificates : Create a tarball of the master certs] ************************************
2019-03-23 14:29:54,729 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:54,749 p=5597 u=student |  TASK [openshift_master_certificates : Retrieve the master cert tarball from the master] ************************
2019-03-23 14:29:54,769 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:54,779 p=5597 u=student |  TASK [openshift_master_certificates : Ensure certificate directory exists] *************************************
2019-03-23 14:29:54,797 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:54,807 p=5597 u=student |  TASK [openshift_master_certificates : Unarchive the tarball on the master] *************************************
2019-03-23 14:29:54,825 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:54,838 p=5597 u=student |  TASK [openshift_master_certificates : Delete local temp directory] *********************************************
2019-03-23 14:29:54,855 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:54,865 p=5597 u=student |  TASK [openshift_master_certificates : Lookup default group for ansible_ssh_user] *******************************
2019-03-23 14:29:55,171 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:55,182 p=5597 u=student |  TASK [openshift_master_certificates : set_fact] ****************************************************************
2019-03-23 14:29:55,222 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:55,233 p=5597 u=student |  TASK [openshift_master_certificates : Create the client config dir(s)] *****************************************
2019-03-23 14:29:55,550 p=5597 u=student |  changed: [master.lab.example.com] => (item=student)
2019-03-23 14:29:55,820 p=5597 u=student |  changed: [master.lab.example.com] => (item=root)
2019-03-23 14:29:55,831 p=5597 u=student |  TASK [openshift_master_certificates : Copy the admin client config(s)] *****************************************
2019-03-23 14:29:56,153 p=5597 u=student |  changed: [master.lab.example.com] => (item=student)
2019-03-23 14:29:56,445 p=5597 u=student |  changed: [master.lab.example.com] => (item=root)
2019-03-23 14:29:56,456 p=5597 u=student |  TASK [openshift_master_certificates : Update the permissions on the admin client config(s)] ********************
2019-03-23 14:29:56,752 p=5597 u=student |  changed: [master.lab.example.com] => (item=student)
2019-03-23 14:29:57,036 p=5597 u=student |  changed: [master.lab.example.com] => (item=root)
2019-03-23 14:29:57,046 p=5597 u=student |  TASK [openshift_master_certificates : Check for ca-bundle.crt] *************************************************
2019-03-23 14:29:57,370 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:57,381 p=5597 u=student |  TASK [openshift_master_certificates : Check for ca.crt] ********************************************************
2019-03-23 14:29:57,684 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:57,694 p=5597 u=student |  TASK [openshift_master_certificates : Migrate ca.crt to ca-bundle.crt] *****************************************
2019-03-23 14:29:57,712 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:57,722 p=5597 u=student |  TASK [openshift_master_certificates : Link ca.crt to ca-bundle.crt] ********************************************
2019-03-23 14:29:57,739 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:57,744 p=5597 u=student |  PLAY [Disable excluders] ***************************************************************************************
2019-03-23 14:29:57,754 p=5597 u=student |  TASK [openshift_excluder : Detecting Atomic Host Operating System] *********************************************
2019-03-23 14:29:58,042 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:58,052 p=5597 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_docker_excluder] **********************************
2019-03-23 14:29:58,102 p=5597 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-23 14:29:58,112 p=5597 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_openshift_excluder] *******************************
2019-03-23 14:29:58,161 p=5597 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-23 14:29:58,171 p=5597 u=student |  TASK [openshift_excluder : Fail if invalid openshift_excluder_action provided] *********************************
2019-03-23 14:29:58,193 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:58,205 p=5597 u=student |  TASK [openshift_excluder : Fail if r_openshift_excluder_upgrade_target is not defined] *************************
2019-03-23 14:29:58,226 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:58,237 p=5597 u=student |  TASK [openshift_excluder : Include main action task file] ******************************************************
2019-03-23 14:29:58,285 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/disable.yml for master.lab.example.com
2019-03-23 14:29:58,298 p=5597 u=student |  TASK [openshift_excluder : Include verify_upgrade.yml when upgrading] ******************************************
2019-03-23 14:29:58,313 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:58,324 p=5597 u=student |  TASK [openshift_excluder : Disable excluders before the upgrade to remove older excluding expressions] *********
2019-03-23 14:29:58,357 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/unexclude.yml for master.lab.example.com
2019-03-23 14:29:58,367 p=5597 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-23 14:29:58,665 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:58,675 p=5597 u=student |  TASK [openshift_excluder : disable docker excluder] ************************************************************
2019-03-23 14:29:59,003 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:29:59,013 p=5597 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-23 14:29:59,335 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:29:59,345 p=5597 u=student |  TASK [openshift_excluder : disable openshift excluder] *********************************************************
2019-03-23 14:29:59,371 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:29:59,380 p=5597 u=student |  TASK [openshift_excluder : Include install.yml] ****************************************************************
2019-03-23 14:29:59,415 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/install.yml for master.lab.example.com
2019-03-23 14:29:59,427 p=5597 u=student |  TASK [openshift_excluder : Install docker excluder - yum] ******************************************************
2019-03-23 14:30:00,283 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:00,294 p=5597 u=student |  TASK [openshift_excluder : Install docker excluder - dnf] ******************************************************
2019-03-23 14:30:00,322 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:00,331 p=5597 u=student |  TASK [openshift_excluder : Install openshift excluder - yum] ***************************************************
2019-03-23 14:30:02,361 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:02,372 p=5597 u=student |  TASK [openshift_excluder : Install openshift excluder - dnf] ***************************************************
2019-03-23 14:30:02,399 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:02,409 p=5597 u=student |  TASK [openshift_excluder : set_fact] ***************************************************************************
2019-03-23 14:30:02,446 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:02,455 p=5597 u=student |  TASK [openshift_excluder : Include exclude.yml] ****************************************************************
2019-03-23 14:30:02,493 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/exclude.yml for master.lab.example.com
2019-03-23 14:30:02,507 p=5597 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-23 14:30:02,814 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:02,824 p=5597 u=student |  TASK [openshift_excluder : Enable docker excluder] *************************************************************
2019-03-23 14:30:03,158 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:03,168 p=5597 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-23 14:30:03,487 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:03,498 p=5597 u=student |  TASK [openshift_excluder : Enable openshift excluder] **********************************************************
2019-03-23 14:30:03,821 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:03,830 p=5597 u=student |  TASK [openshift_excluder : Include unexclude.yml] **************************************************************
2019-03-23 14:30:03,879 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/unexclude.yml for master.lab.example.com
2019-03-23 14:30:03,898 p=5597 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-23 14:30:04,214 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:04,226 p=5597 u=student |  TASK [openshift_excluder : disable docker excluder] ************************************************************
2019-03-23 14:30:04,245 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:04,256 p=5597 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-23 14:30:04,567 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:04,577 p=5597 u=student |  TASK [openshift_excluder : disable openshift excluder] *********************************************************
2019-03-23 14:30:04,908 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:04,915 p=5597 u=student |  PLAY [Gather and set facts for master hosts] *******************************************************************
2019-03-23 14:30:04,924 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:30:05,432 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:05,455 p=5597 u=student |  TASK [Detect if this host is a new master in a scale up] *******************************************************
2019-03-23 14:30:05,487 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:05,496 p=5597 u=student |  TASK [Scaleup Detection] ***************************************************************************************
2019-03-23 14:30:05,525 p=5597 u=student |  ok: [master.lab.example.com] => {
    "g_openshift_master_is_scaleup": false
}
2019-03-23 14:30:05,534 p=5597 u=student |  TASK [Check for RPM generated config marker file .config_managed] **********************************************
2019-03-23 14:30:05,818 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:05,827 p=5597 u=student |  TASK [Remove RPM generated config files if present] ************************************************************
2019-03-23 14:30:05,846 p=5597 u=student |  skipping: [master.lab.example.com] => (item=master) 
2019-03-23 14:30:05,849 p=5597 u=student |  skipping: [master.lab.example.com] => (item=node) 
2019-03-23 14:30:05,853 p=5597 u=student |  skipping: [master.lab.example.com] => (item=.config_managed) 
2019-03-23 14:30:05,862 p=5597 u=student |  TASK [set_fact] ************************************************************************************************
2019-03-23 14:30:05,907 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:05,917 p=5597 u=student |  TASK [openshift_facts] *****************************************************************************************
2019-03-23 14:30:06,625 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:06,634 p=5597 u=student |  PLAY [Inspect state of first master config settings] ***********************************************************
2019-03-23 14:30:06,643 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:30:07,120 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:07,147 p=5597 u=student |  TASK [openshift_facts] *****************************************************************************************
2019-03-23 14:30:07,850 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:07,862 p=5597 u=student |  TASK [Check for existing configuration] ************************************************************************
2019-03-23 14:30:08,161 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:08,171 p=5597 u=student |  TASK [Set clean install fact] **********************************************************************************
2019-03-23 14:30:08,209 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:08,219 p=5597 u=student |  TASK [Determine if etcd3 storage is in use] ********************************************************************
2019-03-23 14:30:09,521 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:09,530 p=5597 u=student |  TASK [Set etcd3 fact] ******************************************************************************************
2019-03-23 14:30:09,561 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:09,570 p=5597 u=student |  TASK [Check if atomic-openshift-master sysconfig exists yet] ***************************************************
2019-03-23 14:30:09,853 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:09,861 p=5597 u=student |  TASK [Preserve OPENSHIFT_DEFAULT_REGISTRY master parameter if present] *****************************************
2019-03-23 14:30:09,879 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:09,888 p=5597 u=student |  TASK [Check if atomic-openshift-master-api sysconfig exists yet] ***********************************************
2019-03-23 14:30:10,196 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:10,206 p=5597 u=student |  TASK [Preserve OPENSHIFT_DEFAULT_REGISTRY master-api parameter if present] *************************************
2019-03-23 14:30:10,225 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:10,237 p=5597 u=student |  TASK [Check if atomic-openshift-master-controllers sysconfig exists yet] ***************************************
2019-03-23 14:30:10,532 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:10,540 p=5597 u=student |  TASK [Preserve OPENSHIFT_DEFAULT_REGISTRY master-controllers parameter if present] *****************************
2019-03-23 14:30:10,557 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:10,565 p=5597 u=student |  TASK [Update facts with OPENSHIFT_DEFAULT_REGISTRY value] ******************************************************
2019-03-23 14:30:10,602 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:10,608 p=5597 u=student |  PLAY [Generate master session secrets] *************************************************************************
2019-03-23 14:30:10,617 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:30:11,079 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:11,104 p=5597 u=student |  TASK [openshift_facts] *****************************************************************************************
2019-03-23 14:30:11,819 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:11,830 p=5597 u=student |  PLAY [Configure masters] ***************************************************************************************
2019-03-23 14:30:11,859 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:30:12,454 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:12,479 p=5597 u=student |  TASK [openshift_master_facts : Verify required variables are set] **********************************************
2019-03-23 14:30:12,496 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:12,507 p=5597 u=student |  TASK [openshift_master_facts : Set g_metrics_hostname] *********************************************************
2019-03-23 14:30:12,633 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:12,643 p=5597 u=student |  TASK [openshift_master_facts : set_fact] ***********************************************************************
2019-03-23 14:30:12,660 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:12,671 p=5597 u=student |  TASK [openshift_master_facts : Set master facts] ***************************************************************
2019-03-23 14:30:13,479 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:13,492 p=5597 u=student |  TASK [openshift_master_facts : Determine if scheduler config present] ******************************************
2019-03-23 14:30:13,876 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:13,886 p=5597 u=student |  TASK [openshift_master_facts : Set Default scheduler predicates and priorities] ********************************
2019-03-23 14:30:14,016 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:14,027 p=5597 u=student |  TASK [openshift_master_facts : Retrieve current scheduler config] **********************************************
2019-03-23 14:30:14,043 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:14,055 p=5597 u=student |  TASK [openshift_master_facts : Set openshift_master_scheduler_current_config] **********************************
2019-03-23 14:30:14,074 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:14,086 p=5597 u=student |  TASK [openshift_master_facts : Test if scheduler config is readable] *******************************************
2019-03-23 14:30:14,106 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:14,118 p=5597 u=student |  TASK [openshift_master_facts : Set current scheduler predicates and priorities] ********************************
2019-03-23 14:30:14,141 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:14,154 p=5597 u=student |  TASK [openshift_clock : Determine if chrony is installed] ******************************************************
2019-03-23 14:30:14,582 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:14,592 p=5597 u=student |  TASK [openshift_clock : Install ntp package] *******************************************************************
2019-03-23 14:30:14,610 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:14,621 p=5597 u=student |  TASK [openshift_clock : Start and enable ntpd/chronyd] *********************************************************
2019-03-23 14:30:15,027 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:15,037 p=5597 u=student |  TASK [openshift_cloud_provider : Set cloud provider facts] *****************************************************
2019-03-23 14:30:15,054 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:15,067 p=5597 u=student |  TASK [openshift_cloud_provider : Create cloudprovider config dir] **********************************************
2019-03-23 14:30:15,087 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:15,100 p=5597 u=student |  TASK [openshift_cloud_provider : include the defined cloud provider files] *************************************
2019-03-23 14:30:15,117 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:15,129 p=5597 u=student |  TASK [openshift_builddefaults : Set builddefaults] *************************************************************
2019-03-23 14:30:15,827 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:15,840 p=5597 u=student |  TASK [openshift_builddefaults : Set builddefaults config structure] ********************************************
2019-03-23 14:30:16,668 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:16,683 p=5597 u=student |  TASK [openshift_buildoverrides : Set buildoverrides config structure] ******************************************
2019-03-23 14:30:17,510 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:17,523 p=5597 u=student |  TASK [nickhammond.logrotate : nickhammond.logrotate | Install logrotate] ***************************************
2019-03-23 14:30:17,962 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:17,973 p=5597 u=student |  TASK [nickhammond.logrotate : nickhammond.logrotate | Setup logrotate.d scripts] *******************************
2019-03-23 14:30:18,000 p=5597 u=student |  TASK [openshift_master : fail] *********************************************************************************
2019-03-23 14:30:18,016 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:18,026 p=5597 u=student |  TASK [openshift_master : Add iptables allow rules] *************************************************************
2019-03-23 14:30:18,065 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'api server https'}) 
2019-03-23 14:30:18,073 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'8444/tcp', u'service': u'api controllers https'}) 
2019-03-23 14:30:18,080 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'8053/tcp', u'service': u'skydns tcp'}) 
2019-03-23 14:30:18,089 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'8053/udp', u'service': u'skydns udp'}) 
2019-03-23 14:30:18,099 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'4001/tcp', u'service': u'etcd embedded'}) 
2019-03-23 14:30:18,113 p=5597 u=student |  TASK [openshift_master : Remove iptables rules] ****************************************************************
2019-03-23 14:30:18,144 p=5597 u=student |  TASK [openshift_master : Add firewalld allow rules] ************************************************************
2019-03-23 14:30:18,801 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'api server https'})
2019-03-23 14:30:19,357 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'port': u'8444/tcp', u'service': u'api controllers https'})
2019-03-23 14:30:19,862 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'port': u'8053/tcp', u'service': u'skydns tcp'})
2019-03-23 14:30:20,401 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'port': u'8053/udp', u'service': u'skydns udp'})
2019-03-23 14:30:20,410 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'4001/tcp', u'service': u'etcd embedded'}) 
2019-03-23 14:30:20,422 p=5597 u=student |  TASK [openshift_master : Remove firewalld allow rules] *********************************************************
2019-03-23 14:30:20,449 p=5597 u=student |  TASK [openshift_master : Install Master package] ***************************************************************
2019-03-23 14:30:22,561 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:22,571 p=5597 u=student |  TASK [openshift_master : Create r_openshift_master_data_dir] ***************************************************
2019-03-23 14:30:22,587 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:22,598 p=5597 u=student |  TASK [openshift_master : Reload systemd units] *****************************************************************
2019-03-23 14:30:22,617 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:22,627 p=5597 u=student |  TASK [openshift_master : Re-gather package dependent master facts] *********************************************
2019-03-23 14:30:23,469 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:23,483 p=5597 u=student |  TASK [openshift_master : Create config parent directory if it does not exist] **********************************
2019-03-23 14:30:23,871 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:23,881 p=5597 u=student |  TASK [openshift_master : Create the policy file if it does not already exist] **********************************
2019-03-23 14:30:24,456 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:24,465 p=5597 u=student |  TASK [openshift_master : Create the scheduler config] **********************************************************
2019-03-23 14:30:25,030 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:25,039 p=5597 u=student |  TASK [openshift_master : Install httpd-tools if needed] ********************************************************
2019-03-23 14:30:25,622 p=5597 u=student |  ok: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'})
2019-03-23 14:30:25,634 p=5597 u=student |  TASK [openshift_master : Ensure htpasswd directory exists] *****************************************************
2019-03-23 14:30:26,030 p=5597 u=student |  ok: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'})
2019-03-23 14:30:26,042 p=5597 u=student |  TASK [openshift_master : Create the htpasswd file if needed] ***************************************************
2019-03-23 14:30:26,751 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'})
2019-03-23 14:30:26,764 p=5597 u=student |  TASK [openshift_master : Ensure htpasswd file exists] **********************************************************
2019-03-23 14:30:27,063 p=5597 u=student |  ok: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'})
2019-03-23 14:30:27,077 p=5597 u=student |  TASK [openshift_master : Create the ldap ca file if needed] ****************************************************
2019-03-23 14:30:27,102 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'}) 
2019-03-23 14:30:27,115 p=5597 u=student |  TASK [openshift_master : Create the openid ca file if needed] **************************************************
2019-03-23 14:30:27,140 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'}) 
2019-03-23 14:30:27,154 p=5597 u=student |  TASK [openshift_master : Create the request header ca file if needed] ******************************************
2019-03-23 14:30:27,180 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'challenge': u'true', u'filename': u'/etc/origin/master/htpasswd', u'login': u'true', u'kind': u'HTPasswdPasswordIdentityProvider', u'name': u'htpasswd_auth'}) 
2019-03-23 14:30:27,197 p=5597 u=student |  TASK [openshift_master : Include push_via_dns.yml] *************************************************************
2019-03-23 14:30:27,237 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_master/tasks/push_via_dns.yml for master.lab.example.com
2019-03-23 14:30:27,255 p=5597 u=student |  TASK [openshift_master : check whether our docker-registry setting exists in the env file] *********************
2019-03-23 14:30:27,654 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:27,667 p=5597 u=student |  TASK [openshift_master : set_fact] *****************************************************************************
2019-03-23 14:30:27,801 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:27,812 p=5597 u=student |  TASK [openshift_master : Set fact of all etcd host IPs] ********************************************************
2019-03-23 14:30:28,637 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:28,650 p=5597 u=student |  TASK [openshift_master : Install the systemd units] ************************************************************
2019-03-23 14:30:28,720 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_master/tasks/systemd_units.yml for master.lab.example.com
2019-03-23 14:30:28,737 p=5597 u=student |  TASK [openshift_master : include push_via_dns.yml tasks] *******************************************************
2019-03-23 14:30:28,791 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_master/tasks/push_via_dns.yml for master.lab.example.com
2019-03-23 14:30:28,806 p=5597 u=student |  TASK [openshift_master : check whether our docker-registry setting exists in the env file] *********************
2019-03-23 14:30:28,823 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:28,835 p=5597 u=student |  TASK [openshift_master : set_fact] *****************************************************************************
2019-03-23 14:30:28,850 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:28,861 p=5597 u=student |  TASK [openshift_master : Set HA Service Info for containerized installs] ***************************************
2019-03-23 14:30:28,877 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:28,887 p=5597 u=student |  TASK [openshift_master : include registry_auth tasks] **********************************************************
2019-03-23 14:30:28,953 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_master/tasks/registry_auth.yml for master.lab.example.com
2019-03-23 14:30:28,971 p=5597 u=student |  TASK [openshift_master : Check for credentials file for registry auth] *****************************************
2019-03-23 14:30:28,988 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:28,999 p=5597 u=student |  TASK [openshift_master : Create credentials for registry auth] *************************************************
2019-03-23 14:30:29,019 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:29,030 p=5597 u=student |  TASK [openshift_master : Create credentials for registry auth (alternative)] ***********************************
2019-03-23 14:30:29,050 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:29,061 p=5597 u=student |  TASK [openshift_master : Setup ro mount of /root/.docker for containerized hosts] ******************************
2019-03-23 14:30:29,078 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:29,089 p=5597 u=student |  TASK [openshift_master : Disable the legacy master service if it exists] ***************************************
2019-03-23 14:30:29,475 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:29,488 p=5597 u=student |  TASK [openshift_master : Remove the legacy master service if it exists] ****************************************
2019-03-23 14:30:29,781 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:29,792 p=5597 u=student |  TASK [openshift_master : Pre-pull master image] ****************************************************************
2019-03-23 14:30:29,810 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:29,820 p=5597 u=student |  TASK [openshift_master : Create the ha systemd unit files] *****************************************************
2019-03-23 14:30:30,465 p=5597 u=student |  changed: [master.lab.example.com] => (item=api)
2019-03-23 14:30:31,054 p=5597 u=student |  changed: [master.lab.example.com] => (item=controllers)
2019-03-23 14:30:31,071 p=5597 u=student |  TASK [openshift_master : command] ******************************************************************************
2019-03-23 14:30:31,437 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:31,448 p=5597 u=student |  TASK [openshift_master : enable master services] ***************************************************************
2019-03-23 14:30:31,804 p=5597 u=student |  changed: [master.lab.example.com] => (item=api)
2019-03-23 14:30:32,144 p=5597 u=student |  changed: [master.lab.example.com] => (item=controllers)
2019-03-23 14:30:32,160 p=5597 u=student |  TASK [openshift_master : Preserve Master API Proxy Config options] *********************************************
2019-03-23 14:30:32,470 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:32,482 p=5597 u=student |  TASK [openshift_master : Preserve Master API AWS options] ******************************************************
2019-03-23 14:30:32,769 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:32,780 p=5597 u=student |  TASK [openshift_master : Create the master api service env file] ***********************************************
2019-03-23 14:30:33,446 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:33,455 p=5597 u=student |  TASK [openshift_master : Restore Master API Proxy Config Options] **********************************************
2019-03-23 14:30:33,481 p=5597 u=student |  TASK [openshift_master : Restore Master API AWS Options] *******************************************************
2019-03-23 14:30:33,506 p=5597 u=student |  TASK [openshift_master : Preserve Master Controllers Proxy Config options] *************************************
2019-03-23 14:30:33,794 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:33,805 p=5597 u=student |  TASK [openshift_master : Preserve Master Controllers AWS options] **********************************************
2019-03-23 14:30:34,099 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:34,112 p=5597 u=student |  TASK [openshift_master : Create the master controllers service env file] ***************************************
2019-03-23 14:30:34,767 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:34,776 p=5597 u=student |  TASK [openshift_master : Restore Master Controllers Proxy Config Options] **************************************
2019-03-23 14:30:34,802 p=5597 u=student |  TASK [openshift_master : Restore Master Controllers AWS Options] ***********************************************
2019-03-23 14:30:34,828 p=5597 u=student |  TASK [openshift_master : Install Master system container] ******************************************************
2019-03-23 14:30:34,846 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:34,856 p=5597 u=student |  TASK [openshift_master : Create session secrets file] **********************************************************
2019-03-23 14:30:35,490 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:35,499 p=5597 u=student |  TASK [openshift_master : set_fact] *****************************************************************************
2019-03-23 14:30:35,533 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:35,543 p=5597 u=student |  TASK [openshift_master : Create master config] *****************************************************************
2019-03-23 14:30:36,237 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:36,248 p=5597 u=student |  TASK [openshift_master : include_tasks] ************************************************************************
2019-03-23 14:30:36,267 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:36,279 p=5597 u=student |  TASK [openshift_master : include_tasks] ************************************************************************
2019-03-23 14:30:36,342 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_master/tasks/set_loopback_context.yml for master.lab.example.com
2019-03-23 14:30:36,367 p=5597 u=student |  TASK [openshift_master : Test local loopback context] **********************************************************
2019-03-23 14:30:36,792 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:36,803 p=5597 u=student |  TASK [openshift_master : command] ******************************************************************************
2019-03-23 14:30:36,820 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:36,831 p=5597 u=student |  TASK [openshift_master : command] ******************************************************************************
2019-03-23 14:30:36,847 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:36,858 p=5597 u=student |  TASK [openshift_master : command] ******************************************************************************
2019-03-23 14:30:36,875 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:36,885 p=5597 u=student |  TASK [openshift_master : Start and enable master api] **********************************************************
2019-03-23 14:30:43,363 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:43,377 p=5597 u=student |  TASK [openshift_master : Dump logs from master-api if it failed] ***********************************************
2019-03-23 14:30:43,396 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:43,409 p=5597 u=student |  TASK [openshift_master : set_fact] *****************************************************************************
2019-03-23 14:30:43,452 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:43,465 p=5597 u=student |  TASK [openshift_master : include_tasks] ************************************************************************
2019-03-23 14:30:43,578 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_master/tasks/check_master_api_is_ready.yml for master.lab.example.com
2019-03-23 14:30:43,627 p=5597 u=student |  TASK [openshift_master : Wait for API to become available] *****************************************************
2019-03-23 14:30:43,977 p=5597 u=student |  FAILED - RETRYING: Wait for API to become available (120 retries left).
2019-03-23 14:30:45,309 p=5597 u=student |  FAILED - RETRYING: Wait for API to become available (119 retries left).
2019-03-23 14:30:46,628 p=5597 u=student |  FAILED - RETRYING: Wait for API to become available (118 retries left).
2019-03-23 14:30:47,927 p=5597 u=student |   [WARNING]: Consider using get_url or uri module rather than running curl

2019-03-23 14:30:47,927 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:47,938 p=5597 u=student |  TASK [openshift_master : Collect verbose curl output when API didn't become available] *************************
2019-03-23 14:30:48,297 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:48,309 p=5597 u=student |  TASK [openshift_master : Collect API logs when API didn't become available] ************************************
2019-03-23 14:30:48,328 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:48,340 p=5597 u=student |  TASK [openshift_master : Dump verbose curl output when the API didn't become available] ************************
2019-03-23 14:30:48,357 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:48,368 p=5597 u=student |  TASK [openshift_master : Dump API logs when the API didn't become availabale] **********************************
2019-03-23 14:30:48,385 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:48,395 p=5597 u=student |  TASK [openshift_master : fail] *********************************************************************************
2019-03-23 14:30:48,413 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:48,424 p=5597 u=student |  TASK [openshift_master : Start and enable master controller service] *******************************************
2019-03-23 14:30:48,913 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:48,928 p=5597 u=student |  TASK [openshift_master : configure vsphere svc account] ********************************************************
2019-03-23 14:30:48,947 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:48,959 p=5597 u=student |  TASK [openshift_master : update vsphere provider master config] ************************************************
2019-03-23 14:30:48,978 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:48,990 p=5597 u=student |  TASK [openshift_master : Dump logs from master-controllers if it failed] ***************************************
2019-03-23 14:30:49,011 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:49,023 p=5597 u=student |  TASK [openshift_master : Set fact master_controllers_service_status_changed] ***********************************
2019-03-23 14:30:49,060 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:49,072 p=5597 u=student |  TASK [openshift_master : node bootstrap settings] **************************************************************
2019-03-23 14:30:49,092 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:49,104 p=5597 u=student |  TASK [tuned : Check for tuned package] *************************************************************************
2019-03-23 14:30:49,446 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:49,457 p=5597 u=student |  TASK [tuned : Set tuned OpenShift variables] *******************************************************************
2019-03-23 14:30:49,495 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:49,505 p=5597 u=student |  TASK [tuned : Ensure directory structure exists] ***************************************************************
2019-03-23 14:30:49,833 p=5597 u=student |  changed: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:30:50,133 p=5597 u=student |  changed: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:30:50,446 p=5597 u=student |  changed: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:30:50,453 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:30:50,459 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:30:50,466 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:30:50,474 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:30:50,486 p=5597 u=student |  TASK [tuned : Ensure files are populated from templates] *******************************************************
2019-03-23 14:30:50,514 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:30:50,525 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:30:50,532 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:30:51,121 p=5597 u=student |  changed: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:30:52,005 p=5597 u=student |  changed: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:30:52,816 p=5597 u=student |  changed: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:30:53,657 p=5597 u=student |  changed: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:30:53,669 p=5597 u=student |  TASK [tuned : Make tuned use the recommended tuned profile on restart] *****************************************
2019-03-23 14:30:53,995 p=5597 u=student |  changed: [master.lab.example.com] => (item=/etc/tuned/active_profile)
2019-03-23 14:30:54,314 p=5597 u=student |  changed: [master.lab.example.com] => (item=/etc/tuned/profile_mode)
2019-03-23 14:30:54,330 p=5597 u=student |  TASK [tuned : Restart tuned service] ***************************************************************************
2019-03-23 14:30:55,285 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:30:55,298 p=5597 u=student |  TASK [nuage_common : Set the Nuage plugin openshift directory fact to handle Atomic host install] **************
2019-03-23 14:30:55,315 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,327 p=5597 u=student |  TASK [nuage_common : Set the Nuage CNI network config directory fact to handle Atomic host install] ************
2019-03-23 14:30:55,347 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,358 p=5597 u=student |  TASK [nuage_common : Set the Nuage CNI binary directory fact to handle Atomic host install] ********************
2019-03-23 14:30:55,374 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,387 p=5597 u=student |  TASK [nuage_common : Assure CNI plugin config dir exists before daemon set install] ****************************
2019-03-23 14:30:55,406 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,417 p=5597 u=student |  TASK [nuage_common : Assure CNI netconf directory exists before daemon set install] ****************************
2019-03-23 14:30:55,435 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,445 p=5597 u=student |  TASK [nuage_common : Assure CNI plugin binary directory exists before daemon set install] **********************
2019-03-23 14:30:55,463 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,474 p=5597 u=student |  TASK [nuage_ca : Install openssl] ******************************************************************************
2019-03-23 14:30:55,491 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,512 p=5597 u=student |  TASK [nuage_ca : Create CA directory] **************************************************************************
2019-03-23 14:30:55,531 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,554 p=5597 u=student |  TASK [nuage_ca : Create certificate directory] *****************************************************************
2019-03-23 14:30:55,571 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,592 p=5597 u=student |  TASK [nuage_ca : Check if the CA key already exists] ***********************************************************
2019-03-23 14:30:55,612 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,633 p=5597 u=student |  TASK [nuage_ca : Create CA key] ********************************************************************************
2019-03-23 14:30:55,655 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,673 p=5597 u=student |  TASK [nuage_ca : Check if the CA crt already exists] ***********************************************************
2019-03-23 14:30:55,692 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,713 p=5597 u=student |  TASK [nuage_ca : Create CA crt] ********************************************************************************
2019-03-23 14:30:55,734 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,756 p=5597 u=student |  TASK [nuage_ca : Create the serial file] ***********************************************************************
2019-03-23 14:30:55,776 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,796 p=5597 u=student |  TASK [nuage_ca : Copy SSL config file] *************************************************************************
2019-03-23 14:30:55,817 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,828 p=5597 u=student |  TASK [nuage_common : Set the Nuage plugin openshift directory fact to handle Atomic host install] **************
2019-03-23 14:30:55,849 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,860 p=5597 u=student |  TASK [nuage_common : Set the Nuage CNI network config directory fact to handle Atomic host install] ************
2019-03-23 14:30:55,877 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,888 p=5597 u=student |  TASK [nuage_common : Set the Nuage CNI binary directory fact to handle Atomic host install] ********************
2019-03-23 14:30:55,904 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,914 p=5597 u=student |  TASK [nuage_common : Assure CNI plugin config dir exists before daemon set install] ****************************
2019-03-23 14:30:55,932 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,943 p=5597 u=student |  TASK [nuage_common : Assure CNI netconf directory exists before daemon set install] ****************************
2019-03-23 14:30:55,960 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:55,972 p=5597 u=student |  TASK [nuage_common : Assure CNI plugin binary directory exists before daemon set install] **********************
2019-03-23 14:30:55,990 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,003 p=5597 u=student |  TASK [nuage_master : Add iptables allow rules] *****************************************************************
2019-03-23 14:30:56,025 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'9443/tcp', u'service': u'openshift-monitor'}) 
2019-03-23 14:30:56,037 p=5597 u=student |  TASK [nuage_master : Remove iptables rules] ********************************************************************
2019-03-23 14:30:56,067 p=5597 u=student |  TASK [nuage_master : Add firewalld allow rules] ****************************************************************
2019-03-23 14:30:56,094 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'9443/tcp', u'service': u'openshift-monitor'}) 
2019-03-23 14:30:56,109 p=5597 u=student |  TASK [nuage_master : Remove firewalld allow rules] *************************************************************
2019-03-23 14:30:56,139 p=5597 u=student |  TASK [nuage_master : Set the Nuage certificate directory fact for Atomic hosts] ********************************
2019-03-23 14:30:56,158 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,171 p=5597 u=student |  TASK [nuage_master : Set the Nuage kubeconfig file path fact for Atomic hosts] *********************************
2019-03-23 14:30:56,190 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,204 p=5597 u=student |  TASK [nuage_master : Set the Nuage monitor yaml location fact for Atomic hosts] ********************************
2019-03-23 14:30:56,224 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,238 p=5597 u=student |  TASK [nuage_master : Set the Nuage monitor certs location fact for Atomic hosts] *******************************
2019-03-23 14:30:56,259 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,271 p=5597 u=student |  TASK [nuage_master : Set the Nuage master config directory for daemon sets install] ****************************
2019-03-23 14:30:56,295 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,305 p=5597 u=student |  TASK [nuage_master : Set the Nuage node config directory for daemon sets install] ******************************
2019-03-23 14:30:56,323 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,335 p=5597 u=student |  TASK [nuage_master : Set the Nuage CNI plugin binary directory for daemon sets install] ************************
2019-03-23 14:30:56,353 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,365 p=5597 u=student |  TASK [nuage_master : Create directory /usr/share/nuage-openshift-monitor] **************************************
2019-03-23 14:30:56,382 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,393 p=5597 u=student |  TASK [nuage_master : Create directory /var/usr/share/nuage-openshift-monitor] **********************************
2019-03-23 14:30:56,412 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,424 p=5597 u=student |  TASK [nuage_master : Create directory /var/usr/bin for monitor binary on atomic] *******************************
2019-03-23 14:30:56,441 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,452 p=5597 u=student |  TASK [nuage_master : Create CNI bin directory /var/opt/cni/bin] ************************************************
2019-03-23 14:30:56,472 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,483 p=5597 u=student |  TASK [nuage_master : Create the log directory] *****************************************************************
2019-03-23 14:30:56,501 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,512 p=5597 u=student |  TASK [nuage_master : include_tasks] ****************************************************************************
2019-03-23 14:30:56,529 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,541 p=5597 u=student |  TASK [nuage_master : Download the certs and keys] **************************************************************
2019-03-23 14:30:56,563 p=5597 u=student |  skipping: [master.lab.example.com] => (item=ca.crt) 
2019-03-23 14:30:56,567 p=5597 u=student |  skipping: [master.lab.example.com] => (item=nuage.crt) 
2019-03-23 14:30:56,571 p=5597 u=student |  skipping: [master.lab.example.com] => (item=nuage.key) 
2019-03-23 14:30:56,576 p=5597 u=student |  skipping: [master.lab.example.com] => (item=nuage.kubeconfig) 
2019-03-23 14:30:56,586 p=5597 u=student |  TASK [nuage_master : Copy the certificates and keys] ***********************************************************
2019-03-23 14:30:56,607 p=5597 u=student |  skipping: [master.lab.example.com] => (item=ca.crt) 
2019-03-23 14:30:56,610 p=5597 u=student |  skipping: [master.lab.example.com] => (item=nuage.crt) 
2019-03-23 14:30:56,616 p=5597 u=student |  skipping: [master.lab.example.com] => (item=nuage.key) 
2019-03-23 14:30:56,620 p=5597 u=student |  skipping: [master.lab.example.com] => (item=nuage.kubeconfig) 
2019-03-23 14:30:56,632 p=5597 u=student |  TASK [nuage_master : include_tasks] ****************************************************************************
2019-03-23 14:30:56,650 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,661 p=5597 u=student |  TASK [nuage_master : include_tasks] ****************************************************************************
2019-03-23 14:30:56,679 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,690 p=5597 u=student |  TASK [nuage_master : Install Nuage VSD user certificate] *******************************************************
2019-03-23 14:30:56,707 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,719 p=5597 u=student |  TASK [nuage_master : Install Nuage VSD user key] ***************************************************************
2019-03-23 14:30:56,738 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,749 p=5597 u=student |  TASK [nuage_master : Create Nuage master daemon set yaml file] *************************************************
2019-03-23 14:30:56,765 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,778 p=5597 u=student |  TASK [nuage_master : Create Nuage node daemon set yaml file] ***************************************************
2019-03-23 14:30:56,796 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,808 p=5597 u=student |  TASK [nuage_master : Create Nuage Infra Pod daemon set yaml file] **********************************************
2019-03-23 14:30:56,825 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,836 p=5597 u=student |  TASK [nuage_master : Add the service account to the privileged scc to have root permissions for kube-system] ***
2019-03-23 14:30:56,853 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,865 p=5597 u=student |  TASK [nuage_master : Add the service account to the privileged scc to have root permissions for openshift-infra] ***
2019-03-23 14:30:56,882 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,893 p=5597 u=student |  TASK [nuage_master : Spawn Nuage Master monitor daemon sets pod] ***********************************************
2019-03-23 14:30:56,910 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,921 p=5597 u=student |  TASK [nuage_master : Spawn Nuage CNI daemon sets pod] **********************************************************
2019-03-23 14:30:56,940 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,951 p=5597 u=student |  TASK [nuage_master : Spawn Nuage Infra daemon sets pod] ********************************************************
2019-03-23 14:30:56,969 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:56,980 p=5597 u=student |  TASK [nuage_master : Restart daemons] **************************************************************************
2019-03-23 14:30:56,997 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,009 p=5597 u=student |  TASK [calico : Calico Node | Error if invalid cert arguments] **************************************************
2019-03-23 14:30:57,025 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,037 p=5597 u=student |  TASK [etcd : include_tasks] ************************************************************************************
2019-03-23 14:30:57,060 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,072 p=5597 u=student |  TASK [calico : Calico Node | Set etcd cert location facts] *****************************************************
2019-03-23 14:30:57,095 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,109 p=5597 u=student |  TASK [calico : Calico Node | Error if no certs set.] ***********************************************************
2019-03-23 14:30:57,135 p=5597 u=student |  skipping: [master.lab.example.com] => (item=calico_etcd_ca_cert_file) 
2019-03-23 14:30:57,141 p=5597 u=student |  skipping: [master.lab.example.com] => (item=calico_etcd_cert_file) 
2019-03-23 14:30:57,146 p=5597 u=student |  skipping: [master.lab.example.com] => (item=calico_etcd_key_file) 
2019-03-23 14:30:57,154 p=5597 u=student |  skipping: [master.lab.example.com] => (item=calico_etcd_endpoints) 
2019-03-23 14:30:57,167 p=5597 u=student |  TASK [calico : Calico Node | Assure the calico certs are present] **********************************************
2019-03-23 14:30:57,188 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,201 p=5597 u=student |  TASK [calico : Calico Node | Configure Calico service unit file] ***********************************************
2019-03-23 14:30:57,221 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,234 p=5597 u=student |  TASK [calico : Calico Node | Enable calico] ********************************************************************
2019-03-23 14:30:57,256 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,268 p=5597 u=student |  TASK [calico : Calico Node | Assure CNI conf dir exists] *******************************************************
2019-03-23 14:30:57,291 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,304 p=5597 u=student |  TASK [calico : Calico Node | Generate Calico CNI config] *******************************************************
2019-03-23 14:30:57,321 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,332 p=5597 u=student |  TASK [calico : Calico Node | Assures Kuberentes CNI bin dir exists] ********************************************
2019-03-23 14:30:57,349 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,360 p=5597 u=student |  TASK [calico : Calico Node | Download Calico CNI Plugin] *******************************************************
2019-03-23 14:30:57,378 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,391 p=5597 u=student |  TASK [calico : Calico Node | Download Calico IPAM Plugin] ******************************************************
2019-03-23 14:30:57,409 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,420 p=5597 u=student |  TASK [calico : Calico Node | Download and extract standard CNI plugins] ****************************************
2019-03-23 14:30:57,438 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,450 p=5597 u=student |  TASK [calico : Calico Node | Assure Calico conf dir exists] ****************************************************
2019-03-23 14:30:57,466 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,478 p=5597 u=student |  TASK [calico : Calico Node | Set calicoctl.cfg] ****************************************************************
2019-03-23 14:30:57,494 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,506 p=5597 u=student |  TASK [calico_master : Calico Master | Assure the calico certs have been generated] *****************************
2019-03-23 14:30:57,524 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,536 p=5597 u=student |  TASK [calico_master : Calico Master | Create temp directory for policy controller definition] ******************
2019-03-23 14:30:57,554 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,565 p=5597 u=student |  TASK [calico_master : Calico Master | Write Calico Policy Controller definition] *******************************
2019-03-23 14:30:57,586 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,598 p=5597 u=student |  TASK [calico_master : Calico Master | Launch Calico Policy Controller] *****************************************
2019-03-23 14:30:57,615 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,626 p=5597 u=student |  TASK [calico_master : Calico Master | Delete temp directory] ***************************************************
2019-03-23 14:30:57,642 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,654 p=5597 u=student |  TASK [calico_master : Calico Master | oc adm policy add-scc-to-user privileged system:serviceaccount:kube-system:calico] ***
2019-03-23 14:30:57,672 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,683 p=5597 u=student |  TASK [calico_master : Download Calicoctl] **********************************************************************
2019-03-23 14:30:57,703 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,714 p=5597 u=student |  TASK [kuryr : Perform OpenShift ServiceAccount config] *********************************************************
2019-03-23 14:30:57,732 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,746 p=5597 u=student |  TASK [kuryr : Create kuryr manifests tempdir] ******************************************************************
2019-03-23 14:30:57,763 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,775 p=5597 u=student |  TASK [kuryr : Create kuryr ConfigMap manifest] *****************************************************************
2019-03-23 14:30:57,792 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,803 p=5597 u=student |  TASK [kuryr : Create kuryr-controller Deployment manifest] *****************************************************
2019-03-23 14:30:57,821 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,832 p=5597 u=student |  TASK [kuryr : Create kuryr-cni DaemonSet manifest] *************************************************************
2019-03-23 14:30:57,850 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,861 p=5597 u=student |  TASK [kuryr : Apply ConfigMap manifest] ************************************************************************
2019-03-23 14:30:57,882 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,894 p=5597 u=student |  TASK [kuryr : Apply Controller Deployment manifest] ************************************************************
2019-03-23 14:30:57,912 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,923 p=5597 u=student |  TASK [kuryr : Apply kuryr-cni DaemonSet manifest] **************************************************************
2019-03-23 14:30:57,943 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,954 p=5597 u=student |  TASK [setup bootstrap settings] ********************************************************************************
2019-03-23 14:30:57,972 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:57,974 p=5597 u=student |  RUNNING HANDLER [openshift_master : restart master api] ********************************************************
2019-03-23 14:30:58,002 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:58,003 p=5597 u=student |  RUNNING HANDLER [openshift_master : restart master controllers] ************************************************
2019-03-23 14:30:58,031 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:30:58,042 p=5597 u=student |  TASK [Create group for deployment type] ************************************************************************
2019-03-23 14:30:58,079 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:58,086 p=5597 u=student |  PLAY [Configure API Aggregation on masters] ********************************************************************
2019-03-23 14:30:58,096 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:30:58,607 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:58,631 p=5597 u=student |  TASK [include_tasks] *******************************************************************************************
2019-03-23 14:30:58,673 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/playbooks/openshift-master/private/tasks/wire_aggregator.yml for master.lab.example.com
2019-03-23 14:30:58,687 p=5597 u=student |  TASK [Make temp cert dir] **************************************************************************************
2019-03-23 14:30:58,982 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:30:59,001 p=5597 u=student |  TASK [Check for First Master Aggregator Signer cert] ***********************************************************
2019-03-23 14:30:59,325 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:30:59,341 p=5597 u=student |  TASK [Check for First Master Aggregator Signer key] ************************************************************
2019-03-23 14:30:59,640 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:30:59,658 p=5597 u=student |  TASK [Creating First Master Aggregator signer certs] ***********************************************************
2019-03-23 14:31:00,430 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:31:00,439 p=5597 u=student |  TASK [Check for Aggregator Signer cert] ************************************************************************
2019-03-23 14:31:00,740 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:00,750 p=5597 u=student |  TASK [Check for Aggregator Signer key] *************************************************************************
2019-03-23 14:31:01,068 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:01,090 p=5597 u=student |  TASK [Copy Aggregator Signer certs from first master] **********************************************************
2019-03-23 14:31:01,115 p=5597 u=student |  skipping: [master.lab.example.com] => (item=front-proxy-ca.crt) 
2019-03-23 14:31:01,120 p=5597 u=student |  skipping: [master.lab.example.com] => (item=front-proxy-ca.key) 
2019-03-23 14:31:01,132 p=5597 u=student |  TASK [Copy Aggregator Signer certs to host] ********************************************************************
2019-03-23 14:31:01,154 p=5597 u=student |  skipping: [master.lab.example.com] => (item=front-proxy-ca.crt) 
2019-03-23 14:31:01,161 p=5597 u=student |  skipping: [master.lab.example.com] => (item=front-proxy-ca.key) 
2019-03-23 14:31:01,182 p=5597 u=student |  TASK [Check for first master api-client config] ****************************************************************
2019-03-23 14:31:01,495 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:31:01,512 p=5597 u=student |  TASK [Create first master api-client config for Aggregator] ****************************************************
2019-03-23 14:31:02,675 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:31:02,696 p=5597 u=student |  TASK [Copy first master api-client config for Aggregator] ******************************************************
2019-03-23 14:31:03,009 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=aggregator-front-proxy.crt)
2019-03-23 14:31:03,454 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=aggregator-front-proxy.key)
2019-03-23 14:31:03,755 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=aggregator-front-proxy.kubeconfig)
2019-03-23 14:31:03,768 p=5597 u=student |  TASK [Check for api-client config] *****************************************************************************
2019-03-23 14:31:04,085 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:04,109 p=5597 u=student |  TASK [Copy api-client config from first master] ****************************************************************
2019-03-23 14:31:04,136 p=5597 u=student |  skipping: [master.lab.example.com] => (item=aggregator-front-proxy.crt) 
2019-03-23 14:31:04,139 p=5597 u=student |  skipping: [master.lab.example.com] => (item=aggregator-front-proxy.key) 
2019-03-23 14:31:04,144 p=5597 u=student |  skipping: [master.lab.example.com] => (item=aggregator-front-proxy.kubeconfig) 
2019-03-23 14:31:04,155 p=5597 u=student |  TASK [Copy api-client config to host] **************************************************************************
2019-03-23 14:31:04,178 p=5597 u=student |  skipping: [master.lab.example.com] => (item=aggregator-front-proxy.crt) 
2019-03-23 14:31:04,184 p=5597 u=student |  skipping: [master.lab.example.com] => (item=aggregator-front-proxy.key) 
2019-03-23 14:31:04,190 p=5597 u=student |  skipping: [master.lab.example.com] => (item=aggregator-front-proxy.kubeconfig) 
2019-03-23 14:31:04,201 p=5597 u=student |  TASK [Delete temp directory] ***********************************************************************************
2019-03-23 14:31:04,515 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:04,525 p=5597 u=student |  TASK [Update master config] ************************************************************************************
2019-03-23 14:31:05,162 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:05,222 p=5597 u=student |  TASK [Setup extension file for service console UI] *************************************************************
2019-03-23 14:31:05,242 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:05,253 p=5597 u=student |  TASK [Update master config] ************************************************************************************
2019-03-23 14:31:05,272 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:05,284 p=5597 u=student |  TASK [restart master api] **************************************************************************************
2019-03-23 14:31:12,097 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:12,108 p=5597 u=student |  TASK [restart master controllers] ******************************************************************************
2019-03-23 14:31:13,326 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:13,336 p=5597 u=student |  TASK [Verify API Server] ***************************************************************************************
2019-03-23 14:31:13,817 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:13,825 p=5597 u=student |  PLAY [Re-enable excluder if it was previously enabled] *********************************************************
2019-03-23 14:31:13,836 p=5597 u=student |  TASK [openshift_excluder : Detecting Atomic Host Operating System] *********************************************
2019-03-23 14:31:14,299 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:14,310 p=5597 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_docker_excluder] **********************************
2019-03-23 14:31:14,470 p=5597 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-23 14:31:14,480 p=5597 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_openshift_excluder] *******************************
2019-03-23 14:31:14,519 p=5597 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-23 14:31:14,529 p=5597 u=student |  TASK [openshift_excluder : Fail if invalid openshift_excluder_action provided] *********************************
2019-03-23 14:31:14,547 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:14,557 p=5597 u=student |  TASK [openshift_excluder : Fail if r_openshift_excluder_upgrade_target is not defined] *************************
2019-03-23 14:31:14,577 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:14,586 p=5597 u=student |  TASK [openshift_excluder : Include main action task file] ******************************************************
2019-03-23 14:31:14,621 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/enable.yml for master.lab.example.com
2019-03-23 14:31:14,631 p=5597 u=student |  TASK [openshift_excluder : Install excluders] ******************************************************************
2019-03-23 14:31:14,664 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/install.yml for master.lab.example.com
2019-03-23 14:31:14,674 p=5597 u=student |  TASK [openshift_excluder : Install docker excluder - yum] ******************************************************
2019-03-23 14:31:14,695 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:14,706 p=5597 u=student |  TASK [openshift_excluder : Install docker excluder - dnf] ******************************************************
2019-03-23 14:31:14,724 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:14,735 p=5597 u=student |  TASK [openshift_excluder : Install openshift excluder - yum] ***************************************************
2019-03-23 14:31:14,755 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:14,766 p=5597 u=student |  TASK [openshift_excluder : Install openshift excluder - dnf] ***************************************************
2019-03-23 14:31:14,787 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:14,797 p=5597 u=student |  TASK [openshift_excluder : set_fact] ***************************************************************************
2019-03-23 14:31:14,818 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:14,829 p=5597 u=student |  TASK [openshift_excluder : Enable excluders] *******************************************************************
2019-03-23 14:31:14,868 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/exclude.yml for master.lab.example.com
2019-03-23 14:31:14,880 p=5597 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-23 14:31:15,355 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:15,365 p=5597 u=student |  TASK [openshift_excluder : Enable docker excluder] *************************************************************
2019-03-23 14:31:16,037 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:16,047 p=5597 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-23 14:31:16,512 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:16,522 p=5597 u=student |  TASK [openshift_excluder : Enable openshift excluder] **********************************************************
2019-03-23 14:31:16,982 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:16,987 p=5597 u=student |  PLAY [Master Install Checkpoint End] ***************************************************************************
2019-03-23 14:31:16,993 p=5597 u=student |  TASK [Set Master install 'Complete'] ***************************************************************************
2019-03-23 14:31:17,169 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:31:17,176 p=5597 u=student |  PLAY [Master Additional Install Checkpoint Start] **************************************************************
2019-03-23 14:31:17,184 p=5597 u=student |  TASK [Set Master Additional install 'In Progress'] *************************************************************
2019-03-23 14:31:17,364 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:31:17,371 p=5597 u=student |  PLAY [Additional master configuration] *************************************************************************
2019-03-23 14:31:17,388 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:31:18,105 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:18,135 p=5597 u=student |  TASK [openshift_project_request_template : Create temp file for template] **************************************
2019-03-23 14:31:18,152 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:18,164 p=5597 u=student |  TASK [openshift_project_request_template : Generate default project template] **********************************
2019-03-23 14:31:18,181 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:18,194 p=5597 u=student |  TASK [openshift_project_request_template : Write default project template to file] *****************************
2019-03-23 14:31:18,211 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:18,225 p=5597 u=student |  TASK [openshift_project_request_template : Apply template modifications] ***************************************
2019-03-23 14:31:18,242 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:18,253 p=5597 u=student |  TASK [openshift_project_request_template : Create or update project request template] **************************
2019-03-23 14:31:18,270 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:18,282 p=5597 u=student |  TASK [openshift_project_request_template : Delete temp file] ***************************************************
2019-03-23 14:31:18,302 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:18,316 p=5597 u=student |  TASK [openshift_examples : Create local temp dir for OpenShift examples copy] **********************************
2019-03-23 14:31:18,501 p=5597 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-23 14:31:18,514 p=5597 u=student |  TASK [openshift_examples : Chmod local temp dir for OpenShift examples copy] ***********************************
2019-03-23 14:31:18,690 p=5597 u=student |   [WARNING]: Consider using file module with mode rather than running chmod

2019-03-23 14:31:18,690 p=5597 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-23 14:31:18,703 p=5597 u=student |  TASK [openshift_examples : Create tar of OpenShift examples] ***************************************************
2019-03-23 14:31:18,925 p=5597 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-23 14:31:18,939 p=5597 u=student |  TASK [openshift_examples : Chmod local temp dir for OpenShift examples copy] ***********************************
2019-03-23 14:31:19,126 p=5597 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-23 14:31:19,138 p=5597 u=student |  TASK [openshift_examples : Create the remote OpenShift examples directory] *************************************
2019-03-23 14:31:19,477 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:19,488 p=5597 u=student |  TASK [openshift_examples : Unarchive the OpenShift examples on the remote] *************************************
2019-03-23 14:31:20,454 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:20,467 p=5597 u=student |  TASK [openshift_examples : Cleanup the OpenShift Examples temp dir] ********************************************
2019-03-23 14:31:20,647 p=5597 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-23 14:31:20,657 p=5597 u=student |  TASK [openshift_examples : Modify registry paths if registry_url is not registry.access.redhat.com] ************
2019-03-23 14:31:21,372 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:21,383 p=5597 u=student |  TASK [openshift_examples : Import RHEL streams] ****************************************************************
2019-03-23 14:31:22,189 p=5597 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/image-streams/image-streams-rhel7.json)
2019-03-23 14:31:22,753 p=5597 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/image-streams/dotnet_imagestreams.json)
2019-03-23 14:31:22,766 p=5597 u=student |  TASK [openshift_examples : Import Centos Image streams] ********************************************************
2019-03-23 14:31:22,800 p=5597 u=student |  skipping: [master.lab.example.com] => (item=/usr/share/openshift/examples/image-streams/image-streams-centos7.json) 
2019-03-23 14:31:22,804 p=5597 u=student |  skipping: [master.lab.example.com] => (item=/usr/share/openshift/examples/image-streams/dotnet_imagestreams_centos.json) 
2019-03-23 14:31:22,818 p=5597 u=student |  TASK [openshift_examples : Import db templates] ****************************************************************
2019-03-23 14:31:23,421 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:23,433 p=5597 u=student |  TASK [openshift_examples : Remove defunct quickstart template files] *******************************************
2019-03-23 14:31:23,753 p=5597 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/quickstart-templates/nodejs.json)
2019-03-23 14:31:24,040 p=5597 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/quickstart-templates/cakephp.json)
2019-03-23 14:31:24,359 p=5597 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/quickstart-templates/dancer.json)
2019-03-23 14:31:24,655 p=5597 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/quickstart-templates/django.json)
2019-03-23 14:31:24,666 p=5597 u=student |  TASK [openshift_examples : Remove defunct quickstart templates from openshift namespace] ***********************
2019-03-23 14:31:25,165 p=5597 u=student |  ok: [master.lab.example.com] => (item=nodejs-example)
2019-03-23 14:31:25,649 p=5597 u=student |  ok: [master.lab.example.com] => (item=cakephp-example)
2019-03-23 14:31:26,121 p=5597 u=student |  ok: [master.lab.example.com] => (item=dancer-example)
2019-03-23 14:31:26,610 p=5597 u=student |  ok: [master.lab.example.com] => (item=django-example)
2019-03-23 14:31:26,625 p=5597 u=student |  TASK [openshift_examples : Import quickstart-templates] ********************************************************
2019-03-23 14:31:27,323 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:27,335 p=5597 u=student |  TASK [openshift_examples : Remove old xPaas template files] ****************************************************
2019-03-23 14:31:27,645 p=5597 u=student |  ok: [master.lab.example.com] => (item=/usr/share/openshift/examples/xpaas-templates/sso70-basic.json)
2019-03-23 14:31:27,656 p=5597 u=student |  TASK [openshift_examples : Remove old xPaas templates from openshift namespace] ********************************
2019-03-23 14:31:28,138 p=5597 u=student |  ok: [master.lab.example.com] => (item=sso70-basic)
2019-03-23 14:31:28,151 p=5597 u=student |  TASK [openshift_examples : Import xPaas image streams] *********************************************************
2019-03-23 14:31:29,017 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:29,029 p=5597 u=student |  TASK [openshift_examples : Import xPaas templates] *************************************************************
2019-03-23 14:31:31,035 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:31,054 p=5597 u=student |  TASK [openshift_hosted_templates : Create local temp dir for OpenShift hosted templates copy] ******************
2019-03-23 14:31:31,265 p=5597 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-23 14:31:31,281 p=5597 u=student |  TASK [openshift_hosted_templates : Chmod local temp dir for OpenShift examples copy] ***************************
2019-03-23 14:31:31,468 p=5597 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-23 14:31:31,481 p=5597 u=student |  TASK [openshift_hosted_templates : Create tar of OpenShift examples] *******************************************
2019-03-23 14:31:31,667 p=5597 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-23 14:31:31,681 p=5597 u=student |  TASK [openshift_hosted_templates : Chmod local tar of OpenShift examples] **************************************
2019-03-23 14:31:31,858 p=5597 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-23 14:31:31,870 p=5597 u=student |  TASK [openshift_hosted_templates : Create remote OpenShift hosted templates directory] *************************
2019-03-23 14:31:32,203 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:32,216 p=5597 u=student |  TASK [openshift_hosted_templates : Unarchive the OpenShift hosted templates on the remote] *********************
2019-03-23 14:31:33,048 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:33,064 p=5597 u=student |  TASK [openshift_hosted_templates : Cleanup the OpenShift hosted templates temp dir] ****************************
2019-03-23 14:31:33,271 p=5597 u=student |  changed: [master.lab.example.com -> localhost]
2019-03-23 14:31:33,282 p=5597 u=student |  TASK [openshift_hosted_templates : Modify registry paths if registry_url is not registry.access.redhat.com] ****
2019-03-23 14:31:33,305 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:31:33,316 p=5597 u=student |  TASK [openshift_hosted_templates : Create temp directory for kubeconfig] ***************************************
2019-03-23 14:31:33,620 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:33,630 p=5597 u=student |  TASK [openshift_hosted_templates : Record kubeconfig tmp dir] **************************************************
2019-03-23 14:31:33,669 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:33,679 p=5597 u=student |  TASK [openshift_hosted_templates : Copy the admin client config(s)] ********************************************
2019-03-23 14:31:33,991 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:34,001 p=5597 u=student |  TASK [openshift_hosted_templates : Create or update hosted templates] ******************************************
2019-03-23 14:31:34,519 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:34,531 p=5597 u=student |  TASK [openshift_hosted_templates : Delete temp directory] ******************************************************
2019-03-23 14:31:34,836 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:31:34,850 p=5597 u=student |  TASK [openshift_manageiq : Add Management Infrastructure project] **********************************************
2019-03-23 14:31:36,197 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:36,210 p=5597 u=student |  TASK [openshift_manageiq : Create Admin and Image Inspector Service Account] ***********************************
2019-03-23 14:31:37,321 p=5597 u=student |  changed: [master.lab.example.com] => (item=management-admin)
2019-03-23 14:31:38,207 p=5597 u=student |  changed: [master.lab.example.com] => (item=inspector-admin)
2019-03-23 14:31:38,220 p=5597 u=student |  TASK [openshift_manageiq : Create manageiq cluster role] *******************************************************
2019-03-23 14:31:39,514 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:39,525 p=5597 u=student |  TASK [openshift_manageiq : Create Hawkular Metrics Admin Cluster Role] *****************************************
2019-03-23 14:31:40,629 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:31:40,640 p=5597 u=student |  TASK [openshift_manageiq : Configure role/user permissions] ****************************************************
2019-03-23 14:31:41,562 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'role', u'resource_name': u'admin', u'user': u'management-admin'})
2019-03-23 14:31:42,227 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'role', u'resource_name': u'admin', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-23 14:31:42,922 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'management-infra-admin', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-23 14:31:43,676 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'cluster-reader', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-23 14:31:44,363 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'scc', u'resource_name': u'privileged', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-23 14:31:45,064 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'system:image-puller', u'user': u'system:serviceaccount:management-infra:inspector-admin'})
2019-03-23 14:31:45,764 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'scc', u'resource_name': u'privileged', u'user': u'system:serviceaccount:management-infra:inspector-admin'})
2019-03-23 14:31:46,486 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'self-provisioner', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-23 14:31:47,181 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'hawkular-metrics-admin', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-23 14:31:47,195 p=5597 u=student |  TASK [openshift_manageiq : Configure 3_2 role/user permissions] ************************************************
2019-03-23 14:31:47,931 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'system:image-auditor', u'user': u'system:serviceaccount:management-infra:management-admin'})
2019-03-23 14:31:47,944 p=5597 u=student |  TASK [cockpit : Add iptables allow rules] **********************************************************************
2019-03-23 14:31:48,042 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'9090/tcp', u'service': u'cockpit-ws'}) 
2019-03-23 14:31:48,056 p=5597 u=student |  TASK [cockpit : Remove iptables rules] *************************************************************************
2019-03-23 14:31:48,088 p=5597 u=student |  TASK [cockpit : Add firewalld allow rules] *********************************************************************
2019-03-23 14:31:48,811 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'port': u'9090/tcp', u'service': u'cockpit-ws'})
2019-03-23 14:31:48,823 p=5597 u=student |  TASK [cockpit : Remove firewalld allow rules] ******************************************************************
2019-03-23 14:31:48,851 p=5597 u=student |  TASK [cockpit : Install cockpit-ws] ****************************************************************************
2019-03-23 14:31:53,444 p=5597 u=student |  changed: [master.lab.example.com] => (item=cockpit-ws)
2019-03-23 14:31:56,315 p=5597 u=student |  changed: [master.lab.example.com] => (item=cockpit-system)
2019-03-23 14:31:56,807 p=5597 u=student |  ok: [master.lab.example.com] => (item=cockpit-bridge)
2019-03-23 14:31:58,663 p=5597 u=student |  changed: [master.lab.example.com] => (item=cockpit-docker)
2019-03-23 14:32:01,332 p=5597 u=student |  changed: [master.lab.example.com] => (item=cockpit-kubernetes)
2019-03-23 14:32:01,345 p=5597 u=student |  TASK [cockpit : Enable cockpit-ws] *****************************************************************************
2019-03-23 14:32:01,763 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:01,775 p=5597 u=student |  TASK [flannel_register : Assures /etc/flannel dir exists] ******************************************************
2019-03-23 14:32:01,793 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:01,804 p=5597 u=student |  TASK [flannel_register : Generate etcd configuration for etcd] *************************************************
2019-03-23 14:32:01,822 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:01,833 p=5597 u=student |  TASK [flannel_register : Insert flannel configuration into etcd] ***********************************************
2019-03-23 14:32:01,851 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:01,858 p=5597 u=student |  PLAY [Master Additional Install Checkpoint End] ****************************************************************
2019-03-23 14:32:01,864 p=5597 u=student |  TASK [Set Master Additional install 'Complete'] ****************************************************************
2019-03-23 14:32:01,913 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:32:01,920 p=5597 u=student |  PLAY [Node Install Checkpoint Start] ***************************************************************************
2019-03-23 14:32:01,926 p=5597 u=student |  TASK [Set Node install 'In Progress'] **************************************************************************
2019-03-23 14:32:01,975 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:32:01,983 p=5597 u=student |  PLAY [Create OpenShift certificates for node hosts] ************************************************************
2019-03-23 14:32:02,004 p=5597 u=student |  TASK [openshift_node_certificates : Ensure CA certificate exists on openshift_ca_host] *************************
2019-03-23 14:32:02,368 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:32:02,379 p=5597 u=student |  TASK [openshift_node_certificates : fail] **********************************************************************
2019-03-23 14:32:02,400 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:02,410 p=5597 u=student |  TASK [openshift_node_certificates : Check status of node certificates] *****************************************
2019-03-23 14:32:02,782 p=5597 u=student |  ok: [master.lab.example.com] => (item=system:node:master.lab.example.com.crt)
2019-03-23 14:32:03,120 p=5597 u=student |  ok: [node1.lab.example.com] => (item=system:node:node1.lab.example.com.crt)
2019-03-23 14:32:03,167 p=5597 u=student |  ok: [node2.lab.example.com] => (item=system:node:node2.lab.example.com.crt)
2019-03-23 14:32:03,216 p=5597 u=student |  ok: [master.lab.example.com] => (item=system:node:master.lab.example.com.key)
2019-03-23 14:32:03,523 p=5597 u=student |  ok: [node1.lab.example.com] => (item=system:node:node1.lab.example.com.key)
2019-03-23 14:32:03,574 p=5597 u=student |  ok: [node2.lab.example.com] => (item=system:node:node2.lab.example.com.key)
2019-03-23 14:32:03,607 p=5597 u=student |  ok: [master.lab.example.com] => (item=system:node:master.lab.example.com.kubeconfig)
2019-03-23 14:32:03,893 p=5597 u=student |  ok: [node1.lab.example.com] => (item=system:node:node1.lab.example.com.kubeconfig)
2019-03-23 14:32:03,934 p=5597 u=student |  ok: [node2.lab.example.com] => (item=system:node:node2.lab.example.com.kubeconfig)
2019-03-23 14:32:03,965 p=5597 u=student |  ok: [master.lab.example.com] => (item=ca.crt)
2019-03-23 14:32:04,251 p=5597 u=student |  ok: [node1.lab.example.com] => (item=ca.crt)
2019-03-23 14:32:04,309 p=5597 u=student |  ok: [node2.lab.example.com] => (item=ca.crt)
2019-03-23 14:32:04,351 p=5597 u=student |  ok: [master.lab.example.com] => (item=server.key)
2019-03-23 14:32:04,639 p=5597 u=student |  ok: [node1.lab.example.com] => (item=server.key)
2019-03-23 14:32:04,678 p=5597 u=student |  ok: [node2.lab.example.com] => (item=server.key)
2019-03-23 14:32:04,686 p=5597 u=student |  ok: [master.lab.example.com] => (item=server.crt)
2019-03-23 14:32:04,963 p=5597 u=student |  ok: [node1.lab.example.com] => (item=server.crt)
2019-03-23 14:32:04,990 p=5597 u=student |  ok: [node2.lab.example.com] => (item=server.crt)
2019-03-23 14:32:05,003 p=5597 u=student |  TASK [openshift_node_certificates : set_fact] ******************************************************************
2019-03-23 14:32:05,074 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:32:05,113 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:05,118 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:05,141 p=5597 u=student |  TASK [openshift_node_certificates : Create openshift_generated_configs_dir if it does not exist] ***************
2019-03-23 14:32:05,618 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:32:05,626 p=5597 u=student |  ok: [node2.lab.example.com -> master.lab.example.com]
2019-03-23 14:32:05,666 p=5597 u=student |  ok: [node1.lab.example.com -> master.lab.example.com]
2019-03-23 14:32:05,684 p=5597 u=student |  TASK [openshift_node_certificates : find] **********************************************************************
2019-03-23 14:32:06,091 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:32:06,150 p=5597 u=student |  ok: [node1.lab.example.com -> master.lab.example.com]
2019-03-23 14:32:06,224 p=5597 u=student |  ok: [node2.lab.example.com -> master.lab.example.com]
2019-03-23 14:32:06,289 p=5597 u=student |  TASK [openshift_node_certificates : Generate the node client config] *******************************************
2019-03-23 14:32:07,111 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=master.lab.example.com)
2019-03-23 14:32:07,928 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=node1.lab.example.com)
2019-03-23 14:32:08,536 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=node2.lab.example.com)
2019-03-23 14:32:08,580 p=5597 u=student |  TASK [openshift_node_certificates : Generate the node server certificate] **************************************
2019-03-23 14:32:09,344 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=master.lab.example.com)
2019-03-23 14:32:10,126 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=node1.lab.example.com)
2019-03-23 14:32:11,112 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com] => (item=node2.lab.example.com)
2019-03-23 14:32:11,135 p=5597 u=student |  TASK [openshift_node_certificates : Create a tarball of the node config directories] ***************************
2019-03-23 14:32:11,642 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:32:11,707 p=5597 u=student |  changed: [node2.lab.example.com -> master.lab.example.com]
2019-03-23 14:32:11,748 p=5597 u=student |  changed: [node1.lab.example.com -> master.lab.example.com]
2019-03-23 14:32:11,767 p=5597 u=student |  TASK [openshift_node_certificates : Retrieve the node config tarballs from the master] *************************
2019-03-23 14:32:12,194 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:32:12,249 p=5597 u=student |  changed: [node1.lab.example.com -> master.lab.example.com]
2019-03-23 14:32:12,334 p=5597 u=student |  changed: [node2.lab.example.com -> master.lab.example.com]
2019-03-23 14:32:12,344 p=5597 u=student |  TASK [openshift_node_certificates : Ensure certificate directory exists] ***************************************
2019-03-23 14:32:12,751 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:12,762 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:12,775 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:12,786 p=5597 u=student |  TASK [openshift_node_certificates : Unarchive the tarball on the node] *****************************************
2019-03-23 14:32:13,852 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:13,856 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:13,893 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:13,905 p=5597 u=student |  TASK [openshift_node_certificates : Delete local temp directory] ***********************************************
2019-03-23 14:32:14,202 p=5597 u=student |  ok: [node1.lab.example.com -> localhost]
2019-03-23 14:32:14,217 p=5597 u=student |  ok: [master.lab.example.com -> localhost]
2019-03-23 14:32:14,241 p=5597 u=student |  ok: [node2.lab.example.com -> localhost]
2019-03-23 14:32:14,253 p=5597 u=student |  TASK [openshift_node_certificates : Copy OpenShift CA to system CA trust] **************************************
2019-03-23 14:32:14,658 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'cert': u'/etc/origin/node/ca.crt', u'id': u'openshift'})
2019-03-23 14:32:14,684 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'cert': u'/etc/origin/node/ca.crt', u'id': u'openshift'})
2019-03-23 14:32:14,701 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'cert': u'/etc/origin/node/ca.crt', u'id': u'openshift'})
2019-03-23 14:32:14,705 p=5597 u=student |  RUNNING HANDLER [openshift_node_certificates : update ca trust] ************************************************
2019-03-23 14:32:15,683 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:15,708 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:15,714 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:15,715 p=5597 u=student |  RUNNING HANDLER [openshift_node_certificates : check for container runtime after updating ca trust] ************
2019-03-23 14:32:16,147 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:16,154 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:16,186 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:16,188 p=5597 u=student |  RUNNING HANDLER [openshift_node_certificates : restart container runtime after updating ca trust] **************
2019-03-23 14:32:19,490 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:19,501 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:19,550 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:19,560 p=5597 u=student |  PLAY [Disable excluders] ***************************************************************************************
2019-03-23 14:32:19,571 p=5597 u=student |  TASK [openshift_excluder : Detecting Atomic Host Operating System] *********************************************
2019-03-23 14:32:19,951 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:32:19,975 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:19,984 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:19,994 p=5597 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_docker_excluder] **********************************
2019-03-23 14:32:20,042 p=5597 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-23 14:32:20,069 p=5597 u=student |  ok: [node1.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-23 14:32:20,083 p=5597 u=student |  ok: [node2.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-23 14:32:20,094 p=5597 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_openshift_excluder] *******************************
2019-03-23 14:32:20,143 p=5597 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-23 14:32:20,174 p=5597 u=student |  ok: [node1.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-23 14:32:20,189 p=5597 u=student |  ok: [node2.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-23 14:32:20,201 p=5597 u=student |  TASK [openshift_excluder : Fail if invalid openshift_excluder_action provided] *********************************
2019-03-23 14:32:20,241 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:20,250 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:20,256 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:20,268 p=5597 u=student |  TASK [openshift_excluder : Fail if r_openshift_excluder_upgrade_target is not defined] *************************
2019-03-23 14:32:20,315 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:20,316 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:20,326 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:20,337 p=5597 u=student |  TASK [openshift_excluder : Include main action task file] ******************************************************
2019-03-23 14:32:20,423 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/disable.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:32:20,435 p=5597 u=student |  TASK [openshift_excluder : Include verify_upgrade.yml when upgrading] ******************************************
2019-03-23 14:32:20,467 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:20,468 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:20,476 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:20,486 p=5597 u=student |  TASK [openshift_excluder : Disable excluders before the upgrade to remove older excluding expressions] *********
2019-03-23 14:32:20,559 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/unexclude.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:32:20,570 p=5597 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-23 14:32:21,002 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:21,007 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:32:21,020 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:21,033 p=5597 u=student |  TASK [openshift_excluder : disable docker excluder] ************************************************************
2019-03-23 14:32:21,509 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:21,524 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:21,531 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:21,542 p=5597 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-23 14:32:21,933 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:21,944 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:32:21,949 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:21,959 p=5597 u=student |  TASK [openshift_excluder : disable openshift excluder] *********************************************************
2019-03-23 14:32:22,025 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:22,035 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:22,361 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:22,371 p=5597 u=student |  TASK [openshift_excluder : Include install.yml] ****************************************************************
2019-03-23 14:32:22,443 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/install.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:32:22,459 p=5597 u=student |  TASK [openshift_excluder : Install docker excluder - yum] ******************************************************
2019-03-23 14:32:22,491 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:23,429 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:23,445 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:23,456 p=5597 u=student |  TASK [openshift_excluder : Install docker excluder - dnf] ******************************************************
2019-03-23 14:32:23,487 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:23,506 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:23,512 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:23,523 p=5597 u=student |  TASK [openshift_excluder : Install openshift excluder - yum] ***************************************************
2019-03-23 14:32:23,565 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:25,855 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:25,875 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:25,887 p=5597 u=student |  TASK [openshift_excluder : Install openshift excluder - dnf] ***************************************************
2019-03-23 14:32:25,930 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:25,936 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:25,945 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:25,957 p=5597 u=student |  TASK [openshift_excluder : set_fact] ***************************************************************************
2019-03-23 14:32:25,998 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:26,019 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:26,028 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:26,040 p=5597 u=student |  TASK [openshift_excluder : Include exclude.yml] ****************************************************************
2019-03-23 14:32:26,130 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/exclude.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:32:26,164 p=5597 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-23 14:32:26,589 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:26,620 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:32:26,634 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:26,645 p=5597 u=student |  TASK [openshift_excluder : Enable docker excluder] *************************************************************
2019-03-23 14:32:27,085 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:27,110 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:27,125 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:27,137 p=5597 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-23 14:32:27,559 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:32:27,575 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:27,612 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:27,623 p=5597 u=student |  TASK [openshift_excluder : Enable openshift excluder] **********************************************************
2019-03-23 14:32:28,071 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:28,074 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:28,093 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:28,105 p=5597 u=student |  TASK [openshift_excluder : Include unexclude.yml] **************************************************************
2019-03-23 14:32:28,202 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/unexclude.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:32:28,250 p=5597 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-23 14:32:28,812 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:32:28,852 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:28,859 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:28,871 p=5597 u=student |  TASK [openshift_excluder : disable docker excluder] ************************************************************
2019-03-23 14:32:28,926 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:28,927 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:28,933 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:28,945 p=5597 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-23 14:32:29,588 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:29,649 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:32:29,656 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:29,666 p=5597 u=student |  TASK [openshift_excluder : disable openshift excluder] *********************************************************
2019-03-23 14:32:30,322 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:30,323 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:30,353 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:30,359 p=5597 u=student |  PLAY [Evaluate node groups] ************************************************************************************
2019-03-23 14:32:30,364 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:32:30,761 p=5597 u=student |  ok: [localhost]
2019-03-23 14:32:30,787 p=5597 u=student |  TASK [Evaluate oo_containerized_master_nodes] ******************************************************************
2019-03-23 14:32:30,857 p=5597 u=student |  skipping: [localhost] => (item=master.lab.example.com) 
2019-03-23 14:32:30,879 p=5597 u=student |  skipping: [localhost] => (item=node1.lab.example.com) 
2019-03-23 14:32:30,903 p=5597 u=student |  skipping: [localhost] => (item=node2.lab.example.com) 
2019-03-23 14:32:30,908 p=5597 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_containerized_master_nodes

2019-03-23 14:32:30,909 p=5597 u=student |  PLAY [Configure containerized nodes] ***************************************************************************
2019-03-23 14:32:30,910 p=5597 u=student |  skipping: no hosts matched
2019-03-23 14:32:30,915 p=5597 u=student |  PLAY [Configure nodes] *****************************************************************************************
2019-03-23 14:32:30,955 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:32:31,612 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:32:31,645 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:31,665 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:31,690 p=5597 u=student |  TASK [openshift_clock : Determine if chrony is installed] ******************************************************
2019-03-23 14:32:32,107 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:32,134 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:32,135 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:32,147 p=5597 u=student |  TASK [openshift_clock : Install ntp package] *******************************************************************
2019-03-23 14:32:32,189 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:32,190 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:32,198 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:32,211 p=5597 u=student |  TASK [openshift_clock : Start and enable ntpd/chronyd] *********************************************************
2019-03-23 14:32:32,650 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:32,658 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:32,685 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:32,696 p=5597 u=student |  TASK [openshift_cloud_provider : Set cloud provider facts] *****************************************************
2019-03-23 14:32:32,730 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:32,731 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:32,740 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:32,751 p=5597 u=student |  TASK [openshift_cloud_provider : Create cloudprovider config dir] **********************************************
2019-03-23 14:32:32,787 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:32,787 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:32,795 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:32,805 p=5597 u=student |  TASK [openshift_cloud_provider : include the defined cloud provider files] *************************************
2019-03-23 14:32:32,841 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:32,841 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:32,852 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:32,862 p=5597 u=student |  TASK [openshift_node : fail] ***********************************************************************************
2019-03-23 14:32:32,900 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:32,901 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:32,907 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:32,918 p=5597 u=student |  TASK [openshift_node : Check for NetworkManager service] *******************************************************
2019-03-23 14:32:33,352 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:32:33,361 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:33,369 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:33,383 p=5597 u=student |  TASK [openshift_node : Set fact using_network_manager] *********************************************************
2019-03-23 14:32:33,430 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:32:33,449 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:33,454 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:33,465 p=5597 u=student |  TASK [openshift_node : Install dnsmasq] ************************************************************************
2019-03-23 14:32:35,594 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:35,606 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:35,678 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:35,688 p=5597 u=student |  TASK [openshift_node : ensure origin/node directory exists] ****************************************************
2019-03-23 14:32:36,110 p=5597 u=student |  changed: [master.lab.example.com] => (item=/etc/origin)
2019-03-23 14:32:36,163 p=5597 u=student |  changed: [node1.lab.example.com] => (item=/etc/origin)
2019-03-23 14:32:36,174 p=5597 u=student |  changed: [node2.lab.example.com] => (item=/etc/origin)
2019-03-23 14:32:36,515 p=5597 u=student |  changed: [node1.lab.example.com] => (item=/etc/origin/node)
2019-03-23 14:32:36,525 p=5597 u=student |  changed: [master.lab.example.com] => (item=/etc/origin/node)
2019-03-23 14:32:36,528 p=5597 u=student |  changed: [node2.lab.example.com] => (item=/etc/origin/node)
2019-03-23 14:32:36,541 p=5597 u=student |  TASK [openshift_node : Install node-dnsmasq.conf] **************************************************************
2019-03-23 14:32:37,428 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:37,448 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:37,462 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:37,473 p=5597 u=student |  TASK [openshift_node : fail] ***********************************************************************************
2019-03-23 14:32:37,513 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:37,513 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:37,519 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:37,531 p=5597 u=student |  TASK [openshift_node : Install NetworkManager during node_bootstrap provisioning] ******************************
2019-03-23 14:32:37,571 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:37,572 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:37,580 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:37,593 p=5597 u=student |  TASK [openshift_node : Install network manager dispatch script] ************************************************
2019-03-23 14:32:37,630 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:37,635 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:37,641 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:37,653 p=5597 u=student |  TASK [openshift_node : Install dnsmasq configuration] **********************************************************
2019-03-23 14:32:38,543 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:38,558 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:38,567 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:38,576 p=5597 u=student |  TASK [openshift_node : Deploy additional dnsmasq.conf] *********************************************************
2019-03-23 14:32:38,607 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:32:38,614 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:32:38,622 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:32:38,633 p=5597 u=student |  TASK [openshift_node : Enable dnsmasq] *************************************************************************
2019-03-23 14:32:39,150 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:39,157 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:39,170 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:39,182 p=5597 u=student |  TASK [openshift_node : Install network manager dispatch script] ************************************************
2019-03-23 14:32:39,924 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:39,933 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:39,961 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:39,962 p=5597 u=student |  RUNNING HANDLER [openshift_node : restart NetworkManager] ******************************************************
2019-03-23 14:32:40,527 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:40,545 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:40,585 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:40,588 p=5597 u=student |  RUNNING HANDLER [openshift_node : restart dnsmasq] *************************************************************
2019-03-23 14:32:41,190 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:41,193 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:41,200 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:41,213 p=5597 u=student |  TASK [openshift_node : Add iptables allow rules] ***************************************************************
2019-03-23 14:32:41,272 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'10250/tcp', u'service': u'Kubernetes kubelet'}) 
2019-03-23 14:32:41,273 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'80/tcp', u'service': u'http'}) 
2019-03-23 14:32:41,316 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'https'}) 
2019-03-23 14:32:41,317 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'cond': u'openshift_use_openshift_sdn | bool', u'port': u'4789/udp', u'service': u'OpenShift OVS sdn'}) 
2019-03-23 14:32:41,317 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'179/tcp', u'service': u'Calico BGP Port'}) 
2019-03-23 14:32:41,317 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'/tcp', u'service': u'Kubernetes service NodePort TCP'}) 
2019-03-23 14:32:41,318 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'/udp', u'service': u'Kubernetes service NodePort UDP'}) 
2019-03-23 14:32:41,338 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'10250/tcp', u'service': u'Kubernetes kubelet'}) 
2019-03-23 14:32:41,339 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'80/tcp', u'service': u'http'}) 
2019-03-23 14:32:41,351 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'10250/tcp', u'service': u'Kubernetes kubelet'}) 
2019-03-23 14:32:41,351 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'80/tcp', u'service': u'http'}) 
2019-03-23 14:32:41,370 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'https'}) 
2019-03-23 14:32:41,371 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': u'openshift_use_openshift_sdn | bool', u'port': u'4789/udp', u'service': u'OpenShift OVS sdn'}) 
2019-03-23 14:32:41,371 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': False, u'port': u'179/tcp', u'service': u'Calico BGP Port'}) 
2019-03-23 14:32:41,372 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': False, u'port': u'/tcp', u'service': u'Kubernetes service NodePort TCP'}) 
2019-03-23 14:32:41,372 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': False, u'port': u'/udp', u'service': u'Kubernetes service NodePort UDP'}) 
2019-03-23 14:32:41,376 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'https'}) 
2019-03-23 14:32:41,376 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': u'openshift_use_openshift_sdn | bool', u'port': u'4789/udp', u'service': u'OpenShift OVS sdn'}) 
2019-03-23 14:32:41,378 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': False, u'port': u'179/tcp', u'service': u'Calico BGP Port'}) 
2019-03-23 14:32:41,379 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': False, u'port': u'/tcp', u'service': u'Kubernetes service NodePort TCP'}) 
2019-03-23 14:32:41,381 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': False, u'port': u'/udp', u'service': u'Kubernetes service NodePort UDP'}) 
2019-03-23 14:32:41,391 p=5597 u=student |  TASK [openshift_node : Remove iptables rules] ******************************************************************
2019-03-23 14:32:41,446 p=5597 u=student |  TASK [openshift_node : Add firewalld allow rules] **************************************************************
2019-03-23 14:32:42,150 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'port': u'10250/tcp', u'service': u'Kubernetes kubelet'})
2019-03-23 14:32:42,246 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'port': u'10250/tcp', u'service': u'Kubernetes kubelet'})
2019-03-23 14:32:42,248 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'port': u'10250/tcp', u'service': u'Kubernetes kubelet'})
2019-03-23 14:32:42,870 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'port': u'80/tcp', u'service': u'http'})
2019-03-23 14:32:42,886 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'port': u'80/tcp', u'service': u'http'})
2019-03-23 14:32:42,901 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'port': u'80/tcp', u'service': u'http'})
2019-03-23 14:32:43,515 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'https'})
2019-03-23 14:32:43,636 p=5597 u=student |  ok: [master.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'https'})
2019-03-23 14:32:43,682 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'port': u'443/tcp', u'service': u'https'})
2019-03-23 14:32:44,175 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'cond': u'openshift_use_openshift_sdn | bool', u'port': u'4789/udp', u'service': u'OpenShift OVS sdn'})
2019-03-23 14:32:44,190 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': False, u'port': u'179/tcp', u'service': u'Calico BGP Port'}) 
2019-03-23 14:32:44,202 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': False, u'port': u'/tcp', u'service': u'Kubernetes service NodePort TCP'}) 
2019-03-23 14:32:44,221 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={u'cond': False, u'port': u'/udp', u'service': u'Kubernetes service NodePort UDP'}) 
2019-03-23 14:32:44,420 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'cond': u'openshift_use_openshift_sdn | bool', u'port': u'4789/udp', u'service': u'OpenShift OVS sdn'})
2019-03-23 14:32:44,421 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': False, u'port': u'179/tcp', u'service': u'Calico BGP Port'}) 
2019-03-23 14:32:44,421 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': False, u'port': u'/tcp', u'service': u'Kubernetes service NodePort TCP'}) 
2019-03-23 14:32:44,421 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={u'cond': False, u'port': u'/udp', u'service': u'Kubernetes service NodePort UDP'}) 
2019-03-23 14:32:44,424 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'cond': u'openshift_use_openshift_sdn | bool', u'port': u'4789/udp', u'service': u'OpenShift OVS sdn'})
2019-03-23 14:32:44,424 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'179/tcp', u'service': u'Calico BGP Port'}) 
2019-03-23 14:32:44,425 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'/tcp', u'service': u'Kubernetes service NodePort TCP'}) 
2019-03-23 14:32:44,425 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'/udp', u'service': u'Kubernetes service NodePort UDP'}) 
2019-03-23 14:32:44,436 p=5597 u=student |  TASK [openshift_node : Remove firewalld allow rules] ***********************************************************
2019-03-23 14:32:44,489 p=5597 u=student |  TASK [openshift_node : Checking for journald.conf] *************************************************************
2019-03-23 14:32:44,877 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:44,889 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:32:44,911 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:44,923 p=5597 u=student |  TASK [openshift_node : Create journald persistence directories] ************************************************
2019-03-23 14:32:45,342 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:45,385 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:45,398 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:45,409 p=5597 u=student |  TASK [openshift_node : Update journald setup] ******************************************************************
2019-03-23 14:32:45,991 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'Storage', u'val': u'persistent'})
2019-03-23 14:32:46,048 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'Storage', u'val': u'persistent'})
2019-03-23 14:32:46,049 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'var': u'Storage', u'val': u'persistent'})
2019-03-23 14:32:46,413 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'Compress', u'val': True})
2019-03-23 14:32:46,446 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'Compress', u'val': True})
2019-03-23 14:32:46,467 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'var': u'Compress', u'val': True})
2019-03-23 14:32:46,778 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'SyncIntervalSec', u'val': u'1s'})
2019-03-23 14:32:46,816 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'SyncIntervalSec', u'val': u'1s'})
2019-03-23 14:32:46,859 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'var': u'SyncIntervalSec', u'val': u'1s'})
2019-03-23 14:32:47,199 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'RateLimitInterval', u'val': u'1s'})
2019-03-23 14:32:47,307 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'var': u'RateLimitInterval', u'val': u'1s'})
2019-03-23 14:32:47,395 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'RateLimitInterval', u'val': u'1s'})
2019-03-23 14:32:47,731 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'var': u'RateLimitBurst', u'val': 10000})
2019-03-23 14:32:47,791 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'RateLimitBurst', u'val': 10000})
2019-03-23 14:32:47,801 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'RateLimitBurst', u'val': 10000})
2019-03-23 14:32:48,137 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'SystemMaxUse', u'val': u'8G'})
2019-03-23 14:32:48,200 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'var': u'SystemMaxUse', u'val': u'8G'})
2019-03-23 14:32:48,205 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'SystemMaxUse', u'val': u'8G'})
2019-03-23 14:32:48,528 p=5597 u=student |  ok: [node2.lab.example.com] => (item={u'var': u'SystemKeepFree', u'val': u'20%'})
2019-03-23 14:32:48,578 p=5597 u=student |  ok: [master.lab.example.com] => (item={u'var': u'SystemKeepFree', u'val': u'20%'})
2019-03-23 14:32:48,580 p=5597 u=student |  ok: [node1.lab.example.com] => (item={u'var': u'SystemKeepFree', u'val': u'20%'})
2019-03-23 14:32:48,960 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'SystemMaxFileSize', u'val': u'10M'})
2019-03-23 14:32:48,971 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'SystemMaxFileSize', u'val': u'10M'})
2019-03-23 14:32:48,997 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'var': u'SystemMaxFileSize', u'val': u'10M'})
2019-03-23 14:32:49,354 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'MaxRetentionSec', u'val': u'1month'})
2019-03-23 14:32:49,387 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'MaxRetentionSec', u'val': u'1month'})
2019-03-23 14:32:49,413 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'var': u'MaxRetentionSec', u'val': u'1month'})
2019-03-23 14:32:49,719 p=5597 u=student |  ok: [node2.lab.example.com] => (item={u'var': u'MaxFileSec', u'val': u'1day'})
2019-03-23 14:32:49,763 p=5597 u=student |  ok: [node1.lab.example.com] => (item={u'var': u'MaxFileSec', u'val': u'1day'})
2019-03-23 14:32:49,796 p=5597 u=student |  ok: [master.lab.example.com] => (item={u'var': u'MaxFileSec', u'val': u'1day'})
2019-03-23 14:32:50,110 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'ForwardToSyslog', u'val': False})
2019-03-23 14:32:50,161 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'ForwardToSyslog', u'val': False})
2019-03-23 14:32:50,312 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'var': u'ForwardToSyslog', u'val': False})
2019-03-23 14:32:50,504 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'var': u'ForwardToWall', u'val': False})
2019-03-23 14:32:50,546 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'var': u'ForwardToWall', u'val': False})
2019-03-23 14:32:50,651 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'var': u'ForwardToWall', u'val': False})
2019-03-23 14:32:50,668 p=5597 u=student |  TASK [openshift_node : Restart journald] ***********************************************************************
2019-03-23 14:32:51,166 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:32:51,167 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:32:51,171 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:32:51,183 p=5597 u=student |  TASK [openshift_node : Disable swap] ***************************************************************************
2019-03-23 14:32:51,791 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:32:51,801 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:32:51,801 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:32:51,812 p=5597 u=student |  TASK [openshift_node : Install Node package, sdn-ovs, conntrack packages] **************************************
2019-03-23 14:32:58,475 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'name': u'atomic-openshift-node-3.9.14'})
2019-03-23 14:32:58,866 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'name': u'atomic-openshift-node-3.9.14'})
2019-03-23 14:32:58,995 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'name': u'atomic-openshift-node-3.9.14'})
2019-03-23 14:33:03,203 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'name': u'atomic-openshift-sdn-ovs-3.9.14', u'install': True})
2019-03-23 14:33:03,721 p=5597 u=student |  ok: [node1.lab.example.com] => (item={u'name': u'conntrack-tools'})
2019-03-23 14:33:04,413 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'name': u'atomic-openshift-sdn-ovs-3.9.14', u'install': True})
2019-03-23 14:33:04,559 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'name': u'atomic-openshift-sdn-ovs-3.9.14', u'install': True})
2019-03-23 14:33:04,913 p=5597 u=student |  ok: [node2.lab.example.com] => (item={u'name': u'conntrack-tools'})
2019-03-23 14:33:05,053 p=5597 u=student |  ok: [master.lab.example.com] => (item={u'name': u'conntrack-tools'})
2019-03-23 14:33:05,071 p=5597 u=student |  TASK [openshift_node : Pre-pull node image when containerized] *************************************************
2019-03-23 14:33:05,114 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:05,115 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:05,121 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:05,134 p=5597 u=student |  TASK [openshift_node : Restart cri-o] **************************************************************************
2019-03-23 14:33:05,178 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:05,179 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:05,186 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:05,198 p=5597 u=student |  TASK [openshift_node : restart NetworkManager to ensure resolv.conf is present] ********************************
2019-03-23 14:33:05,231 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:05,237 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:05,249 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:05,261 p=5597 u=student |  TASK [openshift_node : sysctl] *********************************************************************************
2019-03-23 14:33:05,852 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:33:05,867 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:33:05,875 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:33:05,885 p=5597 u=student |  TASK [openshift_node : Check for credentials file for registry auth] *******************************************
2019-03-23 14:33:05,927 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:05,929 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:05,940 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:05,951 p=5597 u=student |  TASK [openshift_node : Create credentials for registry auth] ***************************************************
2019-03-23 14:33:05,991 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:05,998 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:06,003 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:06,012 p=5597 u=student |  TASK [openshift_node : Create credentials for registry auth (alternative)] *************************************
2019-03-23 14:33:06,044 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:06,055 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:06,066 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:06,078 p=5597 u=student |  TASK [openshift_node : Setup ro mount of /root/.docker for containerized hosts] ********************************
2019-03-23 14:33:06,123 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:06,124 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:06,131 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:06,145 p=5597 u=student |  TASK [openshift_node : Install Node service file] **************************************************************
2019-03-23 14:33:07,291 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:33:07,395 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:33:07,419 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:33:07,429 p=5597 u=student |  TASK [openshift_node : Install Node dependencies docker service file] ******************************************
2019-03-23 14:33:07,462 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:07,470 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:07,479 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:07,491 p=5597 u=student |  TASK [openshift_node : Create the openvswitch service env file] ************************************************
2019-03-23 14:33:07,530 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:07,530 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:07,541 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:07,553 p=5597 u=student |  TASK [openshift_node : Install OpenvSwitch docker service file] ************************************************
2019-03-23 14:33:07,598 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:07,598 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:07,609 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:07,621 p=5597 u=student |  TASK [openshift_node : Configure Node settings] ****************************************************************
2019-03-23 14:33:08,050 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'regex': u'^OPTIONS=', u'line': u'OPTIONS=--loglevel=2 '})
2019-03-23 14:33:08,116 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'regex': u'^OPTIONS=', u'line': u'OPTIONS=--loglevel=2 '})
2019-03-23 14:33:08,124 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'regex': u'^OPTIONS=', u'line': u'OPTIONS=--loglevel=2 '})
2019-03-23 14:33:08,450 p=5597 u=student |  ok: [node1.lab.example.com] => (item={u'regex': u'^CONFIG_FILE=', u'line': u'CONFIG_FILE=/etc/origin/node/node-config.yaml'})
2019-03-23 14:33:08,686 p=5597 u=student |  ok: [node2.lab.example.com] => (item={u'regex': u'^CONFIG_FILE=', u'line': u'CONFIG_FILE=/etc/origin/node/node-config.yaml'})
2019-03-23 14:33:08,776 p=5597 u=student |  ok: [master.lab.example.com] => (item={u'regex': u'^CONFIG_FILE=', u'line': u'CONFIG_FILE=/etc/origin/node/node-config.yaml'})
2019-03-23 14:33:09,031 p=5597 u=student |  changed: [node1.lab.example.com] => (item={u'regex': u'^IMAGE_VERSION=', u'line': u'IMAGE_VERSION=v3.9.14'})
2019-03-23 14:33:09,066 p=5597 u=student |  changed: [node2.lab.example.com] => (item={u'regex': u'^IMAGE_VERSION=', u'line': u'IMAGE_VERSION=v3.9.14'})
2019-03-23 14:33:09,131 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'regex': u'^IMAGE_VERSION=', u'line': u'IMAGE_VERSION=v3.9.14'})
2019-03-23 14:33:09,169 p=5597 u=student |  TASK [openshift_node : Configure Proxy Settings] ***************************************************************
2019-03-23 14:33:09,275 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'regex': u'^HTTP_PROXY=', u'line': u'HTTP_PROXY='}) 
2019-03-23 14:33:09,295 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'regex': u'^HTTPS_PROXY=', u'line': u'HTTPS_PROXY='}) 
2019-03-23 14:33:09,296 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'regex': u'^NO_PROXY=', u'line': u'NO_PROXY=[],172.30.0.0/16,10.128.0.0/14'}) 
2019-03-23 14:33:09,298 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={u'regex': u'^HTTP_PROXY=', u'line': u'HTTP_PROXY='}) 
2019-03-23 14:33:09,316 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={u'regex': u'^HTTPS_PROXY=', u'line': u'HTTPS_PROXY='}) 
2019-03-23 14:33:09,316 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={u'regex': u'^NO_PROXY=', u'line': u'NO_PROXY=[],172.30.0.0/16,10.128.0.0/14'}) 
2019-03-23 14:33:09,329 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={u'regex': u'^HTTP_PROXY=', u'line': u'HTTP_PROXY='}) 
2019-03-23 14:33:09,340 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={u'regex': u'^HTTPS_PROXY=', u'line': u'HTTPS_PROXY='}) 
2019-03-23 14:33:09,351 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={u'regex': u'^NO_PROXY=', u'line': u'NO_PROXY=[],172.30.0.0/16,10.128.0.0/14'}) 
2019-03-23 14:33:09,364 p=5597 u=student |  TASK [openshift_node : Pre-pull node system container image] ***************************************************
2019-03-23 14:33:09,405 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:09,406 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:09,411 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:09,422 p=5597 u=student |  TASK [openshift_node : Install or Update node system container] ************************************************
2019-03-23 14:33:09,466 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:09,467 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:09,477 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:09,488 p=5597 u=student |  TASK [openshift_node : set_fact] *******************************************************************************
2019-03-23 14:33:09,530 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:09,530 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:09,536 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:09,548 p=5597 u=student |  TASK [openshift_node : set_fact] *******************************************************************************
2019-03-23 14:33:09,589 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:09,590 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:09,599 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:09,610 p=5597 u=student |  TASK [openshift_node : Pre-pull OpenVSwitch system container image] ********************************************
2019-03-23 14:33:09,652 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:09,653 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:09,660 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:09,672 p=5597 u=student |  TASK [openshift_node : Install or Update OpenVSwitch system container] *****************************************
2019-03-23 14:33:09,712 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:09,712 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:09,723 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:09,735 p=5597 u=student |  TASK [openshift_node : Pre-pull openvswitch image] *************************************************************
2019-03-23 14:33:09,771 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:09,772 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:09,785 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:09,795 p=5597 u=student |  TASK [openshift_node : Start and enable openvswitch service] ***************************************************
2019-03-23 14:33:09,827 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:09,831 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:09,845 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:09,856 p=5597 u=student |  TASK [openshift_node : set_fact] *******************************************************************************
2019-03-23 14:33:09,918 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:33:09,924 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:33:09,925 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:33:09,937 p=5597 u=student |  TASK [openshift_node : file] ***********************************************************************************
2019-03-23 14:33:09,985 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:09,989 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:10,003 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:10,014 p=5597 u=student |  TASK [openshift_node : Create the Node config] *****************************************************************
2019-03-23 14:33:11,210 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:33:11,303 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:33:11,316 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:33:11,325 p=5597 u=student |  TASK [openshift_node : Configure Node Environment Variables] ***************************************************
2019-03-23 14:33:11,383 p=5597 u=student |  TASK [openshift_node : Configure AWS Cloud Provider Settings] **************************************************
2019-03-23 14:33:11,431 p=5597 u=student |  skipping: [master.lab.example.com] => (item=None) 
2019-03-23 14:33:11,432 p=5597 u=student |  skipping: [master.lab.example.com] => (item=None) 
2019-03-23 14:33:11,461 p=5597 u=student |  skipping: [node1.lab.example.com] => (item=None) 
2019-03-23 14:33:11,462 p=5597 u=student |  skipping: [node1.lab.example.com] => (item=None) 
2019-03-23 14:33:11,469 p=5597 u=student |  skipping: [node2.lab.example.com] => (item=None) 
2019-03-23 14:33:11,476 p=5597 u=student |  skipping: [node2.lab.example.com] => (item=None) 
2019-03-23 14:33:11,488 p=5597 u=student |  TASK [openshift_node : Wait for master API to become available before proceeding] ******************************
2019-03-23 14:33:11,538 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:11,541 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:11,550 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:11,560 p=5597 u=student |  TASK [openshift_node : Start and enable node dep] **************************************************************
2019-03-23 14:33:11,603 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:11,608 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:11,619 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:11,630 p=5597 u=student |  TASK [openshift_node : Start and enable node] ******************************************************************
2019-03-23 14:33:14,028 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:33:14,052 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:33:14,235 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:33:14,253 p=5597 u=student |  TASK [openshift_node : Dump logs from node service if it failed] ***********************************************
2019-03-23 14:33:14,299 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:14,300 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:14,310 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:14,322 p=5597 u=student |  TASK [openshift_node : Abort if node failed to start] **********************************************************
2019-03-23 14:33:14,369 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:14,374 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:14,375 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:14,386 p=5597 u=student |  TASK [openshift_node : set_fact] *******************************************************************************
2019-03-23 14:33:14,438 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:33:14,453 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:33:14,468 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:33:14,479 p=5597 u=student |  TASK [openshift_node : Install NFS storage plugin dependencies] ************************************************
2019-03-23 14:33:15,069 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:33:15,129 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:33:15,213 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:33:15,225 p=5597 u=student |  TASK [openshift_node : Check for existence of nfs sebooleans] **************************************************
2019-03-23 14:33:15,647 p=5597 u=student |  ok: [master.lab.example.com] => (item=virt_use_nfs)
2019-03-23 14:33:15,685 p=5597 u=student |  ok: [node2.lab.example.com] => (item=virt_use_nfs)
2019-03-23 14:33:15,695 p=5597 u=student |  ok: [node1.lab.example.com] => (item=virt_use_nfs)
2019-03-23 14:33:16,030 p=5597 u=student |  ok: [node2.lab.example.com] => (item=virt_sandbox_use_nfs)
2019-03-23 14:33:16,034 p=5597 u=student |  ok: [master.lab.example.com] => (item=virt_sandbox_use_nfs)
2019-03-23 14:33:16,075 p=5597 u=student |  ok: [node1.lab.example.com] => (item=virt_sandbox_use_nfs)
2019-03-23 14:33:16,089 p=5597 u=student |  TASK [openshift_node : Set seboolean to allow nfs storage plugin access from containers] ***********************
2019-03-23 14:33:16,753 p=5597 u=student |  ok: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:15.633006', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_use_nfs'], u'rc': 0, 'item': u'virt_use_nfs', u'delta': u'0:00:00.004823', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:15.628183', '_ansible_ignore_errors': None, 'failed': False})
2019-03-23 14:33:16,765 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:16.004171', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_sandbox_use_nfs'], u'rc': 0, 'item': u'virt_sandbox_use_nfs', u'delta': u'0:00:00.003447', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:16.000724', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:16,811 p=5597 u=student |  ok: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:15.632702', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_use_nfs'], u'rc': 0, 'item': u'virt_use_nfs', u'delta': u'0:00:00.004534', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:15.628168', '_ansible_ignore_errors': None, 'failed': False})
2019-03-23 14:33:16,822 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:16.052950', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_sandbox_use_nfs'], u'rc': 0, 'item': u'virt_sandbox_use_nfs', u'delta': u'0:00:00.003852', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:16.049098', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:16,826 p=5597 u=student |  ok: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:15.619552', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_use_nfs'], u'rc': 0, 'item': u'virt_use_nfs', u'delta': u'0:00:00.004560', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:15.614992', '_ansible_ignore_errors': None, 'failed': False})
2019-03-23 14:33:16,837 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:16.011243', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_sandbox_use_nfs'], u'rc': 0, 'item': u'virt_sandbox_use_nfs', u'delta': u'0:00:00.004284', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:16.006959', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:16,851 p=5597 u=student |  TASK [openshift_node : Set seboolean to allow nfs storage plugin access from containers (python 3)] ************
2019-03-23 14:33:16,903 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:15.619552', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_use_nfs'], u'rc': 0, 'item': u'virt_use_nfs', u'delta': u'0:00:00.004560', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:15.614992', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:16,904 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:16.011243', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_sandbox_use_nfs'], u'rc': 0, 'item': u'virt_sandbox_use_nfs', u'delta': u'0:00:00.004284', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:16.006959', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:16,934 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:15.633006', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_use_nfs'], u'rc': 0, 'item': u'virt_use_nfs', u'delta': u'0:00:00.004823', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:15.628183', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:16,940 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:15.632702', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_use_nfs'], u'rc': 0, 'item': u'virt_use_nfs', u'delta': u'0:00:00.004534', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:15.628168', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:16,941 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:16.052950', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_sandbox_use_nfs'], u'rc': 0, 'item': u'virt_sandbox_use_nfs', u'delta': u'0:00:00.003852', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:16.049098', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:16,946 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:16.004171', '_ansible_no_log': False, u'stdout': u'virt_use_nfs --> on', u'cmd': [u'getsebool', u'virt_sandbox_use_nfs'], u'rc': 0, 'item': u'virt_sandbox_use_nfs', u'delta': u'0:00:00.003447', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_nfs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_nfs --> on'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:16.000724', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:16,961 p=5597 u=student |  TASK [openshift_node : Install GlusterFS storage plugin dependencies] ******************************************
2019-03-23 14:33:20,831 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:33:20,856 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:33:20,898 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:33:20,909 p=5597 u=student |  TASK [openshift_node : Check for existence of fusefs sebooleans] ***********************************************
2019-03-23 14:33:21,381 p=5597 u=student |  ok: [master.lab.example.com] => (item=virt_use_fusefs)
2019-03-23 14:33:21,430 p=5597 u=student |  ok: [node1.lab.example.com] => (item=virt_use_fusefs)
2019-03-23 14:33:21,468 p=5597 u=student |  ok: [node2.lab.example.com] => (item=virt_use_fusefs)
2019-03-23 14:33:21,750 p=5597 u=student |  ok: [master.lab.example.com] => (item=virt_sandbox_use_fusefs)
2019-03-23 14:33:21,760 p=5597 u=student |  ok: [node1.lab.example.com] => (item=virt_sandbox_use_fusefs)
2019-03-23 14:33:21,790 p=5597 u=student |  ok: [node2.lab.example.com] => (item=virt_sandbox_use_fusefs)
2019-03-23 14:33:21,803 p=5597 u=student |  TASK [openshift_node : Set seboolean to allow gluster storage plugin access from containers] *******************
2019-03-23 14:33:22,713 p=5597 u=student |  changed: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:21.383298', '_ansible_no_log': False, u'stdout': u'virt_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_use_fusefs'], u'rc': 0, 'item': u'virt_use_fusefs', u'delta': u'0:00:00.003916', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:21.379382', '_ansible_ignore_errors': None, 'failed': False})
2019-03-23 14:33:22,801 p=5597 u=student |  changed: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:21.411730', '_ansible_no_log': False, u'stdout': u'virt_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_use_fusefs'], u'rc': 0, 'item': u'virt_use_fusefs', u'delta': u'0:00:00.005008', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:21.406722', '_ansible_ignore_errors': None, 'failed': False})
2019-03-23 14:33:23,129 p=5597 u=student |  changed: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:21.355709', '_ansible_no_log': False, u'stdout': u'virt_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_use_fusefs'], u'rc': 0, 'item': u'virt_use_fusefs', u'delta': u'0:00:00.003716', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:21.351993', '_ansible_ignore_errors': None, 'failed': False})
2019-03-23 14:33:23,595 p=5597 u=student |  changed: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:21.738391', '_ansible_no_log': False, u'stdout': u'virt_sandbox_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_sandbox_use_fusefs'], u'rc': 0, 'item': u'virt_sandbox_use_fusefs', u'delta': u'0:00:00.003564', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_sandbox_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:21.734827', '_ansible_ignore_errors': None, 'failed': False})
2019-03-23 14:33:23,671 p=5597 u=student |  changed: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:21.771763', '_ansible_no_log': False, u'stdout': u'virt_sandbox_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_sandbox_use_fusefs'], u'rc': 0, 'item': u'virt_sandbox_use_fusefs', u'delta': u'0:00:00.003109', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_sandbox_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:21.768654', '_ansible_ignore_errors': None, 'failed': False})
2019-03-23 14:33:23,991 p=5597 u=student |  changed: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:21.729118', '_ansible_no_log': False, u'stdout': u'virt_sandbox_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_sandbox_use_fusefs'], u'rc': 0, 'item': u'virt_sandbox_use_fusefs', u'delta': u'0:00:00.003731', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_sandbox_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:21.725387', '_ansible_ignore_errors': None, 'failed': False})
2019-03-23 14:33:24,004 p=5597 u=student |  TASK [openshift_node : Set seboolean to allow gluster storage plugin access from containers (python 3)] ********
2019-03-23 14:33:24,071 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:21.355709', '_ansible_no_log': False, u'stdout': u'virt_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_use_fusefs'], u'rc': 0, 'item': u'virt_use_fusefs', u'delta': u'0:00:00.003716', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:21.351993', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:24,072 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:21.729118', '_ansible_no_log': False, u'stdout': u'virt_sandbox_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_sandbox_use_fusefs'], u'rc': 0, 'item': u'virt_sandbox_use_fusefs', u'delta': u'0:00:00.003731', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_sandbox_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:21.725387', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:24,103 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:21.383298', '_ansible_no_log': False, u'stdout': u'virt_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_use_fusefs'], u'rc': 0, 'item': u'virt_use_fusefs', u'delta': u'0:00:00.003916', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:21.379382', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:24,105 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:21.738391', '_ansible_no_log': False, u'stdout': u'virt_sandbox_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_sandbox_use_fusefs'], u'rc': 0, 'item': u'virt_sandbox_use_fusefs', u'delta': u'0:00:00.003564', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_sandbox_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:21.734827', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:24,114 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:21.411730', '_ansible_no_log': False, u'stdout': u'virt_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_use_fusefs'], u'rc': 0, 'item': u'virt_use_fusefs', u'delta': u'0:00:00.005008', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:21.406722', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:24,123 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={'_ansible_parsed': True, 'stderr_lines': [], '_ansible_item_result': True, u'end': u'2019-03-23 14:33:21.771763', '_ansible_no_log': False, u'stdout': u'virt_sandbox_use_fusefs --> off', u'cmd': [u'getsebool', u'virt_sandbox_use_fusefs'], u'rc': 0, 'item': u'virt_sandbox_use_fusefs', u'delta': u'0:00:00.003109', u'stderr': u'', u'changed': False, u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': False, u'_raw_params': u'getsebool virt_sandbox_use_fusefs', u'removes': None, u'warn': True, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'virt_sandbox_use_fusefs --> off'], 'failed_when_result': False, u'start': u'2019-03-23 14:33:21.768654', '_ansible_ignore_errors': None, 'failed': False}) 
2019-03-23 14:33:24,137 p=5597 u=student |  TASK [openshift_node : Install Ceph storage plugin dependencies] ***********************************************
2019-03-23 14:33:32,600 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:33:34,795 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:33:34,799 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:33:34,811 p=5597 u=student |  TASK [openshift_node : Install iSCSI storage plugin dependencies] **********************************************
2019-03-23 14:33:38,141 p=5597 u=student |  changed: [node1.lab.example.com] => (item=iscsi-initiator-utils)
2019-03-23 14:33:38,649 p=5597 u=student |  changed: [node2.lab.example.com] => (item=iscsi-initiator-utils)
2019-03-23 14:33:38,658 p=5597 u=student |  changed: [master.lab.example.com] => (item=iscsi-initiator-utils)
2019-03-23 14:33:40,939 p=5597 u=student |  changed: [node1.lab.example.com] => (item=device-mapper-multipath)
2019-03-23 14:33:41,301 p=5597 u=student |  changed: [master.lab.example.com] => (item=device-mapper-multipath)
2019-03-23 14:33:41,489 p=5597 u=student |  changed: [node2.lab.example.com] => (item=device-mapper-multipath)
2019-03-23 14:33:41,500 p=5597 u=student |  TASK [openshift_node : restart services] ***********************************************************************
2019-03-23 14:33:41,978 p=5597 u=student |  changed: [master.lab.example.com] => (item=multipathd)
2019-03-23 14:33:42,037 p=5597 u=student |  changed: [node1.lab.example.com] => (item=multipathd)
2019-03-23 14:33:42,041 p=5597 u=student |  changed: [node2.lab.example.com] => (item=multipathd)
2019-03-23 14:33:42,428 p=5597 u=student |  ok: [node1.lab.example.com] => (item=rpcbind)
2019-03-23 14:33:42,437 p=5597 u=student |  ok: [node2.lab.example.com] => (item=rpcbind)
2019-03-23 14:33:42,450 p=5597 u=student |  ok: [master.lab.example.com] => (item=rpcbind)
2019-03-23 14:33:42,923 p=5597 u=student |  changed: [master.lab.example.com] => (item=iscsid)
2019-03-23 14:33:42,939 p=5597 u=student |  changed: [node1.lab.example.com] => (item=iscsid)
2019-03-23 14:33:42,945 p=5597 u=student |  changed: [node2.lab.example.com] => (item=iscsid)
2019-03-23 14:33:42,962 p=5597 u=student |  TASK [openshift_node : Template multipath configuration] *******************************************************
2019-03-23 14:33:44,012 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:33:44,168 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:33:44,182 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:33:44,195 p=5597 u=student |  TASK [openshift_node : Enable multipath] ***********************************************************************
2019-03-23 14:33:44,611 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:33:44,635 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:33:44,663 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:33:44,674 p=5597 u=student |  TASK [openshift_node : Create OpenvSwitch service.d directory] *************************************************
2019-03-23 14:33:45,080 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:33:45,089 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:33:45,092 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:33:45,104 p=5597 u=student |  TASK [openshift_node : Install OpenvSwitch service OOM fix] ****************************************************
2019-03-23 14:33:46,243 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:33:46,308 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:33:46,322 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:33:46,331 p=5597 u=student |  TASK [tuned : Check for tuned package] *************************************************************************
2019-03-23 14:33:46,758 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:33:46,765 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:33:46,769 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:33:46,781 p=5597 u=student |  TASK [tuned : Set tuned OpenShift variables] *******************************************************************
2019-03-23 14:33:46,839 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:33:46,847 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:33:46,859 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:33:46,870 p=5597 u=student |  TASK [tuned : Ensure directory structure exists] ***************************************************************
2019-03-23 14:33:47,302 p=5597 u=student |  changed: [node1.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:47,342 p=5597 u=student |  ok: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:47,380 p=5597 u=student |  changed: [node2.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:47,663 p=5597 u=student |  changed: [node1.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:47,718 p=5597 u=student |  changed: [node2.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:47,757 p=5597 u=student |  ok: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:48,043 p=5597 u=student |  changed: [node1.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:48,052 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,064 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,096 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': u's0', 'seuser': u'system_u', 'serole': u'object_r', 'ctime': 1553065475.4003277, 'state': u'file', 'gid': 0, 'mode': u'0644', 'mtime': 1522031926.0, 'owner': u'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': u'usr_t'}) 
2019-03-23 14:33:48,097 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': u's0', 'seuser': u'system_u', 'serole': u'object_r', 'ctime': 1553065475.4003277, 'state': u'file', 'gid': 0, 'mode': u'0644', 'mtime': 1522031926.0, 'owner': u'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': u'usr_t'}) 
2019-03-23 14:33:48,119 p=5597 u=student |  changed: [node2.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:48,120 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,122 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,123 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,132 p=5597 u=student |  ok: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:48,133 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,134 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': u's0', 'seuser': u'system_u', 'serole': u'object_r', 'ctime': 1553065475.4003277, 'state': u'file', 'gid': 0, 'mode': u'0644', 'mtime': 1522031926.0, 'owner': u'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': u'usr_t'}) 
2019-03-23 14:33:48,144 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,147 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,155 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,171 p=5597 u=student |  TASK [tuned : Ensure files are populated from templates] *******************************************************
2019-03-23 14:33:48,238 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,278 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,279 p=5597 u=student |  skipping: [master.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,292 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,293 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,312 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4013276, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4013276, 'owner': 'root', 'path': u'openshift', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,313 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-control-plane', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,336 p=5597 u=student |  skipping: [node2.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,347 p=5597 u=student |  skipping: [node1.lab.example.com] => (item={'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'state': 'directory', 'ctime': 1553065475.4003277, 'serole': 'object_r', 'gid': 0, 'mode': '0755', 'mtime': 1553065475.4003277, 'owner': 'root', 'path': u'openshift-node', 'size': 24, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'}) 
2019-03-23 14:33:48,939 p=5597 u=student |  ok: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:49,002 p=5597 u=student |  changed: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:49,064 p=5597 u=student |  changed: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/recommend.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'recommend.conf', 'size': 268, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:49,671 p=5597 u=student |  ok: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:49,763 p=5597 u=student |  changed: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:49,810 p=5597 u=student |  changed: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4013276, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift/tuned.conf', 'size': 593, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:50,394 p=5597 u=student |  ok: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:50,675 p=5597 u=student |  changed: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:50,698 p=5597 u=student |  changed: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-control-plane/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': 's0', 'seuser': 'system_u', 'serole': 'object_r', 'ctime': 1553065475.4003277, 'state': 'file', 'gid': 0, 'mode': '0644', 'mtime': 1522031926.0, 'owner': 'root', 'path': u'openshift-control-plane/tuned.conf', 'size': 744, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': 'usr_t'})
2019-03-23 14:33:51,279 p=5597 u=student |  ok: [master.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': u's0', 'seuser': u'system_u', 'serole': u'object_r', 'ctime': 1553065475.4003277, 'state': u'file', 'gid': 0, 'mode': u'0644', 'mtime': 1522031926.0, 'owner': u'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': u'usr_t'})
2019-03-23 14:33:51,406 p=5597 u=student |  changed: [node1.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': u's0', 'seuser': u'system_u', 'serole': u'object_r', 'ctime': 1553065475.4003277, 'state': u'file', 'gid': 0, 'mode': u'0644', 'mtime': 1522031926.0, 'owner': u'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': u'usr_t'})
2019-03-23 14:33:51,408 p=5597 u=student |  changed: [node2.lab.example.com] => (item={'src': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates/openshift-node/tuned.conf', 'group': u'root', 'uid': 0, 'selevel': u's0', 'seuser': u'system_u', 'serole': u'object_r', 'ctime': 1553065475.4003277, 'state': u'file', 'gid': 0, 'mode': u'0644', 'mtime': 1522031926.0, 'owner': u'root', 'path': u'openshift-node/tuned.conf', 'size': 135, 'root': u'/usr/share/ansible/openshift-ansible/roles/tuned/templates', 'setype': u'usr_t'})
2019-03-23 14:33:51,420 p=5597 u=student |  TASK [tuned : Make tuned use the recommended tuned profile on restart] *****************************************
2019-03-23 14:33:51,903 p=5597 u=student |  changed: [master.lab.example.com] => (item=/etc/tuned/active_profile)
2019-03-23 14:33:51,904 p=5597 u=student |  changed: [node1.lab.example.com] => (item=/etc/tuned/active_profile)
2019-03-23 14:33:51,935 p=5597 u=student |  changed: [node2.lab.example.com] => (item=/etc/tuned/active_profile)
2019-03-23 14:33:52,279 p=5597 u=student |  changed: [node1.lab.example.com] => (item=/etc/tuned/profile_mode)
2019-03-23 14:33:52,293 p=5597 u=student |  changed: [master.lab.example.com] => (item=/etc/tuned/profile_mode)
2019-03-23 14:33:52,298 p=5597 u=student |  changed: [node2.lab.example.com] => (item=/etc/tuned/profile_mode)
2019-03-23 14:33:52,311 p=5597 u=student |  TASK [tuned : Restart tuned service] ***************************************************************************
2019-03-23 14:33:53,569 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:33:53,591 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:33:53,979 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:33:53,990 p=5597 u=student |  TASK [nickhammond.logrotate : nickhammond.logrotate | Install logrotate] ***************************************
2019-03-23 14:33:54,595 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:33:54,622 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:33:54,625 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:33:54,636 p=5597 u=student |  TASK [nickhammond.logrotate : nickhammond.logrotate | Setup logrotate.d scripts] *******************************
2019-03-23 14:33:54,682 p=5597 u=student |  RUNNING HANDLER [openshift_node : restart openvswitch] *********************************************************
2019-03-23 14:33:55,564 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:33:55,581 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:33:55,677 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:33:55,684 p=5597 u=student |  RUNNING HANDLER [openshift_node : restart openvswitch pause] ***************************************************
2019-03-23 14:33:55,717 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:55,718 p=5597 u=student |  RUNNING HANDLER [openshift_node : restart node] ****************************************************************
2019-03-23 14:33:55,786 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:33:55,794 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:33:55,807 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:33:55,808 p=5597 u=student |  RUNNING HANDLER [openshift_node : reload systemd units] ********************************************************
2019-03-23 14:33:56,551 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:33:56,637 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:33:56,707 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:33:56,719 p=5597 u=student |  PLAY [create additional node network plugin groups] ************************************************************
2019-03-23 14:33:56,730 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:33:57,524 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:33:57,578 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:33:57,627 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:33:57,661 p=5597 u=student |  TASK [group_by] ************************************************************************************************
2019-03-23 14:33:57,709 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:33:57,730 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:33:57,733 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:33:57,746 p=5597 u=student |  TASK [group_by] ************************************************************************************************
2019-03-23 14:33:57,802 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:33:57,817 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:33:57,821 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:33:57,834 p=5597 u=student |  TASK [group_by] ************************************************************************************************
2019-03-23 14:33:57,880 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:33:57,905 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:33:57,907 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:33:57,919 p=5597 u=student |  TASK [group_by] ************************************************************************************************
2019-03-23 14:33:57,965 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:33:57,990 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:33:57,993 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:33:58,005 p=5597 u=student |  TASK [group_by] ************************************************************************************************
2019-03-23 14:33:58,061 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:33:58,072 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:33:58,091 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:33:58,101 p=5597 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_nodes_use_flannel

2019-03-23 14:33:58,102 p=5597 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_nodes_use_calico

2019-03-23 14:33:58,102 p=5597 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_nodes_use_contiv

2019-03-23 14:33:58,102 p=5597 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_nodes_use_kuryr

2019-03-23 14:33:58,103 p=5597 u=student |  PLAY [etcd_client node config] *********************************************************************************
2019-03-23 14:33:58,103 p=5597 u=student |  skipping: no hosts matched
2019-03-23 14:33:58,105 p=5597 u=student |  PLAY [Additional node config] **********************************************************************************
2019-03-23 14:33:58,106 p=5597 u=student |  skipping: no hosts matched
2019-03-23 14:33:58,108 p=5597 u=student |  PLAY [Additional node config] **********************************************************************************
2019-03-23 14:33:58,108 p=5597 u=student |  skipping: no hosts matched
2019-03-23 14:33:58,110 p=5597 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: oo_nodes_use_nuage

2019-03-23 14:33:58,111 p=5597 u=student |  PLAY [Additional node config] **********************************************************************************
2019-03-23 14:33:58,111 p=5597 u=student |  skipping: no hosts matched
2019-03-23 14:33:58,114 p=5597 u=student |  PLAY [Configure Contiv masters] ********************************************************************************
2019-03-23 14:33:58,126 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:33:58,802 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:33:58,841 p=5597 u=student |  PLAY [Configure rest of Contiv nodes] **************************************************************************
2019-03-23 14:33:58,845 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:33:59,868 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:33:59,948 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:33:59,996 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:00,040 p=5597 u=student |  ok: [services.lab.example.com]
2019-03-23 14:34:00,098 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:34:00,128 p=5597 u=student |  PLAY [Configure Kuryr node] ************************************************************************************
2019-03-23 14:34:00,128 p=5597 u=student |  skipping: no hosts matched
2019-03-23 14:34:00,136 p=5597 u=student |  PLAY [Additional node config] **********************************************************************************
2019-03-23 14:34:00,150 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:34:01,167 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:34:01,243 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:34:01,395 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:01,441 p=5597 u=student |  TASK [openshift_manage_node : Wait for master API to become available before proceeding] ***********************
2019-03-23 14:34:01,462 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:01,483 p=5597 u=student |  TASK [openshift_manage_node : Wait for Node Registration] ******************************************************
2019-03-23 14:34:02,433 p=5597 u=student |  ok: [node1.lab.example.com -> master.lab.example.com]
2019-03-23 14:34:02,457 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:34:02,596 p=5597 u=student |  ok: [node2.lab.example.com -> master.lab.example.com]
2019-03-23 14:34:02,610 p=5597 u=student |  TASK [openshift_manage_node : include_tasks] *******************************************************************
2019-03-23 14:34:02,688 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_manage_node/tasks/config.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:34:02,711 p=5597 u=student |  TASK [openshift_manage_node : Set node schedulability] *********************************************************
2019-03-23 14:34:03,701 p=5597 u=student |  ok: [node2.lab.example.com -> master.lab.example.com]
2019-03-23 14:34:03,767 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:34:03,776 p=5597 u=student |  ok: [node1.lab.example.com -> master.lab.example.com]
2019-03-23 14:34:03,798 p=5597 u=student |  TASK [openshift_manage_node : Label nodes] *********************************************************************
2019-03-23 14:34:04,919 p=5597 u=student |  ok: [node1.lab.example.com -> master.lab.example.com]
2019-03-23 14:34:04,975 p=5597 u=student |  changed: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:34:04,999 p=5597 u=student |  ok: [node2.lab.example.com -> master.lab.example.com]
2019-03-23 14:34:05,010 p=5597 u=student |  TASK [openshift_manage_node : include_tasks] *******************************************************************
2019-03-23 14:34:05,088 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_manage_node/tasks/set_default_node_role.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:34:05,113 p=5597 u=student |  TASK [openshift_manage_node : Retrieve non-infra, non-master nodes that are not yet labeled compute] ***********
2019-03-23 14:34:05,674 p=5597 u=student |  ok: [master.lab.example.com -> master.lab.example.com]
2019-03-23 14:34:05,690 p=5597 u=student |  TASK [openshift_manage_node : label non-master non-infra nodes compute] ****************************************
2019-03-23 14:34:05,722 p=5597 u=student |  TASK [Create group for deployment type] ************************************************************************
2019-03-23 14:34:05,768 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:05,795 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:34:05,806 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:34:05,813 p=5597 u=student |  PLAY [Re-enable excluder if it was previously enabled] *********************************************************
2019-03-23 14:34:05,825 p=5597 u=student |  TASK [openshift_excluder : Detecting Atomic Host Operating System] *********************************************
2019-03-23 14:34:06,261 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:06,274 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:34:06,292 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:34:06,305 p=5597 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_docker_excluder] **********************************
2019-03-23 14:34:06,357 p=5597 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-23 14:34:06,386 p=5597 u=student |  ok: [node1.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-23 14:34:06,401 p=5597 u=student |  ok: [node2.lab.example.com] => {
    "r_openshift_excluder_enable_docker_excluder": true
}
2019-03-23 14:34:06,412 p=5597 u=student |  TASK [openshift_excluder : Debug r_openshift_excluder_enable_openshift_excluder] *******************************
2019-03-23 14:34:06,473 p=5597 u=student |  ok: [master.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-23 14:34:06,495 p=5597 u=student |  ok: [node1.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-23 14:34:06,507 p=5597 u=student |  ok: [node2.lab.example.com] => {
    "r_openshift_excluder_enable_openshift_excluder": true
}
2019-03-23 14:34:06,520 p=5597 u=student |  TASK [openshift_excluder : Fail if invalid openshift_excluder_action provided] *********************************
2019-03-23 14:34:06,557 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:06,563 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:34:06,577 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:34:06,589 p=5597 u=student |  TASK [openshift_excluder : Fail if r_openshift_excluder_upgrade_target is not defined] *************************
2019-03-23 14:34:06,634 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:06,634 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:34:06,644 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:34:06,656 p=5597 u=student |  TASK [openshift_excluder : Include main action task file] ******************************************************
2019-03-23 14:34:06,739 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/enable.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:34:06,751 p=5597 u=student |  TASK [openshift_excluder : Install excluders] ******************************************************************
2019-03-23 14:34:06,830 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/install.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:34:06,842 p=5597 u=student |  TASK [openshift_excluder : Install docker excluder - yum] ******************************************************
2019-03-23 14:34:06,884 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:06,885 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:34:06,891 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:34:06,903 p=5597 u=student |  TASK [openshift_excluder : Install docker excluder - dnf] ******************************************************
2019-03-23 14:34:06,948 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:06,949 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:34:06,955 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:34:06,967 p=5597 u=student |  TASK [openshift_excluder : Install openshift excluder - yum] ***************************************************
2019-03-23 14:34:07,013 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:07,013 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:34:07,026 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:34:07,038 p=5597 u=student |  TASK [openshift_excluder : Install openshift excluder - dnf] ***************************************************
2019-03-23 14:34:07,075 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:07,086 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:34:07,097 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:34:07,111 p=5597 u=student |  TASK [openshift_excluder : set_fact] ***************************************************************************
2019-03-23 14:34:07,178 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:07,182 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:34:07,191 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:34:07,204 p=5597 u=student |  TASK [openshift_excluder : Enable excluders] *******************************************************************
2019-03-23 14:34:07,304 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_excluder/tasks/exclude.yml for master.lab.example.com, node1.lab.example.com, node2.lab.example.com
2019-03-23 14:34:07,323 p=5597 u=student |  TASK [openshift_excluder : Check for docker-excluder] **********************************************************
2019-03-23 14:34:07,802 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:34:07,816 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:07,839 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:34:07,851 p=5597 u=student |  TASK [openshift_excluder : Enable docker excluder] *************************************************************
2019-03-23 14:34:08,307 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:34:08,335 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:34:08,355 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:34:08,372 p=5597 u=student |  TASK [openshift_excluder : Check for openshift excluder] *******************************************************
2019-03-23 14:34:08,792 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:08,856 p=5597 u=student |  ok: [node1.lab.example.com]
2019-03-23 14:34:08,864 p=5597 u=student |  ok: [node2.lab.example.com]
2019-03-23 14:34:08,877 p=5597 u=student |  TASK [openshift_excluder : Enable openshift excluder] **********************************************************
2019-03-23 14:34:09,354 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:34:09,368 p=5597 u=student |  changed: [node1.lab.example.com]
2019-03-23 14:34:09,397 p=5597 u=student |  changed: [node2.lab.example.com]
2019-03-23 14:34:09,403 p=5597 u=student |  PLAY [Node Install Checkpoint End] *****************************************************************************
2019-03-23 14:34:09,411 p=5597 u=student |  TASK [Set Node install 'Complete'] *****************************************************************************
2019-03-23 14:34:09,462 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:34:09,469 p=5597 u=student |  PLAY [GlusterFS Install Checkpoint Start] **********************************************************************
2019-03-23 14:34:09,479 p=5597 u=student |  TASK [Set GlusterFS install 'In Progress'] *********************************************************************
2019-03-23 14:34:09,498 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:34:09,504 p=5597 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: glusterfs

2019-03-23 14:34:09,504 p=5597 u=student |  PLAY [Configure GlusterFS hosts] *******************************************************************************
2019-03-23 14:34:09,504 p=5597 u=student |  skipping: no hosts matched
2019-03-23 14:34:09,506 p=5597 u=student |   [WARNING]: Could not match supplied host pattern, ignoring: glusterfs_registry

2019-03-23 14:34:09,506 p=5597 u=student |  PLAY [Configure GlusterFS registry hosts] **********************************************************************
2019-03-23 14:34:09,506 p=5597 u=student |  skipping: no hosts matched
2019-03-23 14:34:09,509 p=5597 u=student |  PLAY [Load kernel modules for nodes] ***************************************************************************
2019-03-23 14:34:09,521 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:34:09,562 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:09,563 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:34:09,569 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:34:09,581 p=5597 u=student |  TASK [openshift_storage_glusterfs : Ensure device mapper modules loaded] ***************************************
2019-03-23 14:34:09,617 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:09,625 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:34:09,640 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:34:09,654 p=5597 u=student |  TASK [openshift_storage_glusterfs : load kernel modules] *******************************************************
2019-03-23 14:34:09,690 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:09,704 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:34:09,715 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:34:09,721 p=5597 u=student |  PLAY [Configure GlusterFS] *************************************************************************************
2019-03-23 14:34:09,732 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:34:09,751 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:09,763 p=5597 u=student |  TASK [openshift_storage_glusterfs : Create temp directory for doing work in] ***********************************
2019-03-23 14:34:09,784 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:09,796 p=5597 u=student |  TASK [openshift_storage_glusterfs : include_tasks] *************************************************************
2019-03-23 14:34:09,815 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:09,828 p=5597 u=student |  TASK [openshift_storage_glusterfs : include_tasks] *************************************************************
2019-03-23 14:34:09,848 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:09,860 p=5597 u=student |  TASK [openshift_storage_glusterfs : Delete temp directory] *****************************************************
2019-03-23 14:34:09,887 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:09,893 p=5597 u=student |  PLAY [GlusterFS Install Checkpoint End] ************************************************************************
2019-03-23 14:34:09,903 p=5597 u=student |  TASK [Set GlusterFS install 'Complete'] ************************************************************************
2019-03-23 14:34:09,922 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:34:09,928 p=5597 u=student |  PLAY [Hosted Install Checkpoint Start] *************************************************************************
2019-03-23 14:34:09,937 p=5597 u=student |  TASK [Set Hosted install 'In Progress'] ************************************************************************
2019-03-23 14:34:09,987 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:34:09,996 p=5597 u=student |  PLAY [Create Hosted Resources - persistent volumes] ************************************************************
2019-03-23 14:34:10,009 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:34:10,637 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:10,676 p=5597 u=student |  TASK [openshift_persistent_volumes : Create temp directory for volume definitions] *****************************
2019-03-23 14:34:10,996 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:11,007 p=5597 u=student |  TASK [openshift_persistent_volumes : Copy the admin client config(s)] ******************************************
2019-03-23 14:34:11,364 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:11,376 p=5597 u=student |  TASK [openshift_persistent_volumes : set_fact] *****************************************************************
2019-03-23 14:34:11,395 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:11,408 p=5597 u=student |  TASK [openshift_persistent_volumes : create standard pv and pvc lists] *****************************************
2019-03-23 14:34:11,445 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:11,458 p=5597 u=student |  TASK [openshift_persistent_volumes : include_tasks] ************************************************************
2019-03-23 14:34:11,488 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_persistent_volumes/tasks/pv.yml for master.lab.example.com
2019-03-23 14:34:11,500 p=5597 u=student |  TASK [openshift_persistent_volumes : Deploy PersistentVolume definitions] **************************************
2019-03-23 14:34:12,142 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:12,155 p=5597 u=student |  TASK [openshift_persistent_volumes : Create PersistentVolumes] *************************************************
2019-03-23 14:34:12,740 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:34:12,753 p=5597 u=student |  TASK [openshift_persistent_volumes : include_tasks] ************************************************************
2019-03-23 14:34:12,788 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_persistent_volumes/tasks/pvc.yml for master.lab.example.com
2019-03-23 14:34:12,800 p=5597 u=student |  TASK [openshift_persistent_volumes : Deploy PersistentVolumeClaim definitions] *********************************
2019-03-23 14:34:13,479 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:13,490 p=5597 u=student |  TASK [openshift_persistent_volumes : Create PersistentVolumeClaims] ********************************************
2019-03-23 14:34:14,020 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:34:14,032 p=5597 u=student |  TASK [openshift_persistent_volumes : Delete temp directory] ****************************************************
2019-03-23 14:34:14,385 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:14,392 p=5597 u=student |  PLAY [Create Hosted Resources - openshift_default_storage_class] ***********************************************
2019-03-23 14:34:14,403 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:34:14,981 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:15,018 p=5597 u=student |  TASK [openshift_default_storage_class : Ensure storageclass object] ********************************************
2019-03-23 14:34:15,036 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:15,043 p=5597 u=student |  PLAY [Create Hosted Resources - openshift projects] ************************************************************
2019-03-23 14:34:15,055 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:34:15,673 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:15,709 p=5597 u=student |  TASK [openshift_hosted : Create default projects] **************************************************************
2019-03-23 14:34:16,808 p=5597 u=student |  changed: [master.lab.example.com] => (item={'value': {u'default_node_selector': u''}, 'key': u'default'})
2019-03-23 14:34:17,943 p=5597 u=student |  changed: [master.lab.example.com] => (item={'value': {u'default_node_selector': u''}, 'key': u'logging'})
2019-03-23 14:34:19,011 p=5597 u=student |  changed: [master.lab.example.com] => (item={'value': {u'default_node_selector': u''}, 'key': u'openshift-infra'})
2019-03-23 14:34:19,023 p=5597 u=student |  TASK [openshift_hosted : Create additional projects] ***********************************************************
2019-03-23 14:34:19,049 p=5597 u=student |  PLAY [Create Hosted Resources - router] ************************************************************************
2019-03-23 14:34:19,062 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:34:19,656 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:19,693 p=5597 u=student |  TASK [openshift_hosted : Add iptables allow rules] *************************************************************
2019-03-23 14:34:19,724 p=5597 u=student |  TASK [openshift_hosted : Remove iptables rules] ****************************************************************
2019-03-23 14:34:19,755 p=5597 u=student |  TASK [openshift_hosted : Add firewalld allow rules] ************************************************************
2019-03-23 14:34:19,788 p=5597 u=student |  TASK [openshift_hosted : Remove firewalld allow rules] *********************************************************
2019-03-23 14:34:19,821 p=5597 u=student |  TASK [openshift_hosted : Retrieve list of openshift nodes matching router selector] ****************************
2019-03-23 14:34:20,384 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:20,399 p=5597 u=student |  TASK [openshift_hosted : set_fact replicas] ********************************************************************
2019-03-23 14:34:20,443 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:20,455 p=5597 u=student |  TASK [openshift_hosted : Get the certificate contents for router] **********************************************
2019-03-23 14:34:20,492 p=5597 u=student |  TASK [openshift_hosted : generate a default wildcard router certificate] ***************************************
2019-03-23 14:34:21,603 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {}, u'replicas': u'2', u'serviceaccount': u'router', u'namespace': u'default', u'stats_port': 1936, u'edits': [{u'action': u'put', u'key': u'spec.strategy.rollingParams.intervalSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.rollingParams.updatePeriodSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.activeDeadlineSeconds', u'value': 21600}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'selector': u'region=infra', u'ports': [u'80:80', u'443:443']})
2019-03-23 14:34:21,617 p=5597 u=student |  TASK [openshift_hosted : set the openshift_hosted_router_certificate] ******************************************
2019-03-23 14:34:21,685 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:21,696 p=5597 u=student |  TASK [openshift_hosted : Create the router service account(s)] *************************************************
2019-03-23 14:34:22,621 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {u'certfile': u'/etc/origin/master/openshift-router.crt', u'keyfile': u'/etc/origin/master/openshift-router.key', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'serviceaccount': u'router', u'namespace': u'default', u'stats_port': 1936, u'edits': [{u'action': u'put', u'key': u'spec.strategy.rollingParams.intervalSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.rollingParams.updatePeriodSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.activeDeadlineSeconds', u'value': 21600}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'selector': u'region=infra', u'ports': [u'80:80', u'443:443']})
2019-03-23 14:34:22,635 p=5597 u=student |  TASK [openshift_hosted : Grant the router service account(s) access to the appropriate scc] ********************
2019-03-23 14:34:23,428 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {u'certfile': u'/etc/origin/master/openshift-router.crt', u'keyfile': u'/etc/origin/master/openshift-router.key', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'serviceaccount': u'router', u'namespace': u'default', u'stats_port': 1936, u'edits': [{u'action': u'put', u'key': u'spec.strategy.rollingParams.intervalSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.rollingParams.updatePeriodSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.activeDeadlineSeconds', u'value': 21600}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'selector': u'region=infra', u'ports': [u'80:80', u'443:443']})
2019-03-23 14:34:23,442 p=5597 u=student |  TASK [openshift_hosted : Set additional permissions for router service account] ********************************
2019-03-23 14:34:24,179 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {u'certfile': u'/etc/origin/master/openshift-router.crt', u'keyfile': u'/etc/origin/master/openshift-router.key', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'serviceaccount': u'router', u'namespace': u'default', u'stats_port': 1936, u'edits': [{u'action': u'put', u'key': u'spec.strategy.rollingParams.intervalSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.rollingParams.updatePeriodSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.activeDeadlineSeconds', u'value': 21600}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'selector': u'region=infra', u'ports': [u'80:80', u'443:443']})
2019-03-23 14:34:24,196 p=5597 u=student |  TASK [openshift_hosted : Create OpenShift router] **************************************************************
2019-03-23 14:34:31,732 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {u'certfile': u'/etc/origin/master/openshift-router.crt', u'keyfile': u'/etc/origin/master/openshift-router.key', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'serviceaccount': u'router', u'namespace': u'default', u'stats_port': 1936, u'edits': [{u'action': u'put', u'key': u'spec.strategy.rollingParams.intervalSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.rollingParams.updatePeriodSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.activeDeadlineSeconds', u'value': 21600}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'selector': u'region=infra', u'ports': [u'80:80', u'443:443']})
2019-03-23 14:34:31,746 p=5597 u=student |  PLAY [Create Hosted Resources - registry] **********************************************************************
2019-03-23 14:34:31,759 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:34:32,463 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:32,532 p=5597 u=student |  TASK [openshift_hosted : Add iptables allow rules] *************************************************************
2019-03-23 14:34:32,580 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'5000/tcp', u'service': u'Docker Registry Port'}) 
2019-03-23 14:34:32,594 p=5597 u=student |  TASK [openshift_hosted : Remove iptables rules] ****************************************************************
2019-03-23 14:34:32,633 p=5597 u=student |  TASK [openshift_hosted : Add firewalld allow rules] ************************************************************
2019-03-23 14:34:32,686 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'cond': False, u'port': u'5000/tcp', u'service': u'Docker Registry Port'}) 
2019-03-23 14:34:32,698 p=5597 u=student |  TASK [openshift_hosted : Remove firewalld allow rules] *********************************************************
2019-03-23 14:34:32,732 p=5597 u=student |  TASK [openshift_hosted : Retrieve list of openshift nodes matching registry selector] **************************
2019-03-23 14:34:33,437 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:33,453 p=5597 u=student |  TASK [openshift_hosted : set_fact l_node_count to number of nodes matching registry selector] ******************
2019-03-23 14:34:33,501 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:33,515 p=5597 u=student |  TASK [openshift_hosted : set_fact l_default_replicas when l_node_count == 0] ***********************************
2019-03-23 14:34:33,540 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:33,553 p=5597 u=student |  TASK [openshift_hosted : set_fact l_default_replicas when l_node_count > 0] ************************************
2019-03-23 14:34:33,603 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:33,618 p=5597 u=student |  TASK [openshift_hosted : set openshift_hosted facts] ***********************************************************
2019-03-23 14:34:33,669 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:33,682 p=5597 u=student |  TASK [openshift_hosted : Update registry environment variables when pushing via dns] ***************************
2019-03-23 14:34:33,729 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:33,743 p=5597 u=student |  TASK [openshift_hosted : Update registry proxy settings for dc/docker-registry] ********************************
2019-03-23 14:34:33,770 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:33,782 p=5597 u=student |  TASK [openshift_hosted : Create the registry service account] **************************************************
2019-03-23 14:34:34,821 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:34:34,832 p=5597 u=student |  TASK [openshift_hosted : Grant the registry service account access to the appropriate scc] *********************
2019-03-23 14:34:35,615 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:34:35,628 p=5597 u=student |  TASK [openshift_hosted : oc adm policy add-cluster-role-to-user system:registry system:serviceaccount:default:registry] ***
2019-03-23 14:34:36,448 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:34:36,460 p=5597 u=student |  TASK [openshift_hosted : create the default registry service] **************************************************
2019-03-23 14:34:37,943 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:34:37,958 p=5597 u=student |  TASK [openshift_hosted : include_tasks] ************************************************************************
2019-03-23 14:34:38,044 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_hosted/tasks/secure.yml for master.lab.example.com
2019-03-23 14:34:38,081 p=5597 u=student |  TASK [openshift_hosted : Include reencrypt route configuration] ************************************************
2019-03-23 14:34:38,106 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:38,121 p=5597 u=student |  TASK [openshift_hosted : Include passthrough route configuration] **********************************************
2019-03-23 14:34:38,188 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_hosted/tasks/secure/passthrough.yml for master.lab.example.com
2019-03-23 14:34:38,206 p=5597 u=student |  TASK [openshift_hosted : Configure self-signed certificate file paths] *****************************************
2019-03-23 14:34:38,373 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:38,386 p=5597 u=student |  TASK [openshift_hosted : Configure provided certificate file paths] ********************************************
2019-03-23 14:34:38,406 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:38,418 p=5597 u=student |  TASK [openshift_hosted : Configure provided ca certificate file path] ******************************************
2019-03-23 14:34:38,442 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:38,459 p=5597 u=student |  TASK [openshift_hosted : Retrieve provided certificate files] **************************************************
2019-03-23 14:34:38,499 p=5597 u=student |  TASK [openshift_hosted : Configure a passthrough route for docker-registry] ************************************
2019-03-23 14:34:39,944 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:34:39,955 p=5597 u=student |  TASK [openshift_hosted : Fetch the docker-registry route] ******************************************************
2019-03-23 14:34:40,616 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:40,629 p=5597 u=student |  TASK [openshift_hosted : Retrieve registry service for the clusterip] ******************************************
2019-03-23 14:34:41,304 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:41,315 p=5597 u=student |  TASK [openshift_hosted : Generate self-signed docker-registry certificates] ************************************
2019-03-23 14:34:42,241 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:34:42,255 p=5597 u=student |  TASK [openshift_hosted : Retrieve certificate files to generate certificate bundle] ****************************
2019-03-23 14:34:42,717 p=5597 u=student |  ok: [master.lab.example.com] => (item=/etc/origin/master/registry.crt)
2019-03-23 14:34:43,103 p=5597 u=student |  ok: [master.lab.example.com] => (item=/etc/origin/master/ca.crt)
2019-03-23 14:34:43,123 p=5597 u=student |  TASK [openshift_hosted : Generate certificate bundle] **********************************************************
2019-03-23 14:34:43,835 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:34:43,848 p=5597 u=student |  TASK [openshift_hosted : Reset the certificate path to use the bundle] *****************************************
2019-03-23 14:34:43,908 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:43,925 p=5597 u=student |  TASK [openshift_hosted : Create the secret for the registry certificates] **************************************
2019-03-23 14:34:44,890 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:34:44,903 p=5597 u=student |  TASK [openshift_hosted : Add the secret to the registry's pod service accounts] ********************************
2019-03-23 14:34:46,404 p=5597 u=student |  changed: [master.lab.example.com] => (item=registry)
2019-03-23 14:34:47,579 p=5597 u=student |  changed: [master.lab.example.com] => (item=default)
2019-03-23 14:34:47,592 p=5597 u=student |  TASK [openshift_hosted : Set facts for secure registry] ********************************************************
2019-03-23 14:34:47,636 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:47,651 p=5597 u=student |  TASK [openshift_hosted : Detect if there has been certificate changes] *****************************************
2019-03-23 14:34:47,693 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:47,705 p=5597 u=student |  TASK [openshift_hosted : Update openshift_hosted facts with secure registry variables] *************************
2019-03-23 14:34:47,751 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:47,763 p=5597 u=student |  TASK [openshift_hosted : include_tasks] ************************************************************************
2019-03-23 14:34:47,787 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:47,800 p=5597 u=student |  TASK [openshift_hosted : Update openshift_hosted facts for persistent volumes] *********************************
2019-03-23 14:34:47,852 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:47,866 p=5597 u=student |  TASK [openshift_hosted : include_tasks] ************************************************************************
2019-03-23 14:34:47,890 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:34:47,903 p=5597 u=student |  TASK [openshift_hosted : Create OpenShift registry] ************************************************************
2019-03-23 14:34:49,503 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:34:49,511 p=5597 u=student |  PLAY [Poll for hosted pod deployments] *************************************************************************
2019-03-23 14:34:49,522 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:34:50,341 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:50,383 p=5597 u=student |  TASK [openshift_hosted : setup registry list] ******************************************************************
2019-03-23 14:34:50,427 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:34:50,440 p=5597 u=student |  TASK [openshift_hosted : Ensure OpenShift pod correctly rolls out (best-effort today)] *************************
2019-03-23 14:35:29,262 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {u'keyfile': u'/etc/origin/master/openshift-router.key', u'certfile': u'/etc/origin/master/openshift-router.crt', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'namespace': u'default', u'serviceaccount': u'router', u'selector': u'region=infra', u'edits': [{u'action': u'put', u'value': 1, u'key': u'spec.strategy.rollingParams.intervalSeconds'}, {u'action': u'put', u'value': 1, u'key': u'spec.strategy.rollingParams.updatePeriodSeconds'}, {u'action': u'put', u'value': 21600, u'key': u'spec.strategy.activeDeadlineSeconds'}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'stats_port': 1936, u'ports': [u'80:80', u'443:443']})
2019-03-23 14:35:29,276 p=5597 u=student |  TASK [openshift_hosted : Determine the latest version of the OpenShift pod deployment] *************************
2019-03-23 14:35:29,835 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'name': u'router', u'certificate': {u'keyfile': u'/etc/origin/master/openshift-router.key', u'certfile': u'/etc/origin/master/openshift-router.crt', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'namespace': u'default', u'serviceaccount': u'router', u'selector': u'region=infra', u'edits': [{u'action': u'put', u'value': 1, u'key': u'spec.strategy.rollingParams.intervalSeconds'}, {u'action': u'put', u'value': 1, u'key': u'spec.strategy.rollingParams.updatePeriodSeconds'}, {u'action': u'put', u'value': 21600, u'key': u'spec.strategy.activeDeadlineSeconds'}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'stats_port': 1936, u'ports': [u'80:80', u'443:443']})
2019-03-23 14:35:29,850 p=5597 u=student |  TASK [openshift_hosted : Poll for OpenShift pod deployment success] ********************************************
2019-03-23 14:35:30,465 p=5597 u=student |  changed: [master.lab.example.com] => (item=[{u'name': u'router', u'certificate': {u'certfile': u'/etc/origin/master/openshift-router.crt', u'keyfile': u'/etc/origin/master/openshift-router.key', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'namespace': u'default', u'serviceaccount': u'router', u'selector': u'region=infra', u'edits': [{u'action': u'put', u'key': u'spec.strategy.rollingParams.intervalSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.rollingParams.updatePeriodSeconds', u'value': 1}, {u'action': u'put', u'key': u'spec.strategy.activeDeadlineSeconds', u'value': 21600}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'stats_port': 1936, u'ports': [u'80:80', u'443:443']}, {'_ansible_parsed': True, 'stderr_lines': [], u'cmd': [u'oc', u'get', u'deploymentconfig', u'router', u'--namespace', u'default', u'--config', u'/etc/origin/master/admin.kubeconfig', u'-o', u'jsonpath={ .status.latestVersion }'], u'end': u'2019-03-23 14:35:29.817077', '_ansible_no_log': False, u'stdout': u'1', '_ansible_item_result': True, u'changed': True, 'item': {u'name': u'router', u'certificate': {u'keyfile': u'/etc/origin/master/openshift-router.key', u'certfile': u'/etc/origin/master/openshift-router.crt', u'cafile': u'/etc/origin/master/ca.crt'}, u'replicas': u'2', u'namespace': u'default', u'serviceaccount': u'router', u'stats_port': 1936, u'edits': [{u'action': u'put', u'value': 1, u'key': u'spec.strategy.rollingParams.intervalSeconds'}, {u'action': u'put', u'value': 1, u'key': u'spec.strategy.rollingParams.updatePeriodSeconds'}, {u'action': u'put', u'value': 21600, u'key': u'spec.strategy.activeDeadlineSeconds'}], u'images': u'registry.lab.example.com/openshift3/ose-${component}:${version}', u'selector': u'region=infra', u'ports': [u'80:80', u'443:443']}, u'delta': u'0:00:00.200342', u'stderr': u'', u'rc': 0, u'invocation': {u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': False, u'_raw_params': u"oc get deploymentconfig router --namespace default --config /etc/origin/master/admin.kubeconfig -o jsonpath='{ .status.latestVersion }'", u'removes': None, u'creates': None, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'1'], u'start': u'2019-03-23 14:35:29.616735', '_ansible_ignore_errors': None, 'failed': False}])
2019-03-23 14:35:30,484 p=5597 u=student |  TASK [openshift_hosted : Ensure OpenShift pod correctly rolls out (best-effort today)] *************************
2019-03-23 14:35:37,053 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'namespace': u'default', u'name': u'docker-registry'})
2019-03-23 14:35:37,069 p=5597 u=student |  TASK [openshift_hosted : Determine the latest version of the OpenShift pod deployment] *************************
2019-03-23 14:35:37,606 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'namespace': u'default', u'name': u'docker-registry'})
2019-03-23 14:35:37,621 p=5597 u=student |  TASK [openshift_hosted : Poll for OpenShift pod deployment success] ********************************************
2019-03-23 14:35:38,174 p=5597 u=student |  changed: [master.lab.example.com] => (item=[{u'namespace': u'default', u'name': u'docker-registry'}, {'_ansible_parsed': True, 'stderr_lines': [], u'cmd': [u'oc', u'get', u'deploymentconfig', u'docker-registry', u'--namespace', u'default', u'--config', u'/etc/origin/master/admin.kubeconfig', u'-o', u'jsonpath={ .status.latestVersion }'], u'end': u'2019-03-23 14:35:37.584471', '_ansible_no_log': False, u'stdout': u'1', '_ansible_item_result': True, u'changed': True, 'item': {u'namespace': u'default', u'name': u'docker-registry'}, u'delta': u'0:00:00.166891', u'stderr': u'', u'rc': 0, u'invocation': {u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': False, u'_raw_params': u"oc get deploymentconfig docker-registry --namespace default --config /etc/origin/master/admin.kubeconfig -o jsonpath='{ .status.latestVersion }'", u'removes': None, u'creates': None, u'chdir': None, u'stdin': None}}, 'stdout_lines': [u'1'], u'start': u'2019-03-23 14:35:37.417580', '_ansible_ignore_errors': None, 'failed': False}])
2019-03-23 14:35:38,186 p=5597 u=student |  PLAY [Poll for hosted pod deployments] *************************************************************************
2019-03-23 14:35:38,198 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:35:38,787 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:38,824 p=5597 u=student |  TASK [openshift_hosted : include_tasks] ************************************************************************
2019-03-23 14:35:38,850 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:35:38,856 p=5597 u=student |  PLAY [Create Hosted Resources - cockpit-ui] ********************************************************************
2019-03-23 14:35:38,868 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:35:39,492 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:39,528 p=5597 u=student |  TASK [cockpit-ui : fetch the docker-registry route] ************************************************************
2019-03-23 14:35:40,063 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:40,077 p=5597 u=student |  TASK [cockpit-ui : Create passthrough route for registry-console] **********************************************
2019-03-23 14:35:41,201 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:35:41,215 p=5597 u=student |  TASK [cockpit-ui : Create temp directory for kubeconfig] *******************************************************
2019-03-23 14:35:41,561 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:41,574 p=5597 u=student |  TASK [cockpit-ui : set_fact] ***********************************************************************************
2019-03-23 14:35:41,629 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:41,641 p=5597 u=student |  TASK [cockpit-ui : Copy the admin client config(s)] ************************************************************
2019-03-23 14:35:41,970 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:41,982 p=5597 u=student |  TASK [cockpit-ui : Deploy registry-console] ********************************************************************
2019-03-23 14:35:42,770 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:35:42,784 p=5597 u=student |  TASK [cockpit-ui : Delete temp directory] **********************************************************************
2019-03-23 14:35:43,166 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:43,175 p=5597 u=student |  PLAY [Install docker gc] ***************************************************************************************
2019-03-23 14:35:43,191 p=5597 u=student |  TASK [openshift_master : Retrieve list of schedulable nodes matching selector] *********************************
2019-03-23 14:35:43,215 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:35:43,231 p=5597 u=student |  TASK [openshift_master : Ensure that docker-gc daemonset has nodes to run on] **********************************
2019-03-23 14:35:43,256 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:35:43,269 p=5597 u=student |  TASK [openshift_docker_gc : Create docker-gc tempdir] **********************************************************
2019-03-23 14:35:43,293 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:35:43,305 p=5597 u=student |  TASK [openshift_docker_gc : Add dockergc as priviledged] *******************************************************
2019-03-23 14:35:43,333 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:35:43,351 p=5597 u=student |  TASK [openshift_docker_gc : Create dockergc DaemonSet] *********************************************************
2019-03-23 14:35:43,377 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:35:43,391 p=5597 u=student |  TASK [openshift_docker_gc : Apply dockergc DaemonSet] **********************************************************
2019-03-23 14:35:43,414 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:35:43,426 p=5597 u=student |  TASK [openshift_docker_gc : Remove temp directory] *************************************************************
2019-03-23 14:35:43,449 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:35:43,456 p=5597 u=student |  PLAY [Hosted Install Checkpoint End] ***************************************************************************
2019-03-23 14:35:43,465 p=5597 u=student |  TASK [Set Hosted install 'Complete'] ***************************************************************************
2019-03-23 14:35:43,521 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:35:43,529 p=5597 u=student |  PLAY [Web Console Install Checkpoint Start] ********************************************************************
2019-03-23 14:35:43,537 p=5597 u=student |  TASK [Set Web Console install 'In Progress'] *******************************************************************
2019-03-23 14:35:43,596 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:35:43,603 p=5597 u=student |  PLAY [Web Console] *********************************************************************************************
2019-03-23 14:35:43,615 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:35:44,453 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:44,492 p=5597 u=student |  TASK [debug] ***************************************************************************************************
2019-03-23 14:35:44,538 p=5597 u=student |  ok: [master.lab.example.com] => {
    "msg": true
}
2019-03-23 14:35:44,551 p=5597 u=student |  TASK [openshift_web_console : include_tasks] *******************************************************************
2019-03-23 14:35:44,625 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_web_console/tasks/install.yml for master.lab.example.com
2019-03-23 14:35:44,645 p=5597 u=student |  TASK [openshift_web_console : Ensure openshift-web-console project exists] *************************************
2019-03-23 14:35:48,135 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:35:48,148 p=5597 u=student |  TASK [openshift_web_console : Make temp directory for web console templates] ***********************************
2019-03-23 14:35:48,650 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:48,670 p=5597 u=student |  TASK [openshift_web_console : Copy admin client config] ********************************************************
2019-03-23 14:35:49,195 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:49,209 p=5597 u=student |  TASK [openshift_web_console : Copy web console templates to temp directory] ************************************
2019-03-23 14:35:50,033 p=5597 u=student |  changed: [master.lab.example.com] => (item=console-template.yaml)
2019-03-23 14:35:50,865 p=5597 u=student |  changed: [master.lab.example.com] => (item=console-config.yaml)
2019-03-23 14:35:50,877 p=5597 u=student |  TASK [openshift_web_console : Read the existing web console config map] ****************************************
2019-03-23 14:35:51,859 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:51,876 p=5597 u=student |  TASK [openshift_web_console : set_fact] ************************************************************************
2019-03-23 14:35:51,919 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:51,933 p=5597 u=student |  TASK [openshift_web_console : Copy the existing web console config to temp directory] **************************
2019-03-23 14:35:51,954 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:35:51,968 p=5597 u=student |  TASK [openshift_web_console : Read existing assetConfig in master-config.yaml] *********************************
2019-03-23 14:35:52,428 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:52,441 p=5597 u=student |  TASK [openshift_web_console : set_fact] ************************************************************************
2019-03-23 14:35:52,521 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:52,538 p=5597 u=student |  TASK [openshift_web_console : set_fact] ************************************************************************
2019-03-23 14:35:52,586 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:52,598 p=5597 u=student |  TASK [openshift_web_console : Set web console config properties from inventory variables] **********************
2019-03-23 14:35:53,134 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:35:53,147 p=5597 u=student |  TASK [openshift_web_console : Migrate assetConfig from master-config.yaml] *************************************
2019-03-23 14:35:53,173 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:35:53,186 p=5597 u=student |  TASK [openshift_web_console : slurp] ***************************************************************************
2019-03-23 14:35:53,568 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:35:53,580 p=5597 u=student |  TASK [openshift_web_console : Apply the web console template file] *********************************************
2019-03-23 14:35:54,580 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:35:54,596 p=5597 u=student |  TASK [openshift_web_console : Pause for the web console deployment to start] ***********************************
2019-03-23 14:35:54,622 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:35:54,636 p=5597 u=student |  TASK [openshift_web_console : Verify that the web console is running] ******************************************
2019-03-23 14:35:56,390 p=5597 u=student |  FAILED - RETRYING: Verify that the web console is running (60 retries left).
2019-03-23 14:36:08,434 p=5597 u=student |  FAILED - RETRYING: Verify that the web console is running (59 retries left).
2019-03-23 14:36:19,788 p=5597 u=student |  FAILED - RETRYING: Verify that the web console is running (58 retries left).
2019-03-23 14:36:30,220 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:36:30,233 p=5597 u=student |  TASK [openshift_web_console : Check status in the openshift-web-console namespace] *****************************
2019-03-23 14:36:30,254 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:30,267 p=5597 u=student |  TASK [openshift_web_console : debug] ***************************************************************************
2019-03-23 14:36:30,291 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:30,305 p=5597 u=student |  TASK [openshift_web_console : Get pods in the openshift-web-console namespace] *********************************
2019-03-23 14:36:30,326 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:30,340 p=5597 u=student |  TASK [openshift_web_console : debug] ***************************************************************************
2019-03-23 14:36:30,361 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:30,374 p=5597 u=student |  TASK [openshift_web_console : Get events in the openshift-web-console namespace] *******************************
2019-03-23 14:36:30,394 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:30,406 p=5597 u=student |  TASK [openshift_web_console : debug] ***************************************************************************
2019-03-23 14:36:30,425 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:30,437 p=5597 u=student |  TASK [openshift_web_console : Get console pod logs] ************************************************************
2019-03-23 14:36:30,458 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:30,470 p=5597 u=student |  TASK [openshift_web_console : debug] ***************************************************************************
2019-03-23 14:36:30,491 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:30,503 p=5597 u=student |  TASK [openshift_web_console : Remove temp directory] ***********************************************************
2019-03-23 14:36:30,827 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:36:30,838 p=5597 u=student |  TASK [openshift_web_console : Report console errors] ***********************************************************
2019-03-23 14:36:30,870 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:30,883 p=5597 u=student |  TASK [openshift_web_console : include_tasks] *******************************************************************
2019-03-23 14:36:30,909 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:30,916 p=5597 u=student |  PLAY [Web Console Install Checkpoint End] **********************************************************************
2019-03-23 14:36:30,925 p=5597 u=student |  TASK [Set Web Console install 'Complete'] **********************************************************************
2019-03-23 14:36:30,977 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:36:30,984 p=5597 u=student |  PLAY [Metrics Install Checkpoint Start] ************************************************************************
2019-03-23 14:36:30,994 p=5597 u=student |  TASK [Set Metrics install 'In Progress'] ***********************************************************************
2019-03-23 14:36:31,013 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:36:31,022 p=5597 u=student |  PLAY [OpenShift Metrics] ***************************************************************************************
2019-03-23 14:36:31,036 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:36:31,060 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,079 p=5597 u=student |  TASK [openshift_metrics : command] *****************************************************************************
2019-03-23 14:36:31,103 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,117 p=5597 u=student |  TASK [openshift_metrics : Check that python-passlib is available on the control host] **************************
2019-03-23 14:36:31,145 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,156 p=5597 u=student |  TASK [openshift_metrics : Set default image variables based on openshift_deployment_type] **********************
2019-03-23 14:36:31,183 p=5597 u=student |  skipping: [master.lab.example.com] => (item=/usr/share/ansible/openshift-ansible/roles/openshift_metrics/vars/openshift-enterprise.yml) 
2019-03-23 14:36:31,197 p=5597 u=student |  TASK [openshift_metrics : Set metrics image facts] *************************************************************
2019-03-23 14:36:31,219 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,233 p=5597 u=student |  TASK [openshift_metrics : Create temp directory for doing work in on target] ***********************************
2019-03-23 14:36:31,256 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,269 p=5597 u=student |  TASK [openshift_metrics : Create temp directory for all our templates] *****************************************
2019-03-23 14:36:31,291 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,310 p=5597 u=student |  TASK [openshift_metrics : Create temp directory local on control node] *****************************************
2019-03-23 14:36:31,330 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,344 p=5597 u=student |  TASK [openshift_metrics : Copy the admin client config(s)] *****************************************************
2019-03-23 14:36:31,365 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,377 p=5597 u=student |  TASK [openshift_metrics : include_tasks] ***********************************************************************
2019-03-23 14:36:31,399 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,411 p=5597 u=student |  TASK [openshift_metrics : include_tasks] ***********************************************************************
2019-03-23 14:36:31,432 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,444 p=5597 u=student |  TASK [openshift_metrics : include_tasks] ***********************************************************************
2019-03-23 14:36:31,465 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,480 p=5597 u=student |  TASK [openshift_metrics : Delete temp directory] ***************************************************************
2019-03-23 14:36:31,500 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,506 p=5597 u=student |  PLAY [OpenShift Metrics] ***************************************************************************************
2019-03-23 14:36:31,506 p=5597 u=student |  skipping: no hosts matched
2019-03-23 14:36:31,509 p=5597 u=student |  PLAY [Metrics Install Checkpoint End] **************************************************************************
2019-03-23 14:36:31,519 p=5597 u=student |  TASK [Set Metrics install 'Complete'] **************************************************************************
2019-03-23 14:36:31,539 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:36:31,545 p=5597 u=student |  PLAY [Logging Install Checkpoint Start] ************************************************************************
2019-03-23 14:36:31,553 p=5597 u=student |  TASK [Set Logging install 'In Progress'] ***********************************************************************
2019-03-23 14:36:31,573 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:36:31,579 p=5597 u=student |  PLAY [Update vm.max_map_count for ES 5.x] **********************************************************************
2019-03-23 14:36:31,587 p=5597 u=student |  TASK [Checking vm max_map_count value] *************************************************************************
2019-03-23 14:36:31,657 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:36:31,658 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,658 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:36:31,658 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:36:31,666 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:36:31,673 p=5597 u=student |  TASK [stat] ****************************************************************************************************
2019-03-23 14:36:31,725 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:36:31,740 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,741 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:36:31,750 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:36:31,756 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:36:31,764 p=5597 u=student |  TASK [Check for current value of vm.max_map_count in 99-elasticsearch.conf] ************************************
2019-03-23 14:36:31,837 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:36:31,837 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,839 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:36:31,839 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:36:31,844 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:36:31,852 p=5597 u=student |  TASK [Updating vm.max_map_count value] *************************************************************************
2019-03-23 14:36:31,926 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:36:31,926 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,927 p=5597 u=student |  skipping: [node1.lab.example.com]
2019-03-23 14:36:31,927 p=5597 u=student |  skipping: [node2.lab.example.com]
2019-03-23 14:36:31,931 p=5597 u=student |  skipping: [services.lab.example.com]
2019-03-23 14:36:31,938 p=5597 u=student |  PLAY [OpenShift Aggregated Logging] ****************************************************************************
2019-03-23 14:36:31,952 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:36:31,972 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:31,985 p=5597 u=student |  TASK [openshift_logging : fail] ********************************************************************************
2019-03-23 14:36:32,009 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,022 p=5597 u=student |  TASK [openshift_logging : assert] ******************************************************************************
2019-03-23 14:36:32,045 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,058 p=5597 u=student |  TASK [openshift_logging : Create temp directory for doing work in] *********************************************
2019-03-23 14:36:32,078 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,091 p=5597 u=student |  TASK [openshift_logging : debug] *******************************************************************************
2019-03-23 14:36:32,112 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,132 p=5597 u=student |  TASK [openshift_logging : Create local temp directory for doing work in] ***************************************
2019-03-23 14:36:32,156 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,171 p=5597 u=student |  TASK [openshift_logging : include_tasks] ***********************************************************************
2019-03-23 14:36:32,191 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,206 p=5597 u=student |  TASK [openshift_logging : include_tasks] ***********************************************************************
2019-03-23 14:36:32,225 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,248 p=5597 u=student |  TASK [openshift_logging : Cleaning up local temp dir] **********************************************************
2019-03-23 14:36:32,273 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,278 p=5597 u=student |  PLAY [Update Master configs] ***********************************************************************************
2019-03-23 14:36:32,278 p=5597 u=student |  skipping: no hosts matched
2019-03-23 14:36:32,283 p=5597 u=student |  PLAY [Logging Install Checkpoint End] **************************************************************************
2019-03-23 14:36:32,292 p=5597 u=student |  TASK [Set Logging install 'Complete'] **************************************************************************
2019-03-23 14:36:32,317 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:36:32,323 p=5597 u=student |  PLAY [Prometheus Install Checkpoint Start] *********************************************************************
2019-03-23 14:36:32,336 p=5597 u=student |  TASK [Set Prometheus install 'In Progress'] ********************************************************************
2019-03-23 14:36:32,356 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:36:32,362 p=5597 u=student |  PLAY [OpenShift Prometheus] ************************************************************************************
2019-03-23 14:36:32,375 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:36:32,393 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,406 p=5597 u=student |  TASK [openshift_prometheus : Set default image variables based on openshift_deployment_type] *******************
2019-03-23 14:36:32,429 p=5597 u=student |  skipping: [master.lab.example.com] => (item=/usr/share/ansible/openshift-ansible/roles/openshift_prometheus/vars/openshift-enterprise.yml) 
2019-03-23 14:36:32,442 p=5597 u=student |  TASK [openshift_prometheus : Create temp directory for doing work in on target] ********************************
2019-03-23 14:36:32,462 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,474 p=5597 u=student |  TASK [openshift_prometheus : set_fact] *************************************************************************
2019-03-23 14:36:32,494 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,506 p=5597 u=student |  TASK [openshift_prometheus : Create templates subdirectory] ****************************************************
2019-03-23 14:36:32,526 p=5597 u=student |  skipping: [master.lab.example.com] => (item=templates) 
2019-03-23 14:36:32,540 p=5597 u=student |  TASK [openshift_prometheus : include_tasks] ********************************************************************
2019-03-23 14:36:32,559 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,570 p=5597 u=student |  TASK [openshift_prometheus : include_tasks] ********************************************************************
2019-03-23 14:36:32,590 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,602 p=5597 u=student |  TASK [openshift_prometheus : include_tasks] ********************************************************************
2019-03-23 14:36:32,622 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,634 p=5597 u=student |  TASK [openshift_prometheus : Delete temp directory] ************************************************************
2019-03-23 14:36:32,656 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:32,662 p=5597 u=student |  PLAY [Prometheus Install Checkpoint End] ***********************************************************************
2019-03-23 14:36:32,671 p=5597 u=student |  TASK [Set Prometheus install 'Complete'] ***********************************************************************
2019-03-23 14:36:32,689 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:36:32,697 p=5597 u=student |  PLAY [Service Catalog Install Checkpoint Start] ****************************************************************
2019-03-23 14:36:32,706 p=5597 u=student |  TASK [Set Service Catalog install 'In Progress'] ***************************************************************
2019-03-23 14:36:32,759 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:36:32,766 p=5597 u=student |  PLAY [Service Catalog] *****************************************************************************************
2019-03-23 14:36:32,780 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:36:33,487 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:36:33,528 p=5597 u=student |  TASK [openshift_service_catalog : include_tasks] ***************************************************************
2019-03-23 14:36:33,600 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_service_catalog/tasks/install.yml for master.lab.example.com
2019-03-23 14:36:33,615 p=5597 u=student |  TASK [openshift_service_catalog : Create temp directory for doing work in] *************************************
2019-03-23 14:36:33,953 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:36:33,966 p=5597 u=student |  TASK [openshift_service_catalog : Set default image variables based on openshift_deployment_type] **************
2019-03-23 14:36:34,013 p=5597 u=student |  ok: [master.lab.example.com] => (item=/usr/share/ansible/openshift-ansible/roles/openshift_service_catalog/vars/openshift-enterprise.yml)
2019-03-23 14:36:34,026 p=5597 u=student |  TASK [openshift_service_catalog : Set service_catalog image facts] *********************************************
2019-03-23 14:36:34,073 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:36:34,086 p=5597 u=student |  TASK [openshift_service_catalog : Set Service Catalog namespace] ***********************************************
2019-03-23 14:36:35,332 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:35,344 p=5597 u=student |  TASK [openshift_service_catalog : Waiting for netnamespace kube-service-catalog to be ready] *******************
2019-03-23 14:36:35,367 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:35,378 p=5597 u=student |  TASK [openshift_service_catalog : Make kube-service-catalog project network global] ****************************
2019-03-23 14:36:35,401 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:36:35,413 p=5597 u=student |  TASK [openshift_service_catalog : include_tasks] ***************************************************************
2019-03-23 14:36:35,465 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_service_catalog/tasks/generate_certs.yml for master.lab.example.com
2019-03-23 14:36:35,480 p=5597 u=student |  TASK [openshift_service_catalog : Create service catalog cert directory] ***************************************
2019-03-23 14:36:35,810 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:36:35,824 p=5597 u=student |  TASK [openshift_service_catalog : set_fact] ********************************************************************
2019-03-23 14:36:35,864 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:36:35,879 p=5597 u=student |  TASK [openshift_service_catalog : Generate signing cert] *******************************************************
2019-03-23 14:36:36,525 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:36,537 p=5597 u=student |  TASK [openshift_service_catalog : Delete old apiserver.crt] ****************************************************
2019-03-23 14:36:36,865 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:36:36,878 p=5597 u=student |  TASK [openshift_service_catalog : Delete old apiserver.key] ****************************************************
2019-03-23 14:36:37,218 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:36:37,233 p=5597 u=student |  TASK [openshift_service_catalog : Generating server keys] ******************************************************
2019-03-23 14:36:37,903 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:37,915 p=5597 u=student |  TASK [openshift_service_catalog : Create apiserver-ssl secret] *************************************************
2019-03-23 14:36:38,659 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:38,671 p=5597 u=student |  TASK [openshift_service_catalog : Create service-catalog-ssl secret] *******************************************
2019-03-23 14:36:39,381 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:39,393 p=5597 u=student |  TASK [openshift_service_catalog : slurp] ***********************************************************************
2019-03-23 14:36:39,708 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:36:39,720 p=5597 u=student |  TASK [openshift_service_catalog : Create api service] **********************************************************
2019-03-23 14:36:40,793 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:40,806 p=5597 u=student |  TASK [openshift_service_catalog : copy] ************************************************************************
2019-03-23 14:36:41,495 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:41,507 p=5597 u=student |  TASK [openshift_service_catalog : oc_obj] **********************************************************************
2019-03-23 14:36:42,433 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:42,445 p=5597 u=student |  TASK [openshift_service_catalog : oc_process] ******************************************************************
2019-03-23 14:36:51,979 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:51,992 p=5597 u=student |  TASK [openshift_service_catalog : copy] ************************************************************************
2019-03-23 14:36:52,625 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:52,638 p=5597 u=student |  TASK [openshift_service_catalog : oc_obj] **********************************************************************
2019-03-23 14:36:53,592 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:53,605 p=5597 u=student |  TASK [openshift_service_catalog : oc_process] ******************************************************************
2019-03-23 14:36:55,668 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:55,681 p=5597 u=student |  TASK [openshift_service_catalog : copy] ************************************************************************
2019-03-23 14:36:56,359 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:56,371 p=5597 u=student |  TASK [openshift_service_catalog : Apply Service Catalog cluster roles] *****************************************
2019-03-23 14:36:56,952 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:56,967 p=5597 u=student |  TASK [openshift_service_catalog : oc_adm_policy_user] **********************************************************
2019-03-23 14:36:57,764 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:57,777 p=5597 u=student |  TASK [openshift_service_catalog : Set SA cluster-role] *********************************************************
2019-03-23 14:36:58,565 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:58,577 p=5597 u=student |  TASK [openshift_service_catalog : Checking for master.etcd-ca.crt] *********************************************
2019-03-23 14:36:58,919 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:36:58,932 p=5597 u=student |  TASK [openshift_service_catalog : template] ********************************************************************
2019-03-23 14:36:59,604 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:36:59,618 p=5597 u=student |  TASK [openshift_service_catalog : Set Service Catalog API Server daemonset] ************************************
2019-03-23 14:37:00,639 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:00,652 p=5597 u=student |  TASK [openshift_service_catalog : Set Service Catalog API Server service] **************************************
2019-03-23 14:37:01,875 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:01,886 p=5597 u=student |  TASK [openshift_service_catalog : template] ********************************************************************
2019-03-23 14:37:02,540 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:02,552 p=5597 u=student |  TASK [openshift_service_catalog : Set Service Catalog API Server route] ****************************************
2019-03-23 14:37:03,480 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:03,492 p=5597 u=student |  TASK [openshift_service_catalog : template] ********************************************************************
2019-03-23 14:37:04,142 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:04,155 p=5597 u=student |  TASK [openshift_service_catalog : Set Controller Manager deployment] *******************************************
2019-03-23 14:37:05,048 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:05,062 p=5597 u=student |  TASK [openshift_service_catalog : include_tasks] ***************************************************************
2019-03-23 14:37:05,115 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/openshift_service_catalog/tasks/start_api_server.yml for master.lab.example.com
2019-03-23 14:37:05,137 p=5597 u=student |  TASK [openshift_service_catalog : Label master.lab.example.com for APIServer and controller deployment] ********
2019-03-23 14:37:05,897 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:05,910 p=5597 u=student |  TASK [openshift_service_catalog : wait for api server to be ready] *********************************************
2019-03-23 14:37:07,923 p=5597 u=student |  FAILED - RETRYING: wait for api server to be ready (60 retries left).
2019-03-23 14:37:18,347 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:18,359 p=5597 u=student |  TASK [openshift_service_catalog : Delete temp directory] *******************************************************
2019-03-23 14:37:18,691 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:18,703 p=5597 u=student |  TASK [openshift_service_catalog : include_tasks] ***************************************************************
2019-03-23 14:37:18,724 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:37:18,737 p=5597 u=student |  TASK [ansible_service_broker : include_tasks] ******************************************************************
2019-03-23 14:37:18,819 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/ansible_service_broker/tasks/install.yml for master.lab.example.com
2019-03-23 14:37:18,831 p=5597 u=student |  TASK [ansible_service_broker : Set default image variables based on deployment type] ***************************
2019-03-23 14:37:18,991 p=5597 u=student |  ok: [master.lab.example.com] => (item=/usr/share/ansible/openshift-ansible/roles/ansible_service_broker/vars/openshift-enterprise.yml)
2019-03-23 14:37:19,007 p=5597 u=student |  TASK [ansible_service_broker : set ansible_service_broker facts] ***********************************************
2019-03-23 14:37:19,061 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:19,076 p=5597 u=student |  TASK [ansible_service_broker : set ansible-service-broker image facts using set prefix and tag] ****************
2019-03-23 14:37:19,123 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:19,139 p=5597 u=student |  TASK [ansible_service_broker : include_tasks] ******************************************************************
2019-03-23 14:37:19,187 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/ansible_service_broker/tasks/validate_facts.yml for master.lab.example.com
2019-03-23 14:37:19,206 p=5597 u=student |  TASK [ansible_service_broker : validate Dockerhub registry settings] *******************************************
2019-03-23 14:37:19,229 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:37:19,243 p=5597 u=student |  TASK [ansible_service_broker : validate RHCC registry settings] ************************************************
2019-03-23 14:37:19,272 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:37:19,285 p=5597 u=student |  TASK [ansible_service_broker : include_tasks] ******************************************************************
2019-03-23 14:37:19,344 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/ansible_service_broker/tasks/generate_certs.yml for master.lab.example.com
2019-03-23 14:37:19,365 p=5597 u=student |  TASK [ansible_service_broker : Create ansible-service-broker cert directory] ***********************************
2019-03-23 14:37:19,813 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:19,832 p=5597 u=student |  TASK [ansible_service_broker : Create self signing ca cert] ****************************************************
2019-03-23 14:37:20,354 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:20,366 p=5597 u=student |  TASK [ansible_service_broker : Create self signed client cert] *************************************************
2019-03-23 14:37:21,019 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'creates': u'/etc/origin/ansible-service-broker/client.key', u'cmd': u'openssl genrsa -out /etc/origin/ansible-service-broker/client.key 2048'})
2019-03-23 14:37:21,371 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'creates': u'/etc/origin/ansible-service-broker/client.csr', u'cmd': u'openssl req -new -key /etc/origin/ansible-service-broker/client.key -out /etc/origin/ansible-service-broker/client.csr -subj "/CN=client"'})
2019-03-23 14:37:21,700 p=5597 u=student |  changed: [master.lab.example.com] => (item={u'creates': u'/etc/origin/ansible-service-broker/client.pem', u'cmd': u'openssl x509 -req -in /etc/origin/ansible-service-broker/client.csr -CA /etc/origin/ansible-service-broker/cert.pem -CAkey /etc/origin/ansible-service-broker/key.pem -CAcreateserial -out /etc/origin/ansible-service-broker/client.pem -days 1024'})
2019-03-23 14:37:21,713 p=5597 u=student |  TASK [ansible_service_broker : set_fact] ***********************************************************************
2019-03-23 14:37:21,758 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:21,771 p=5597 u=student |  TASK [ansible_service_broker : Read in certs for etcd] *********************************************************
2019-03-23 14:37:22,120 p=5597 u=student |  ok: [master.lab.example.com] => (item=cert.pem)
2019-03-23 14:37:22,443 p=5597 u=student |  ok: [master.lab.example.com] => (item=client.pem)
2019-03-23 14:37:22,762 p=5597 u=student |  ok: [master.lab.example.com] => (item=client.key)
2019-03-23 14:37:22,778 p=5597 u=student |  TASK [ansible_service_broker : set_fact] ***********************************************************************
2019-03-23 14:37:22,825 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:22,839 p=5597 u=student |  TASK [ansible_service_broker : create openshift-ansible-service-broker project] ********************************
2019-03-23 14:37:24,030 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:24,043 p=5597 u=student |  TASK [ansible_service_broker : create ansible-service-broker serviceaccount] ***********************************
2019-03-23 14:37:24,997 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:25,010 p=5597 u=student |  TASK [ansible_service_broker : create ansible-service-broker client serviceaccount] ****************************
2019-03-23 14:37:25,972 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:25,984 p=5597 u=student |  TASK [ansible_service_broker : Create asb-auth cluster role] ***************************************************
2019-03-23 14:37:27,147 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:27,161 p=5597 u=student |  TASK [ansible_service_broker : Create asb-access cluster role] *************************************************
2019-03-23 14:37:28,309 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:28,321 p=5597 u=student |  TASK [ansible_service_broker : Bind admin cluster-role to asb serviceaccount] **********************************
2019-03-23 14:37:29,082 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:29,095 p=5597 u=student |  TASK [ansible_service_broker : Bind auth cluster role to asb service account] **********************************
2019-03-23 14:37:29,858 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:29,871 p=5597 u=student |  TASK [ansible_service_broker : Bind asb-access role to asb-client service account] *****************************
2019-03-23 14:37:30,777 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:30,789 p=5597 u=student |  TASK [ansible_service_broker : create asb-client token secret] *************************************************
2019-03-23 14:37:31,727 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:31,740 p=5597 u=student |  TASK [ansible_service_broker : Create etcd-auth secret] ********************************************************
2019-03-23 14:37:32,490 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:32,501 p=5597 u=student |  TASK [ansible_service_broker : Create broker-etcd-auth secret] *************************************************
2019-03-23 14:37:33,273 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:33,287 p=5597 u=student |  TASK [ansible_service_broker : oc_secret] **********************************************************************
2019-03-23 14:37:33,839 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:33,854 p=5597 u=student |  TASK [ansible_service_broker : set_fact] ***********************************************************************
2019-03-23 14:37:33,900 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:33,912 p=5597 u=student |  TASK [ansible_service_broker : create ansible-service-broker service] ******************************************
2019-03-23 14:37:35,147 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:35,161 p=5597 u=student |  TASK [ansible_service_broker : create asb-etcd service] ********************************************************
2019-03-23 14:37:36,364 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:36,377 p=5597 u=student |  TASK [ansible_service_broker : create route for ansible-service-broker service] ********************************
2019-03-23 14:37:37,530 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:37,542 p=5597 u=student |  TASK [ansible_service_broker : create persistent volume claim for etcd] ****************************************
2019-03-23 14:37:38,941 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:38,954 p=5597 u=student |  TASK [ansible_service_broker : Set Ansible Service Broker deployment config] ***********************************
2019-03-23 14:37:39,995 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:40,009 p=5597 u=student |  TASK [ansible_service_broker : Search for existing Ansible Service Broker etcd deployment config] **************
2019-03-23 14:37:40,604 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:40,618 p=5597 u=student |  TASK [ansible_service_broker : Create asb-etcd deployment config] **********************************************
2019-03-23 14:37:41,591 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:41,603 p=5597 u=student |  TASK [ansible_service_broker : set auth name and type facts if needed] *****************************************
2019-03-23 14:37:41,625 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:37:41,639 p=5597 u=student |  TASK [ansible_service_broker : Create config map for ansible-service-broker] ***********************************
2019-03-23 14:37:42,751 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:42,764 p=5597 u=student |  TASK [ansible_service_broker : oc_secret] **********************************************************************
2019-03-23 14:37:42,788 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:37:42,802 p=5597 u=student |  TASK [ansible_service_broker : Create the Broker resource in the catalog] **************************************
2019-03-23 14:37:43,896 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:43,909 p=5597 u=student |  TASK [ansible_service_broker : include_tasks] ******************************************************************
2019-03-23 14:37:43,935 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:37:43,950 p=5597 u=student |  TASK [template_service_broker : include_tasks] *****************************************************************
2019-03-23 14:37:44,019 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/template_service_broker/tasks/install.yml for master.lab.example.com
2019-03-23 14:37:44,030 p=5597 u=student |  TASK [openshift_master : Retrieve list of schedulable nodes matching selector] *********************************
2019-03-23 14:37:44,702 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:44,734 p=5597 u=student |  TASK [openshift_master : Ensure that Template Service Broker has nodes to run on] ******************************
2019-03-23 14:37:44,804 p=5597 u=student |  ok: [master.lab.example.com] => {
    "changed": false, 
    "msg": "All assertions passed"
}
2019-03-23 14:37:44,817 p=5597 u=student |  TASK [template_service_broker : include_tasks] *****************************************************************
2019-03-23 14:37:44,890 p=5597 u=student |  included: /usr/share/ansible/openshift-ansible/roles/template_service_broker/tasks/deploy.yml for master.lab.example.com
2019-03-23 14:37:44,911 p=5597 u=student |  TASK [template_service_broker : oc_project] ********************************************************************
2019-03-23 14:37:46,440 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:46,452 p=5597 u=student |  TASK [template_service_broker : command] ***********************************************************************
2019-03-23 14:37:46,900 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:46,918 p=5597 u=student |  TASK [template_service_broker : Copy admin client config] ******************************************************
2019-03-23 14:37:47,386 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:47,398 p=5597 u=student |  TASK [template_service_broker : copy] **************************************************************************
2019-03-23 14:37:48,219 p=5597 u=student |  changed: [master.lab.example.com] => (item=apiserver-template.yaml)
2019-03-23 14:37:49,032 p=5597 u=student |  changed: [master.lab.example.com] => (item=rbac-template.yaml)
2019-03-23 14:37:49,731 p=5597 u=student |  changed: [master.lab.example.com] => (item=template-service-broker-registration.yaml)
2019-03-23 14:37:50,559 p=5597 u=student |  changed: [master.lab.example.com] => (item=apiserver-config.yaml)
2019-03-23 14:37:50,576 p=5597 u=student |  TASK [template_service_broker : yedit] *************************************************************************
2019-03-23 14:37:50,966 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:50,979 p=5597 u=student |  TASK [template_service_broker : slurp] *************************************************************************
2019-03-23 14:37:51,374 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:37:51,387 p=5597 u=student |  TASK [template_service_broker : Apply template file] ***********************************************************
2019-03-23 14:37:52,860 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:52,874 p=5597 u=student |  TASK [template_service_broker : Reconcile with RBAC file] ******************************************************
2019-03-23 14:37:54,029 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:37:54,051 p=5597 u=student |  TASK [template_service_broker : Verify that TSB is running] ****************************************************
2019-03-23 14:37:55,527 p=5597 u=student |  FAILED - RETRYING: Verify that TSB is running (60 retries left).
2019-03-23 14:38:06,874 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:38:06,886 p=5597 u=student |  TASK [template_service_broker : slurp] *************************************************************************
2019-03-23 14:38:07,233 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:38:07,247 p=5597 u=student |  TASK [template_service_broker : Register TSB with broker] ******************************************************
2019-03-23 14:38:07,982 p=5597 u=student |  changed: [master.lab.example.com]
2019-03-23 14:38:07,995 p=5597 u=student |  TASK [template_service_broker : file] **************************************************************************
2019-03-23 14:38:08,387 p=5597 u=student |  ok: [master.lab.example.com]
2019-03-23 14:38:08,404 p=5597 u=student |  TASK [template_service_broker : include_tasks] *****************************************************************
2019-03-23 14:38:08,427 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:08,435 p=5597 u=student |  PLAY [Service Catalog Install Checkpoint End] ******************************************************************
2019-03-23 14:38:08,444 p=5597 u=student |  TASK [Set Service Catalog install 'Complete'] ******************************************************************
2019-03-23 14:38:08,497 p=5597 u=student |  ok: [workstation.lab.example.com]
2019-03-23 14:38:08,504 p=5597 u=student |  PLAY [Management Install Checkpoint Start] *********************************************************************
2019-03-23 14:38:08,512 p=5597 u=student |  TASK [Set Management install 'In Progress'] ********************************************************************
2019-03-23 14:38:08,534 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:38:08,541 p=5597 u=student |  PLAY [Setup CFME] **********************************************************************************************
2019-03-23 14:38:08,556 p=5597 u=student |  TASK [Gathering Facts] *****************************************************************************************
2019-03-23 14:38:08,575 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:08,587 p=5597 u=student |  TASK [Create a temporary place to evaluate the PV templates] ***************************************************
2019-03-23 14:38:08,608 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:08,621 p=5597 u=student |  TASK [openshift_management : Run pre-install Management validation checks] *************************************
2019-03-23 14:38:08,642 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:08,655 p=5597 u=student |  TASK [openshift_manageiq : Add Management Infrastructure project] **********************************************
2019-03-23 14:38:08,675 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:08,688 p=5597 u=student |  TASK [openshift_manageiq : Create Admin and Image Inspector Service Account] ***********************************
2019-03-23 14:38:08,713 p=5597 u=student |  skipping: [master.lab.example.com] => (item=management-admin) 
2019-03-23 14:38:08,719 p=5597 u=student |  skipping: [master.lab.example.com] => (item=inspector-admin) 
2019-03-23 14:38:08,731 p=5597 u=student |  TASK [openshift_manageiq : Create manageiq cluster role] *******************************************************
2019-03-23 14:38:08,751 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:08,764 p=5597 u=student |  TASK [openshift_manageiq : Create Hawkular Metrics Admin Cluster Role] *****************************************
2019-03-23 14:38:08,785 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:08,797 p=5597 u=student |  TASK [openshift_manageiq : Configure role/user permissions] ****************************************************
2019-03-23 14:38:08,826 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'role', u'resource_name': u'admin', u'user': u'management-admin'}) 
2019-03-23 14:38:08,835 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'role', u'resource_name': u'admin', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-23 14:38:08,844 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'management-infra-admin', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-23 14:38:08,854 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'cluster-reader', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-23 14:38:08,860 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'scc', u'resource_name': u'privileged', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-23 14:38:08,866 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'system:image-puller', u'user': u'system:serviceaccount:management-infra:inspector-admin'}) 
2019-03-23 14:38:08,872 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'scc', u'resource_name': u'privileged', u'user': u'system:serviceaccount:management-infra:inspector-admin'}) 
2019-03-23 14:38:08,882 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'self-provisioner', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-23 14:38:08,888 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'hawkular-metrics-admin', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-23 14:38:08,901 p=5597 u=student |  TASK [openshift_manageiq : Configure 3_2 role/user permissions] ************************************************
2019-03-23 14:38:08,931 p=5597 u=student |  skipping: [master.lab.example.com] => (item={u'resource_kind': u'cluster-role', u'resource_name': u'system:image-auditor', u'user': u'system:serviceaccount:management-infra:management-admin'}) 
2019-03-23 14:38:08,945 p=5597 u=student |  TASK [openshift_management : Ensure the Management 'openshift-management' namespace exists] ********************
2019-03-23 14:38:08,966 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:08,978 p=5597 u=student |  TASK [openshift_management : Create and Authorize Management Accounts] *****************************************
2019-03-23 14:38:09,000 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:09,012 p=5597 u=student |  TASK [openshift_management : Determine the correct NFS host if required] ***************************************
2019-03-23 14:38:09,032 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:09,044 p=5597 u=student |  TASK [openshift_management : Create required NFS exports for Management app storage] ***************************
2019-03-23 14:38:09,065 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:09,078 p=5597 u=student |  TASK [openshift_management : Note Storage Type -  External NFS] ************************************************
2019-03-23 14:38:09,099 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:09,114 p=5597 u=student |  TASK [openshift_management : Note Storage Type - Cloud Provider] ***********************************************
2019-03-23 14:38:09,138 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:09,152 p=5597 u=student |  TASK [openshift_management : Note Storage Type - Preconfigured] ************************************************
2019-03-23 14:38:09,176 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:09,189 p=5597 u=student |  TASK [openshift_management : Install the Management app and PV templates] **************************************
2019-03-23 14:38:09,215 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:09,229 p=5597 u=student |  TASK [openshift_management : Create the required App and DB PVs using nfs] *************************************
2019-03-23 14:38:09,251 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:09,266 p=5597 u=student |  TASK [openshift_management : Note the correct ext-db template name] ********************************************
2019-03-23 14:38:09,289 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:09,303 p=5597 u=student |  TASK [openshift_management : Note the correct podified db template name] ***************************************
2019-03-23 14:38:09,323 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:09,335 p=5597 u=student |  TASK [openshift_management : Ensure the Management App is created] *********************************************
2019-03-23 14:38:09,356 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:09,371 p=5597 u=student |  TASK [openshift_management : Wait for the app to come up. May take several minutes, 30s check intervals, 30 retries] ***
2019-03-23 14:38:09,389 p=5597 u=student |  skipping: [master.lab.example.com]
2019-03-23 14:38:09,395 p=5597 u=student |  PLAY [Management Install Checkpoint End] ***********************************************************************
2019-03-23 14:38:09,404 p=5597 u=student |  TASK [Set Management install 'Complete'] ***********************************************************************
2019-03-23 14:38:09,424 p=5597 u=student |  skipping: [workstation.lab.example.com]
2019-03-23 14:38:09,428 p=5597 u=student |  PLAY RECAP *****************************************************************************************************
2019-03-23 14:38:09,428 p=5597 u=student |  localhost                  : ok=13   changed=0    unreachable=0    failed=0   
2019-03-23 14:38:09,428 p=5597 u=student |  master.lab.example.com     : ok=600  changed=251  unreachable=0    failed=0   
2019-03-23 14:38:09,428 p=5597 u=student |  node1.lab.example.com      : ok=133  changed=51   unreachable=0    failed=0   
2019-03-23 14:38:09,428 p=5597 u=student |  node2.lab.example.com      : ok=133  changed=51   unreachable=0    failed=0   
2019-03-23 14:38:09,428 p=5597 u=student |  services.lab.example.com   : ok=30   changed=1    unreachable=0    failed=0   
2019-03-23 14:38:09,429 p=5597 u=student |  workstation.lab.example.com : ok=21   changed=0    unreachable=0    failed=0   
2019-03-23 14:38:09,429 p=5597 u=student |  INSTALLER STATUS ***********************************************************************************************
2019-03-23 14:38:09,431 p=5597 u=student |  Initialization             : Complete (0:00:15)
2019-03-23 14:38:09,431 p=5597 u=student |  Health Check               : Complete (0:00:15)
2019-03-23 14:38:09,431 p=5597 u=student |  etcd Install               : Complete (0:00:41)
2019-03-23 14:38:09,432 p=5597 u=student |  NFS Install                : Complete (0:00:09)
2019-03-23 14:38:09,432 p=5597 u=student |  Master Install             : Complete (0:01:39)
2019-03-23 14:38:09,432 p=5597 u=student |  Master Additional Install  : Complete (0:00:44)
2019-03-23 14:38:09,432 p=5597 u=student |  Node Install               : Complete (0:02:08)
2019-03-23 14:38:09,433 p=5597 u=student |  Hosted Install             : Complete (0:01:34)
2019-03-23 14:38:09,433 p=5597 u=student |  Web Console Install        : Complete (0:00:47)
2019-03-23 14:38:09,433 p=5597 u=student |  Service Catalog Install    : Complete (0:01:36)
